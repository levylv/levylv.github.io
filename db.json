{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/my/1.png","path":"images/my/1.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/alipay.png","path":"uploads/alipay.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/uploads/weichatpay.png","path":"uploads/weichatpay.png","modified":0,"renderable":1},{"_id":"source/images/my/2.png","path":"images/my/2.png","modified":0,"renderable":0},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/debug.log","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217256},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1591260217254},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1591260217254},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1591260217254},{"_id":"themes/next/_config.yml","hash":"dcf8e2f8aedaa22e1d743c2d6081b84f5fb321be","modified":1591260217255},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1591260217256},{"_id":"themes/next/bower.json","hash":"be0a430362cb73a7e3cf9ecf51a67edf8214b637","modified":1591260217255},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1591260217278},{"_id":"source/_posts/pointer-of-C.md","hash":"95fa9132bc9f81b1db64a0fb7acdea52e112057e","modified":1591256607406},{"_id":"source/_posts/questions-about-graph-and-session-of-tensorflow.md","hash":"7444a6e74d69dfa9a2dae72b17bbda9ca8530ddb","modified":1591256607406},{"_id":"source/_posts/remote-desktop-between-ubuntu-and-windows.md","hash":"5ba8f71b7115d1a2a647ecb0bef2ee2c1c17d03e","modified":1591256607406},{"_id":"source/_posts/reinstall-ubuntu16-04.md","hash":"c49033db633d660ecb9b0d10941c6ac057f68269","modified":1591256607406},{"_id":"source/_posts/rsa.markdown","hash":"1f424a292cbf4af59735aad299cab84e8450cf8f","modified":1591256607406},{"_id":"source/_posts/some-questions-about-ctex-and-texlive.md","hash":"242701df40b1cbbd3d690bae999386721f090ea4","modified":1591256607407},{"_id":"source/_posts/start-to-use-ubuntu.markdown","hash":"1e78fb657431a43f0bc5fa611b89ce69bfe5c696","modified":1591256607407},{"_id":"source/_posts/variable-scope-and-name-scopeof-Tensorflow.md","hash":"347e0caf13458964f0f7ace5edde771235a69300","modified":1591256607407},{"_id":"source/_posts/svm.markdown","hash":"abebd80aa0b9733cd6e5da53fa1b42aa6e220332","modified":1591256607407},{"_id":"source/_posts/vim-youcompleteme.md","hash":"36c0eff72c4aaea511b039282817bfd57ac8557b","modified":1591256607408},{"_id":"source/tags/index.md","hash":"a41b6d2bd39231f3e05a6d508a6561036a581403","modified":1591256607410},{"_id":"themes/next/languages/de.yml","hash":"306db8c865630f32c6b6260ade9d3209fbec8011","modified":1591260217256},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1591260217256},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1591260217257},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1591260217257},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1591260217257},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1591260217258},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1591260217258},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1591260217258},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1591260217258},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1591260217259},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1591260217259},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1591260217259},{"_id":"themes/next/languages/ru.yml","hash":"1549a7c2fe23caa7cbedcd0aa2b77c46e57caf27","modified":1591260217259},{"_id":"themes/next/layout/_layout.swig","hash":"98910163f4bb2856692fdbb55d6e82233fb0c24e","modified":1591260217260},{"_id":"themes/next/layout/archive.swig","hash":"5de4dca06b05d99e4f6bad617a4b8f4f3592fb01","modified":1591260217275},{"_id":"themes/next/layout/category.swig","hash":"82e7bc278559b4335ad974659104eaaf04863032","modified":1591260217276},{"_id":"themes/next/layout/page.swig","hash":"baa667bc801349d5c4984c0f172973d3780400df","modified":1591260217277},{"_id":"themes/next/layout/index.swig","hash":"03e8a2cda03bad42ac0cb827025eb81f95d496a2","modified":1591260217276},{"_id":"themes/next/layout/post.swig","hash":"2d5f8d7f0a96b611e2d5a5e4d111fc17726a990f","modified":1591260217277},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1591260217279},{"_id":"themes/next/scripts/openfile.js","hash":"eec41e9ff5dda592a567210cfbc2c369cfbde87d","modified":1591260217280},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1591260217279},{"_id":"themes/next/layout/schedule.swig","hash":"f93c53f6fd5c712584f6efba6f770c30fa8a3e80","modified":1591260217277},{"_id":"themes/next/layout/tag.swig","hash":"2e73ee478e981092ea9a5d10dd472a9461db395b","modified":1591260217278},{"_id":"themes/next/source/.DS_Store","hash":"4017d53f5015aad12744b8c46d60e463741b3ad3","modified":1591260217282},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1591260217420},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1591260217420},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1591260217421},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217308},{"_id":"source/images/my/1.png","hash":"7d2b9aeddb64e5fe03ea7c41068bb5c31f658b27","modified":1591256607408},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1591260217260},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1591260217260},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1591260217260},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1591260217261},{"_id":"themes/next/layout/_macro/post.swig","hash":"9481f43ed356e00df7b519e92ad0becebc9e1505","modified":1591260217261},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1591260217261},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1591260217262},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a2b213c1a7c37cd6e4749f2018371f4c1f4f0d23","modified":1591260217261},{"_id":"themes/next/layout/_partials/comments.swig","hash":"1c7d3c975e499b9aa3119d6724b030b7b00fc87e","modified":1591260217262},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1591260217262},{"_id":"themes/next/layout/_partials/head.swig","hash":"6a7eb93d8aa7d4baa472890bd666b921f449d8af","modified":1591260217263},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1591260217264},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1591260217264},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1591260217264},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1591260217264},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1591260217266},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1591260217266},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9baf90f7c40b3b10f288e9268c3191e895890cea","modified":1591260217267},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1591260217272},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1591260217272},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1591260217272},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1591260217272},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1591260217273},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1591260217273},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1591260217280},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1591260217280},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1591260217281},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1591260217281},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1591260217281},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1591260217281},{"_id":"themes/next/scripts/tags/note.js","hash":"21b102db8a01c7b15ae2c0ea3ef3d4cf807ec6ed","modified":1591260217282},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1591260217308},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1591260217309},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1591260217309},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1591260217309},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1591260217309},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1591260217310},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1591260217310},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591260217311},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1591260217310},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1591260217311},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1591260217311},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591260217311},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1591260217311},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1591260217312},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1591260217311},{"_id":"themes/next/source/uploads/alipay.png","hash":"4c4c4cf01bbdaa2f5e8280ab79f00529f9069d9c","modified":1591260217418},{"_id":"themes/next/source/uploads/avatar.png","hash":"23c03d14b32d6fed422fa2a21f4f4e437b510341","modified":1591260217419},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217266},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217266},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217301},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217302},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217302},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217307},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1591260217308},{"_id":"themes/next/source/uploads/weichatpay.png","hash":"72cd85497ee9a0c9a8d18cdac47caf5a6fdff78b","modified":1591260217420},{"_id":"source/images/my/2.png","hash":"84000b4ca881203f242c1f928fad78660bc432a8","modified":1591256607410},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1591260217263},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1591260217263},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1591260217265},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1591260217265},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1591260217265},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1591260217265},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1591260217265},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1591260217266},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1591260217266},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1591260217266},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1591260217267},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1591260217267},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1591260217267},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1591260217268},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1591260217268},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1591260217268},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1591260217268},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1591260217268},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"3358d11b9a26185a2d36c96049e4340e701646e4","modified":1591260217268},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1591260217269},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1591260217269},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1591260217269},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1591260217269},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1591260217270},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1591260217270},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1591260217270},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1591260217270},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"abb92620197a16ed2c0775edf18a0f044a82256e","modified":1591260217271},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"1d0d01aaeb7bcde3671263d736718f8837c20182","modified":1591260217271},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1591260217271},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1591260217274},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1591260217274},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1591260217275},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"1f349aa30dd1f7022f7d07a1f085eea5ace3f26d","modified":1591260217274},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1591260217301},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1591260217302},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1591260217302},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1591260217307},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1591260217308},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d6a793bcada68d4b6c58392546bc48a482e4a7d3","modified":1591260217308},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1591260217313},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1591260217313},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1591260217313},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1591260217313},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1591260217313},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1591260217314},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1591260217314},{"_id":"themes/next/source/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1591260217314},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1591260217312},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1591260217314},{"_id":"themes/next/source/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1591260217315},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1591260217318},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1591260217321},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1591260217321},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1591260217321},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1591260217322},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1591260217327},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1591260217328},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1591260217328},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1591260217328},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1591260217329},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1591260217330},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1591260217330},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1591260217330},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1591260217331},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1591260217343},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1591260217344},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1591260217345},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1591260217345},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1591260217345},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1591260217346},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1591260217346},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1591260217346},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1591260217346},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1591260217347},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1591260217347},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1591260217347},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1591260217348},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1591260217347},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1591260217348},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1591260217348},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1591260217349},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1591260217349},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1591260217349},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1591260217349},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1591260217350},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1591260217350},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1591260217351},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1591260217351},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1591260217355},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1591260217355},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1591260217416},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1591260217417},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1591260217417},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1591260217344},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1591260217273},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1591260217273},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1591260217300},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1591260217282},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1591260217283},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1591260217283},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1591260217283},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1591260217283},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1591260217288},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1591260217295},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1591260217300},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1591260217300},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1591260217301},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1591260217301},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1591260217301},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1591260217303},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1591260217303},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1591260217303},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1591260217303},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1591260217303},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1591260217303},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1591260217304},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1591260217305},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1591260217305},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1591260217305},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1591260217306},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1591260217306},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1591260217306},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"feed6b09dd32626211e79ca7c0f4f798942e54f1","modified":1591260217307},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1591260217307},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1591260217307},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1591260217307},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1591260217307},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1591260217314},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1591260217318},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1591260217322},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1591260217323},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1591260217323},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1591260217323},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1591260217323},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1591260217324},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1591260217325},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1591260217326},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1591260217327},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1591260217329},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1591260217329},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1591260217331},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1591260217332},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1591260217332},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1591260217354},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1591260217354},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1591260217316},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1591260217317},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1591260217317},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1591260217342},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1591260217343},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1591260217415},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1591260217284},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1591260217284},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1591260217284},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1591260217285},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1591260217285},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1591260217285},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"740d37f428b8f4574a76fc95cc25e50e0565f45e","modified":1591260217286},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1591260217285},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1591260217286},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1591260217286},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1591260217287},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1591260217287},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1591260217287},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1591260217287},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1591260217288},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1591260217289},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1591260217289},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1591260217289},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"88c7d75646b66b168213190ee4cd874609afd5e3","modified":1591260217290},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1591260217290},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ed88c8b51d0517759c777e71a6bfbe2907bcd994","modified":1591260217290},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1591260217290},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1591260217291},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1591260217291},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1591260217291},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"08a500b2984f109b751f3697ca33172d1340591a","modified":1591260217292},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1591260217292},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"4fda5d38c6c8d910e3bf5c74a48a8d4a3f3dc73d","modified":1591260217292},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"468bc734f47209096588ef1a8e55e60a3b12aa63","modified":1591260217292},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1591260217293},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1591260217293},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1591260217293},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1591260217294},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1591260217294},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1591260217294},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1591260217295},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1591260217295},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1591260217296},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1591260217296},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1591260217296},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1591260217296},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"dfc86d37f5b580977d82af6ef835082d09a0c499","modified":1591260217297},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1591260217297},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1591260217298},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1591260217297},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1591260217298},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1591260217298},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1591260217299},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1591260217298},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1591260217299},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1591260217299},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"bb3be8374c31c372ed0995bd8030d2b920d581de","modified":1591260217300},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1591260217304},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1591260217305},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1591260217306},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1591260217315},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1591260217316},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1591260217316},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1591260217316},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1591260217324},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1591260217324},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1591260217324},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1591260217325},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1591260217325},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1591260217325},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1591260217336},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1591260217294},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1591260217334},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1591260217341},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1591260217320},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1591260217353},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1591260217339},{"_id":"public/tags/index.html","hash":"41b8803583d3882d8e8073eed216fcfcc2690087","modified":1591260699996},{"_id":"public/2017/07/18/variable-scope-and-name-scopeof-Tensorflow/index.html","hash":"e9f902d52dfe9110e452f19d48a37223ea63913c","modified":1591260699996},{"_id":"public/2017/07/15/questions-about-graph-and-session-of-tensorflow/index.html","hash":"0b73f37201bb64a4d16e5a024c85732af37247a7","modified":1591260699997},{"_id":"public/2017/07/07/some-questions-about-ctex-and-texlive/index.html","hash":"3f191bb3c2ed596d08224d0938b7f23c197bf77b","modified":1591260699997},{"_id":"public/2017/06/28/pointer-of-C/index.html","hash":"6bb8aa2deebb282511d4ff272571e55ab1d88818","modified":1591260699997},{"_id":"public/2017/06/13/remote-desktop-between-ubuntu-and-windows/index.html","hash":"d63fb70eb190d8bc0d4222879edcc999b5c5ae6c","modified":1591260699997},{"_id":"public/2017/06/12/vim-youcompleteme/index.html","hash":"7cf916806a98a3439861f31b1221e67afa648d3f","modified":1591260699997},{"_id":"public/2017/06/12/reinstall-ubuntu16-04/index.html","hash":"8cdc4749d869addacc5cf91bac8f09ba6bd3ea0a","modified":1591260699997},{"_id":"public/2016/05/10/svm/index.html","hash":"398cb7459374622106dc09ad76f0738b2b9bccd0","modified":1591260699997},{"_id":"public/2016/04/21/rsa/index.html","hash":"4bf6bdb83d10e0cbd96a0a30e73b3172bb14821b","modified":1591260699997},{"_id":"public/2016/04/19/start-to-use-ubuntu/index.html","hash":"c3e5144b2415163c0c46ccd7f3471bbd2a6a8a6f","modified":1591260699997},{"_id":"public/archives/index.html","hash":"0af80789252b458b308a0e834f94c98f9930640b","modified":1591260699997},{"_id":"public/archives/2016/index.html","hash":"40d423f2d23eba5eec53e1716aff72545ee7d767","modified":1591260699998},{"_id":"public/archives/2016/04/index.html","hash":"ef43fc0d942ef3804079b2a3d3e14b44857e43a6","modified":1591260699998},{"_id":"public/archives/2016/05/index.html","hash":"e4b504da146f40c697d51e01ada4b6bbc65bb9a1","modified":1591260699998},{"_id":"public/archives/2017/index.html","hash":"223a6ea8442bd823f97f60d348eaf4ad57174d85","modified":1591260699998},{"_id":"public/archives/2017/06/index.html","hash":"887826ce20203dc8af6555363e3379838d2b54e6","modified":1591260699998},{"_id":"public/archives/2017/07/index.html","hash":"f58f9020695933dc8aea2db635f845dcfc6dfc99","modified":1591260699998},{"_id":"public/index.html","hash":"5242d71383e8ec4626a3505876b0946df6d0b64b","modified":1591260699998},{"_id":"public/tags/C-C/index.html","hash":"b4df4a8af75ab2bbb101526074b8e623ba946de4","modified":1591260699998},{"_id":"public/tags/Tensorflow/index.html","hash":"7336fea202c06ba9b37bf6afd6e8e2ceb9e5707b","modified":1591260699998},{"_id":"public/tags/Ubuntu/index.html","hash":"cffa841e8dc72b59ec351986a9a0ea3975df3f72","modified":1591260699998},{"_id":"public/tags/Algorithm/index.html","hash":"576cf30c3d14ea5ecc5dbf3beb81c32bb87beb6e","modified":1591260699998},{"_id":"public/tags/Latex/index.html","hash":"a15868c54adc8e82b8a69d1f5704becc55b675a4","modified":1591260699998},{"_id":"public/tags/Machine-Learning/index.html","hash":"a8dca163b8ec01c9c77284bb77191e08f458dd32","modified":1591260699998},{"_id":"public/tags/Vim/index.html","hash":"c3a483a3d1e5b718a940f66e8375c208367dcb40","modified":1591260699999},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1591260700007},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1591260700007},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1591260700007},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1591260700007},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1591260700007},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1591260700007},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591260700007},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1591260700007},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1591260700007},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1591260700007},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1591260700008},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1591260700008},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1591260700008},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1591260700008},{"_id":"public/uploads/alipay.png","hash":"4c4c4cf01bbdaa2f5e8280ab79f00529f9069d9c","modified":1591260700008},{"_id":"public/uploads/avatar.png","hash":"23c03d14b32d6fed422fa2a21f4f4e437b510341","modified":1591260700008},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1591260700008},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1591260700008},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1591260700008},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1591260700008},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1591260700008},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1591260700008},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1591260700008},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1591260700008},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1591260700009},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1591260700009},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1591260700009},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1591260700009},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1591260700009},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1591260700009},{"_id":"public/images/my/1.png","hash":"7d2b9aeddb64e5fe03ea7c41068bb5c31f658b27","modified":1591260700537},{"_id":"public/uploads/weichatpay.png","hash":"72cd85497ee9a0c9a8d18cdac47caf5a6fdff78b","modified":1591260700540},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1591260700555},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1591260700555},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1591260700568},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1591260700568},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1591260700568},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1591260700568},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1591260700569},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1591260700569},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1591260700569},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1591260700569},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1591260700569},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1591260700569},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1591260700569},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1591260700569},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1591260700569},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1591260700569},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1591260700569},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1591260700569},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1591260700569},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1591260700569},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1591260700569},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1591260700570},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1591260700570},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1591260700570},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1591260700571},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1591260700571},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1591260700571},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1591260700571},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1591260700571},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1591260700571},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1591260700571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1591260700571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1591260700571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1591260700571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1591260700571},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1591260700572},{"_id":"public/lib/fastclick/README.html","hash":"c07b353b4efa132290ec4479102a55d80ac6d300","modified":1591260700572},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"06811ca2f722dead021493457f27cdc264ef928d","modified":1591260700572},{"_id":"public/lib/jquery_lazyload/README.html","hash":"a08fccd381c8fdb70ba8974b208254c5ba23a95f","modified":1591260700572},{"_id":"public/css/main.css","hash":"6c4311dbf26d505883641efedff570eebfaf784c","modified":1591260700572},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1591260700572},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1591260700572},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1591260700572},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1591260700572},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1591260700572},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1591260700572},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1591260700572},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1591260700572},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1591260700572},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1591260700572},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1591260700572},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1591260700572},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1591260700572},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1591260700572},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1591260700573},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1591260700573},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1591260700573},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1591260700573},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1591260700573},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1591260700573},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1591260700580},{"_id":"public/images/my/2.png","hash":"84000b4ca881203f242c1f928fad78660bc432a8","modified":1591260700584},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1591260700616}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2019-11-13T03:21:44.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2019-11-13 11:21:44\ntype: \"tags\"\ncomments: false\n---\n","updated":"2020-06-04T07:43:27.410Z","path":"tags/index.html","layout":"page","_id":"ckb0jj8yl00018edk6b9k2ahw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"C语言中的指针详解","date":"2017-06-28T09:46:54.000Z","_content":"\n最近在创建动态二维数组(数组大小为变量)的时候，遇到了一些关于指针的问题，经过一番试验和研究，将一些比较容易出错的地方进行了归纳整理。\n\n# 数组名和指针\n```c\nint a[4] = {0};\nint *b = new int[4];\ncout << sizeof(a) << endl;  // 4 * sizeof(int)\ncout << sizeof(b) << endl; // sizeof(int*)\n```\n<!-- more -->\n对于一个数组，数组名从值上来讲就等于它第一个元素的地址，但它和指针其实是有区别的:\n\n- 你可以修改指针的内容，但无法修改数组名的指向。\n- 对于sizeof，数组名得到的是整个数组的大小，指针则是指针类型占的内存大小。\n\n# 数组指针和指针数组\n```c\nint a[4] = {0};\nint (* b)[4] = &a;\nint *c[4];\ncout << sizeof(b) << endl; // sizeof(int*)\ncout << sizeof(c) << endl; // sizeof(int*) * 4\n```\n上述b就是一个数组指针，该指针指向一个长度为4的数组，指针移动1则对应移动4个int。c则是指针数组，b和c千万不要搞混，[]的优先级要高于\\*, 所以c是一个数组，但该数组储存的都是指针。注意，尽管b是数组指针，但是其占的内存依然是指针类型占的内存大小。\n\n \n提到数组指针后，就要讲到我的出发点二维数组了。\n```c\nint **a = new int[2][4]; // 错\nint(*a)[4] = new int[2][4]; // 对\n```\n我刚开始就错写成了第一种形式，发现这样会出错。我的想法是对于int[0]，int[1], int[2]里面储存的是int[4]数组的值，这个值应该就是一位维组名，我等价得以为是指向首个元素的地址，也就是``int *``类型，那么a就应该是指向指针的指针。\n\n但事实上，正如之前所说，数组名只是在值上等于指向首个元素的地址，但两者并不等价！只是在参数传递，数组名赋值给指针时两者值相等！仔细去想，如果按照我一开始的这种想法，sizeof(\\*a)就只是一个指针的内存，无法代表一维数组的大小。\n\n因此，int[0]中存储的就只是一维数组名，然后再对该一维数组名取地址，才是正确的指向int[0]的地址，同样的，这个值也是和二维数组名在值上相同，但是并不等价。\n\n```c\nint *a = new int[2];\nint (*a)[3] = new int[2][3];\nint(* a)[3][4] = new int[2][3][4];\n```\n以上才是正确的形式，多维可以类推。\n\n# 总结\n- 数组指针， 不能因为数组名在值上等于指针，而等价为指向指针的指针。\n- 指针数组，在值上等价与指向指针的指针，可以将数组名赋给指向指针的指针。\n- 讲真，涉及到多维数组，既然用了c++,那还是用vector吧，简单方便，并且函数传递时是值传递，也可以用引用传递来实现实参改变，比c方便太多了！\n\n\n","source":"_posts/pointer-of-C.md","raw":"---\ntitle: C语言中的指针详解\ndate: 2017-06-28 17:46:54\ntags: C/C++\n---\n\n最近在创建动态二维数组(数组大小为变量)的时候，遇到了一些关于指针的问题，经过一番试验和研究，将一些比较容易出错的地方进行了归纳整理。\n\n# 数组名和指针\n```c\nint a[4] = {0};\nint *b = new int[4];\ncout << sizeof(a) << endl;  // 4 * sizeof(int)\ncout << sizeof(b) << endl; // sizeof(int*)\n```\n<!-- more -->\n对于一个数组，数组名从值上来讲就等于它第一个元素的地址，但它和指针其实是有区别的:\n\n- 你可以修改指针的内容，但无法修改数组名的指向。\n- 对于sizeof，数组名得到的是整个数组的大小，指针则是指针类型占的内存大小。\n\n# 数组指针和指针数组\n```c\nint a[4] = {0};\nint (* b)[4] = &a;\nint *c[4];\ncout << sizeof(b) << endl; // sizeof(int*)\ncout << sizeof(c) << endl; // sizeof(int*) * 4\n```\n上述b就是一个数组指针，该指针指向一个长度为4的数组，指针移动1则对应移动4个int。c则是指针数组，b和c千万不要搞混，[]的优先级要高于\\*, 所以c是一个数组，但该数组储存的都是指针。注意，尽管b是数组指针，但是其占的内存依然是指针类型占的内存大小。\n\n \n提到数组指针后，就要讲到我的出发点二维数组了。\n```c\nint **a = new int[2][4]; // 错\nint(*a)[4] = new int[2][4]; // 对\n```\n我刚开始就错写成了第一种形式，发现这样会出错。我的想法是对于int[0]，int[1], int[2]里面储存的是int[4]数组的值，这个值应该就是一位维组名，我等价得以为是指向首个元素的地址，也就是``int *``类型，那么a就应该是指向指针的指针。\n\n但事实上，正如之前所说，数组名只是在值上等于指向首个元素的地址，但两者并不等价！只是在参数传递，数组名赋值给指针时两者值相等！仔细去想，如果按照我一开始的这种想法，sizeof(\\*a)就只是一个指针的内存，无法代表一维数组的大小。\n\n因此，int[0]中存储的就只是一维数组名，然后再对该一维数组名取地址，才是正确的指向int[0]的地址，同样的，这个值也是和二维数组名在值上相同，但是并不等价。\n\n```c\nint *a = new int[2];\nint (*a)[3] = new int[2][3];\nint(* a)[3][4] = new int[2][3][4];\n```\n以上才是正确的形式，多维可以类推。\n\n# 总结\n- 数组指针， 不能因为数组名在值上等于指针，而等价为指向指针的指针。\n- 指针数组，在值上等价与指向指针的指针，可以将数组名赋给指向指针的指针。\n- 讲真，涉及到多维数组，既然用了c++,那还是用vector吧，简单方便，并且函数传递时是值传递，也可以用引用传递来实现实参改变，比c方便太多了！\n\n\n","slug":"pointer-of-C","published":1,"updated":"2020-06-04T07:43:27.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8yg00008edk7iqu6xgw","content":"<p>最近在创建动态二维数组(数组大小为变量)的时候，遇到了一些关于指针的问题，经过一番试验和研究，将一些比较容易出错的地方进行了归纳整理。</p>\n<h1 id=\"数组名和指针\"><a href=\"#数组名和指针\" class=\"headerlink\" title=\"数组名和指针\"></a>数组名和指针</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *b = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(a) &lt;&lt; <span class=\"built_in\">endl</span>;  <span class=\"comment\">// 4 * sizeof(int)</span></span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(b) &lt;&lt; <span class=\"built_in\">endl</span>; <span class=\"comment\">// sizeof(int*)</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>对于一个数组，数组名从值上来讲就等于它第一个元素的地址，但它和指针其实是有区别的:</p>\n<ul>\n<li>你可以修改指针的内容，但无法修改数组名的指向。</li>\n<li>对于sizeof，数组名得到的是整个数组的大小，指针则是指针类型占的内存大小。</li>\n</ul>\n<h1 id=\"数组指针和指针数组\"><a href=\"#数组指针和指针数组\" class=\"headerlink\" title=\"数组指针和指针数组\"></a>数组指针和指针数组</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> (* b)[<span class=\"number\">4</span>] = &amp;a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *c[<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(b) &lt;&lt; <span class=\"built_in\">endl</span>; <span class=\"comment\">// sizeof(int*)</span></span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(c) &lt;&lt; <span class=\"built_in\">endl</span>; <span class=\"comment\">// sizeof(int*) * 4</span></span><br></pre></td></tr></table></figure>\n<p>上述b就是一个数组指针，该指针指向一个长度为4的数组，指针移动1则对应移动4个int。c则是指针数组，b和c千万不要搞混，[]的优先级要高于*, 所以c是一个数组，但该数组储存的都是指针。注意，尽管b是数组指针，但是其占的内存依然是指针类型占的内存大小。</p>\n<p>提到数组指针后，就要讲到我的出发点二维数组了。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> **a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">4</span>]; <span class=\"comment\">// 错</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>(*a)[<span class=\"number\">4</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">4</span>]; <span class=\"comment\">// 对</span></span><br></pre></td></tr></table></figure></p>\n<p>我刚开始就错写成了第一种形式，发现这样会出错。我的想法是对于int[0]，int[1], int[2]里面储存的是int[4]数组的值，这个值应该就是一位维组名，我等价得以为是指向首个元素的地址，也就是<code>int *</code>类型，那么a就应该是指向指针的指针。</p>\n<p>但事实上，正如之前所说，数组名只是在值上等于指向首个元素的地址，但两者并不等价！只是在参数传递，数组名赋值给指针时两者值相等！仔细去想，如果按照我一开始的这种想法，sizeof(*a)就只是一个指针的内存，无法代表一维数组的大小。</p>\n<p>因此，int[0]中存储的就只是一维数组名，然后再对该一维数组名取地址，才是正确的指向int[0]的地址，同样的，这个值也是和二维数组名在值上相同，但是并不等价。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> (*a)[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span>(* a)[<span class=\"number\">3</span>][<span class=\"number\">4</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>][<span class=\"number\">4</span>];</span><br></pre></td></tr></table></figure>\n<p>以上才是正确的形式，多维可以类推。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>数组指针， 不能因为数组名在值上等于指针，而等价为指向指针的指针。</li>\n<li>指针数组，在值上等价与指向指针的指针，可以将数组名赋给指向指针的指针。</li>\n<li>讲真，涉及到多维数组，既然用了c++,那还是用vector吧，简单方便，并且函数传递时是值传递，也可以用引用传递来实现实参改变，比c方便太多了！</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>最近在创建动态二维数组(数组大小为变量)的时候，遇到了一些关于指针的问题，经过一番试验和研究，将一些比较容易出错的地方进行了归纳整理。</p>\n<h1 id=\"数组名和指针\"><a href=\"#数组名和指针\" class=\"headerlink\" title=\"数组名和指针\"></a>数组名和指针</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *b = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(a) &lt;&lt; <span class=\"built_in\">endl</span>;  <span class=\"comment\">// 4 * sizeof(int)</span></span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(b) &lt;&lt; <span class=\"built_in\">endl</span>; <span class=\"comment\">// sizeof(int*)</span></span><br></pre></td></tr></table></figure>","more":"<p>对于一个数组，数组名从值上来讲就等于它第一个元素的地址，但它和指针其实是有区别的:</p>\n<ul>\n<li>你可以修改指针的内容，但无法修改数组名的指向。</li>\n<li>对于sizeof，数组名得到的是整个数组的大小，指针则是指针类型占的内存大小。</li>\n</ul>\n<h1 id=\"数组指针和指针数组\"><a href=\"#数组指针和指针数组\" class=\"headerlink\" title=\"数组指针和指针数组\"></a>数组指针和指针数组</h1><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> a[<span class=\"number\">4</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"><span class=\"keyword\">int</span> (* b)[<span class=\"number\">4</span>] = &amp;a;</span><br><span class=\"line\"><span class=\"keyword\">int</span> *c[<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(b) &lt;&lt; <span class=\"built_in\">endl</span>; <span class=\"comment\">// sizeof(int*)</span></span><br><span class=\"line\"><span class=\"built_in\">cout</span> &lt;&lt; <span class=\"keyword\">sizeof</span>(c) &lt;&lt; <span class=\"built_in\">endl</span>; <span class=\"comment\">// sizeof(int*) * 4</span></span><br></pre></td></tr></table></figure>\n<p>上述b就是一个数组指针，该指针指向一个长度为4的数组，指针移动1则对应移动4个int。c则是指针数组，b和c千万不要搞混，[]的优先级要高于*, 所以c是一个数组，但该数组储存的都是指针。注意，尽管b是数组指针，但是其占的内存依然是指针类型占的内存大小。</p>\n<p>提到数组指针后，就要讲到我的出发点二维数组了。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> **a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">4</span>]; <span class=\"comment\">// 错</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>(*a)[<span class=\"number\">4</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">4</span>]; <span class=\"comment\">// 对</span></span><br></pre></td></tr></table></figure></p>\n<p>我刚开始就错写成了第一种形式，发现这样会出错。我的想法是对于int[0]，int[1], int[2]里面储存的是int[4]数组的值，这个值应该就是一位维组名，我等价得以为是指向首个元素的地址，也就是<code>int *</code>类型，那么a就应该是指向指针的指针。</p>\n<p>但事实上，正如之前所说，数组名只是在值上等于指向首个元素的地址，但两者并不等价！只是在参数传递，数组名赋值给指针时两者值相等！仔细去想，如果按照我一开始的这种想法，sizeof(*a)就只是一个指针的内存，无法代表一维数组的大小。</p>\n<p>因此，int[0]中存储的就只是一维数组名，然后再对该一维数组名取地址，才是正确的指向int[0]的地址，同样的，这个值也是和二维数组名在值上相同，但是并不等价。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> *a = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span> (*a)[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"keyword\">int</span>(* a)[<span class=\"number\">3</span>][<span class=\"number\">4</span>] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">2</span>][<span class=\"number\">3</span>][<span class=\"number\">4</span>];</span><br></pre></td></tr></table></figure>\n<p>以上才是正确的形式，多维可以类推。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><ul>\n<li>数组指针， 不能因为数组名在值上等于指针，而等价为指向指针的指针。</li>\n<li>指针数组，在值上等价与指向指针的指针，可以将数组名赋给指向指针的指针。</li>\n<li>讲真，涉及到多维数组，既然用了c++,那还是用vector吧，简单方便，并且函数传递时是值传递，也可以用引用传递来实现实参改变，比c方便太多了！</li>\n</ul>"},{"title":"Tensorflow中有关Graph和Session的一些问题","date":"2017-07-15T14:48:55.000Z","_content":"\n晚上在写一个简单的cnn时遇到了一个编译错误，代码检查了半天没找到问题。。最后鬼使神差地把全局变量初始化语句改了一下，竟然编译通过了。。研究了一下原因，应该是默认graph的问题。于是，再加上之前的默认session，我把tensorflow中默认graph和默认session几个注意点总结一下。\n\n# 默认Session问题\n\n- session创建后，如果没有指定graph，则该session会调用默认的graph。\n- 调用默认graph的话，session创建语句可以在文件任意位置。因为即使session放在前文，后文里若是定义了新的graph节点，这些节点也会加到默认graph中，接下来调用该session时，调用的也是新的默认graph。\n- 如果以`sess = tf.Session()`创建session，则该session不会作为下文的默认session，需要以`with`语句开头调用该session后，才作为下文的默认session。如果以`sess = tf.InteractiveSession()`创建session, 则该session即是下文的默认session。**默认session的好处是可以直接使用`operation.run()`或`tensor.eval()`, 无需指定session来run**。\n- `with`语句有个好处是，该代码块结束后，session会自动`close`。\n\n# 默认Graph问题\n\n- 如果不指定graph，创建的新节点都会加入到默认graph中。注意，该graph是一个**全局默认graph**,也就说如果你定义了一个函数，这个函数里增加了一些节点，那么，每次调用这个函数，都会在默认graph中增加新节点！因此，如果想要定义类来实现算法，那么以防这种情况，建议将所有的节点操作放在类的初始化`__init__`方法中，这样对于每个实例，初始化也只会执行一次而已。\n- 有个要特别注意的节点操作`tf.global_variables_intializer()`。该项操作读取的是**当前默认graph中**的variable，如果在前文中定义就会出现问题！举个例子，我在前文中定义`init_var = tf.global_variables_intializer()`，然后中间加入新的variable, 最后再执行`init_var.run()`，这样就会出现编译错误信息`Attempting to use uninitialized value beta1_power`！也就是我今天遇到的编译问题！我们只能重新执行`tf.global_variables_intializer().run()`才行！\n\n\n# 总结\n\n其实上面说了那么多问题，其实只要规范好代码就可以避免上述问题。所谓的规范就是，session创建和variable初始化这两个步骤，都在graph定义完成后再执行！\n","source":"_posts/questions-about-graph-and-session-of-tensorflow.md","raw":"---\ntitle: Tensorflow中有关Graph和Session的一些问题\ndate: 2017-07-15 22:48:55\ntags: Tensorflow\n---\n\n晚上在写一个简单的cnn时遇到了一个编译错误，代码检查了半天没找到问题。。最后鬼使神差地把全局变量初始化语句改了一下，竟然编译通过了。。研究了一下原因，应该是默认graph的问题。于是，再加上之前的默认session，我把tensorflow中默认graph和默认session几个注意点总结一下。\n\n# 默认Session问题\n\n- session创建后，如果没有指定graph，则该session会调用默认的graph。\n- 调用默认graph的话，session创建语句可以在文件任意位置。因为即使session放在前文，后文里若是定义了新的graph节点，这些节点也会加到默认graph中，接下来调用该session时，调用的也是新的默认graph。\n- 如果以`sess = tf.Session()`创建session，则该session不会作为下文的默认session，需要以`with`语句开头调用该session后，才作为下文的默认session。如果以`sess = tf.InteractiveSession()`创建session, 则该session即是下文的默认session。**默认session的好处是可以直接使用`operation.run()`或`tensor.eval()`, 无需指定session来run**。\n- `with`语句有个好处是，该代码块结束后，session会自动`close`。\n\n# 默认Graph问题\n\n- 如果不指定graph，创建的新节点都会加入到默认graph中。注意，该graph是一个**全局默认graph**,也就说如果你定义了一个函数，这个函数里增加了一些节点，那么，每次调用这个函数，都会在默认graph中增加新节点！因此，如果想要定义类来实现算法，那么以防这种情况，建议将所有的节点操作放在类的初始化`__init__`方法中，这样对于每个实例，初始化也只会执行一次而已。\n- 有个要特别注意的节点操作`tf.global_variables_intializer()`。该项操作读取的是**当前默认graph中**的variable，如果在前文中定义就会出现问题！举个例子，我在前文中定义`init_var = tf.global_variables_intializer()`，然后中间加入新的variable, 最后再执行`init_var.run()`，这样就会出现编译错误信息`Attempting to use uninitialized value beta1_power`！也就是我今天遇到的编译问题！我们只能重新执行`tf.global_variables_intializer().run()`才行！\n\n\n# 总结\n\n其实上面说了那么多问题，其实只要规范好代码就可以避免上述问题。所谓的规范就是，session创建和variable初始化这两个步骤，都在graph定义完成后再执行！\n","slug":"questions-about-graph-and-session-of-tensorflow","published":1,"updated":"2020-06-04T07:43:27.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8yn00028edkkh0gl336","content":"<p>晚上在写一个简单的cnn时遇到了一个编译错误，代码检查了半天没找到问题。。最后鬼使神差地把全局变量初始化语句改了一下，竟然编译通过了。。研究了一下原因，应该是默认graph的问题。于是，再加上之前的默认session，我把tensorflow中默认graph和默认session几个注意点总结一下。</p>\n<h1 id=\"默认Session问题\"><a href=\"#默认Session问题\" class=\"headerlink\" title=\"默认Session问题\"></a>默认Session问题</h1><ul>\n<li>session创建后，如果没有指定graph，则该session会调用默认的graph。</li>\n<li>调用默认graph的话，session创建语句可以在文件任意位置。因为即使session放在前文，后文里若是定义了新的graph节点，这些节点也会加到默认graph中，接下来调用该session时，调用的也是新的默认graph。</li>\n<li>如果以<code>sess = tf.Session()</code>创建session，则该session不会作为下文的默认session，需要以<code>with</code>语句开头调用该session后，才作为下文的默认session。如果以<code>sess = tf.InteractiveSession()</code>创建session, 则该session即是下文的默认session。<strong>默认session的好处是可以直接使用<code>operation.run()</code>或<code>tensor.eval()</code>, 无需指定session来run</strong>。</li>\n<li><code>with</code>语句有个好处是，该代码块结束后，session会自动<code>close</code>。</li>\n</ul>\n<h1 id=\"默认Graph问题\"><a href=\"#默认Graph问题\" class=\"headerlink\" title=\"默认Graph问题\"></a>默认Graph问题</h1><ul>\n<li>如果不指定graph，创建的新节点都会加入到默认graph中。注意，该graph是一个<strong>全局默认graph</strong>,也就说如果你定义了一个函数，这个函数里增加了一些节点，那么，每次调用这个函数，都会在默认graph中增加新节点！因此，如果想要定义类来实现算法，那么以防这种情况，建议将所有的节点操作放在类的初始化<code>__init__</code>方法中，这样对于每个实例，初始化也只会执行一次而已。</li>\n<li>有个要特别注意的节点操作<code>tf.global_variables_intializer()</code>。该项操作读取的是<strong>当前默认graph中</strong>的variable，如果在前文中定义就会出现问题！举个例子，我在前文中定义<code>init_var = tf.global_variables_intializer()</code>，然后中间加入新的variable, 最后再执行<code>init_var.run()</code>，这样就会出现编译错误信息<code>Attempting to use uninitialized value beta1_power</code>！也就是我今天遇到的编译问题！我们只能重新执行<code>tf.global_variables_intializer().run()</code>才行！</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实上面说了那么多问题，其实只要规范好代码就可以避免上述问题。所谓的规范就是，session创建和variable初始化这两个步骤，都在graph定义完成后再执行！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>晚上在写一个简单的cnn时遇到了一个编译错误，代码检查了半天没找到问题。。最后鬼使神差地把全局变量初始化语句改了一下，竟然编译通过了。。研究了一下原因，应该是默认graph的问题。于是，再加上之前的默认session，我把tensorflow中默认graph和默认session几个注意点总结一下。</p>\n<h1 id=\"默认Session问题\"><a href=\"#默认Session问题\" class=\"headerlink\" title=\"默认Session问题\"></a>默认Session问题</h1><ul>\n<li>session创建后，如果没有指定graph，则该session会调用默认的graph。</li>\n<li>调用默认graph的话，session创建语句可以在文件任意位置。因为即使session放在前文，后文里若是定义了新的graph节点，这些节点也会加到默认graph中，接下来调用该session时，调用的也是新的默认graph。</li>\n<li>如果以<code>sess = tf.Session()</code>创建session，则该session不会作为下文的默认session，需要以<code>with</code>语句开头调用该session后，才作为下文的默认session。如果以<code>sess = tf.InteractiveSession()</code>创建session, 则该session即是下文的默认session。<strong>默认session的好处是可以直接使用<code>operation.run()</code>或<code>tensor.eval()</code>, 无需指定session来run</strong>。</li>\n<li><code>with</code>语句有个好处是，该代码块结束后，session会自动<code>close</code>。</li>\n</ul>\n<h1 id=\"默认Graph问题\"><a href=\"#默认Graph问题\" class=\"headerlink\" title=\"默认Graph问题\"></a>默认Graph问题</h1><ul>\n<li>如果不指定graph，创建的新节点都会加入到默认graph中。注意，该graph是一个<strong>全局默认graph</strong>,也就说如果你定义了一个函数，这个函数里增加了一些节点，那么，每次调用这个函数，都会在默认graph中增加新节点！因此，如果想要定义类来实现算法，那么以防这种情况，建议将所有的节点操作放在类的初始化<code>__init__</code>方法中，这样对于每个实例，初始化也只会执行一次而已。</li>\n<li>有个要特别注意的节点操作<code>tf.global_variables_intializer()</code>。该项操作读取的是<strong>当前默认graph中</strong>的variable，如果在前文中定义就会出现问题！举个例子，我在前文中定义<code>init_var = tf.global_variables_intializer()</code>，然后中间加入新的variable, 最后再执行<code>init_var.run()</code>，这样就会出现编译错误信息<code>Attempting to use uninitialized value beta1_power</code>！也就是我今天遇到的编译问题！我们只能重新执行<code>tf.global_variables_intializer().run()</code>才行！</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>其实上面说了那么多问题，其实只要规范好代码就可以避免上述问题。所谓的规范就是，session创建和variable初始化这两个步骤，都在graph定义完成后再执行！</p>\n"},{"title":"Ubuntu与Windows之间的远程连接","date":"2017-06-13T07:34:47.000Z","_content":"\n之前使用Ubuntu 14.04时其实一直没有很好得解决远程桌面连接的问题，每次用到实验室的Windows服务器时，我都会切换到windows系统去使用。。可以说非常不方便了。这回重装Ubuntu16.04，总算是解决了这个问题，并且还解决了Windows连接Ubuntu的问题。\n\n# Ubuntu连接Windows服务器\n其实Ubuntu下也有类似Windows远程连接的很方便的自带软件，那就是remmina，remmina支持很多协议，包括rdp，vnc等等，我们这里选用rdp协议来连接windows服务器。\n\n<!-- more -->\nRemmina有着简单易懂的图形界面，建立连接很简单。事实上，之前用Ubuntu 14.04时我就用过remmina，但当时碰到了一个很棘手的问题，那就是只能建立远程连接，而无法传输文件。在设置中有一个共享文件夹的选项，但是即使勾选后在windows中依然无法显示（windows服务器版本为sever 2012R）。所幸经过一番搜索，我发现了问题的解决办法，只需要利用第三方软件源将remmina进行版本更新。\n```\nsudo apt-add-repository ppa:remmina-ppa-team/remmina-next\nsudo apt-get update\nsudo apt-get install remmina remmina-plugin-rdp libfreerdp-plugins-standard\n```\n然后再重启remmina，就可以使用共享文件夹了。\n\n# Windows连接Ubuntu\n实验室的工作电脑我装的是Ubuntu，但是笔记本我装的是Windows系统，并且平时笔记本一般放在寝室。为了能在寝室用笔记本连接实验室的Ubuntu(就是爱学习！),我尝试了一些办法，我觉得最好的办法就是用teamviewer!\n\n## Teamviewer安装\n从[官网](https://www.teamviewer.com/en/download/linux/)下载deb文件（非商业用途的个人版本是免费的），然后执行命令（建议使用apt-get安装以解决依赖问题）\n```\nsudo apt-get install ./teamviewer*.deb\n```\n\n## Teamviewer使用\n\n在Ubuntu中打开teamviewer后会生成了一个ID和密码，我们只要在windows段也打开teamviewer，输入该ID和密码就可以连接到Ubuntu了。注意，这种连接方式是需要联网的。\n\n如果想要不联网，在内网中直接使用的话，我们需要设置`Extras->Options->General->Incoming LAN connections`选择accept exclusively,这样的话，就只会通过局域网连接了，ID也会显示为你的局域网中的ID。经过测试，我觉得teamviewer的连接速度也是挺给力的！赞！\n","source":"_posts/remote-desktop-between-ubuntu-and-windows.md","raw":"---\ntitle: Ubuntu与Windows之间的远程连接\ndate: 2017-06-13 15:34:47\ntags: Ubuntu\n---\n\n之前使用Ubuntu 14.04时其实一直没有很好得解决远程桌面连接的问题，每次用到实验室的Windows服务器时，我都会切换到windows系统去使用。。可以说非常不方便了。这回重装Ubuntu16.04，总算是解决了这个问题，并且还解决了Windows连接Ubuntu的问题。\n\n# Ubuntu连接Windows服务器\n其实Ubuntu下也有类似Windows远程连接的很方便的自带软件，那就是remmina，remmina支持很多协议，包括rdp，vnc等等，我们这里选用rdp协议来连接windows服务器。\n\n<!-- more -->\nRemmina有着简单易懂的图形界面，建立连接很简单。事实上，之前用Ubuntu 14.04时我就用过remmina，但当时碰到了一个很棘手的问题，那就是只能建立远程连接，而无法传输文件。在设置中有一个共享文件夹的选项，但是即使勾选后在windows中依然无法显示（windows服务器版本为sever 2012R）。所幸经过一番搜索，我发现了问题的解决办法，只需要利用第三方软件源将remmina进行版本更新。\n```\nsudo apt-add-repository ppa:remmina-ppa-team/remmina-next\nsudo apt-get update\nsudo apt-get install remmina remmina-plugin-rdp libfreerdp-plugins-standard\n```\n然后再重启remmina，就可以使用共享文件夹了。\n\n# Windows连接Ubuntu\n实验室的工作电脑我装的是Ubuntu，但是笔记本我装的是Windows系统，并且平时笔记本一般放在寝室。为了能在寝室用笔记本连接实验室的Ubuntu(就是爱学习！),我尝试了一些办法，我觉得最好的办法就是用teamviewer!\n\n## Teamviewer安装\n从[官网](https://www.teamviewer.com/en/download/linux/)下载deb文件（非商业用途的个人版本是免费的），然后执行命令（建议使用apt-get安装以解决依赖问题）\n```\nsudo apt-get install ./teamviewer*.deb\n```\n\n## Teamviewer使用\n\n在Ubuntu中打开teamviewer后会生成了一个ID和密码，我们只要在windows段也打开teamviewer，输入该ID和密码就可以连接到Ubuntu了。注意，这种连接方式是需要联网的。\n\n如果想要不联网，在内网中直接使用的话，我们需要设置`Extras->Options->General->Incoming LAN connections`选择accept exclusively,这样的话，就只会通过局域网连接了，ID也会显示为你的局域网中的ID。经过测试，我觉得teamviewer的连接速度也是挺给力的！赞！\n","slug":"remote-desktop-between-ubuntu-and-windows","published":1,"updated":"2020-06-04T07:43:27.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8yt00048edksuek8j4l","content":"<p>之前使用Ubuntu 14.04时其实一直没有很好得解决远程桌面连接的问题，每次用到实验室的Windows服务器时，我都会切换到windows系统去使用。。可以说非常不方便了。这回重装Ubuntu16.04，总算是解决了这个问题，并且还解决了Windows连接Ubuntu的问题。</p>\n<h1 id=\"Ubuntu连接Windows服务器\"><a href=\"#Ubuntu连接Windows服务器\" class=\"headerlink\" title=\"Ubuntu连接Windows服务器\"></a>Ubuntu连接Windows服务器</h1><p>其实Ubuntu下也有类似Windows远程连接的很方便的自带软件，那就是remmina，remmina支持很多协议，包括rdp，vnc等等，我们这里选用rdp协议来连接windows服务器。</p>\n<a id=\"more\"></a>\n<p>Remmina有着简单易懂的图形界面，建立连接很简单。事实上，之前用Ubuntu 14.04时我就用过remmina，但当时碰到了一个很棘手的问题，那就是只能建立远程连接，而无法传输文件。在设置中有一个共享文件夹的选项，但是即使勾选后在windows中依然无法显示（windows服务器版本为sever 2012R）。所幸经过一番搜索，我发现了问题的解决办法，只需要利用第三方软件源将remmina进行版本更新。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-add-repository ppa:remmina-ppa-team/remmina-next</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install remmina remmina-plugin-rdp libfreerdp-plugins-standard</span><br></pre></td></tr></table></figure></p>\n<p>然后再重启remmina，就可以使用共享文件夹了。</p>\n<h1 id=\"Windows连接Ubuntu\"><a href=\"#Windows连接Ubuntu\" class=\"headerlink\" title=\"Windows连接Ubuntu\"></a>Windows连接Ubuntu</h1><p>实验室的工作电脑我装的是Ubuntu，但是笔记本我装的是Windows系统，并且平时笔记本一般放在寝室。为了能在寝室用笔记本连接实验室的Ubuntu(就是爱学习！),我尝试了一些办法，我觉得最好的办法就是用teamviewer!</p>\n<h2 id=\"Teamviewer安装\"><a href=\"#Teamviewer安装\" class=\"headerlink\" title=\"Teamviewer安装\"></a>Teamviewer安装</h2><p>从<a href=\"https://www.teamviewer.com/en/download/linux/\" target=\"_blank\" rel=\"noopener\">官网</a>下载deb文件（非商业用途的个人版本是免费的），然后执行命令（建议使用apt-get安装以解决依赖问题）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ./teamviewer*.deb</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Teamviewer使用\"><a href=\"#Teamviewer使用\" class=\"headerlink\" title=\"Teamviewer使用\"></a>Teamviewer使用</h2><p>在Ubuntu中打开teamviewer后会生成了一个ID和密码，我们只要在windows段也打开teamviewer，输入该ID和密码就可以连接到Ubuntu了。注意，这种连接方式是需要联网的。</p>\n<p>如果想要不联网，在内网中直接使用的话，我们需要设置<code>Extras-&gt;Options-&gt;General-&gt;Incoming LAN connections</code>选择accept exclusively,这样的话，就只会通过局域网连接了，ID也会显示为你的局域网中的ID。经过测试，我觉得teamviewer的连接速度也是挺给力的！赞！</p>\n","site":{"data":{}},"excerpt":"<p>之前使用Ubuntu 14.04时其实一直没有很好得解决远程桌面连接的问题，每次用到实验室的Windows服务器时，我都会切换到windows系统去使用。。可以说非常不方便了。这回重装Ubuntu16.04，总算是解决了这个问题，并且还解决了Windows连接Ubuntu的问题。</p>\n<h1 id=\"Ubuntu连接Windows服务器\"><a href=\"#Ubuntu连接Windows服务器\" class=\"headerlink\" title=\"Ubuntu连接Windows服务器\"></a>Ubuntu连接Windows服务器</h1><p>其实Ubuntu下也有类似Windows远程连接的很方便的自带软件，那就是remmina，remmina支持很多协议，包括rdp，vnc等等，我们这里选用rdp协议来连接windows服务器。</p>","more":"<p>Remmina有着简单易懂的图形界面，建立连接很简单。事实上，之前用Ubuntu 14.04时我就用过remmina，但当时碰到了一个很棘手的问题，那就是只能建立远程连接，而无法传输文件。在设置中有一个共享文件夹的选项，但是即使勾选后在windows中依然无法显示（windows服务器版本为sever 2012R）。所幸经过一番搜索，我发现了问题的解决办法，只需要利用第三方软件源将remmina进行版本更新。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-add-repository ppa:remmina-ppa-team/remmina-next</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install remmina remmina-plugin-rdp libfreerdp-plugins-standard</span><br></pre></td></tr></table></figure></p>\n<p>然后再重启remmina，就可以使用共享文件夹了。</p>\n<h1 id=\"Windows连接Ubuntu\"><a href=\"#Windows连接Ubuntu\" class=\"headerlink\" title=\"Windows连接Ubuntu\"></a>Windows连接Ubuntu</h1><p>实验室的工作电脑我装的是Ubuntu，但是笔记本我装的是Windows系统，并且平时笔记本一般放在寝室。为了能在寝室用笔记本连接实验室的Ubuntu(就是爱学习！),我尝试了一些办法，我觉得最好的办法就是用teamviewer!</p>\n<h2 id=\"Teamviewer安装\"><a href=\"#Teamviewer安装\" class=\"headerlink\" title=\"Teamviewer安装\"></a>Teamviewer安装</h2><p>从<a href=\"https://www.teamviewer.com/en/download/linux/\" target=\"_blank\" rel=\"noopener\">官网</a>下载deb文件（非商业用途的个人版本是免费的），然后执行命令（建议使用apt-get安装以解决依赖问题）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ./teamviewer*.deb</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Teamviewer使用\"><a href=\"#Teamviewer使用\" class=\"headerlink\" title=\"Teamviewer使用\"></a>Teamviewer使用</h2><p>在Ubuntu中打开teamviewer后会生成了一个ID和密码，我们只要在windows段也打开teamviewer，输入该ID和密码就可以连接到Ubuntu了。注意，这种连接方式是需要联网的。</p>\n<p>如果想要不联网，在内网中直接使用的话，我们需要设置<code>Extras-&gt;Options-&gt;General-&gt;Incoming LAN connections</code>选择accept exclusively,这样的话，就只会通过局域网连接了，ID也会显示为你的局域网中的ID。经过测试，我觉得teamviewer的连接速度也是挺给力的！赞！</p>"},{"title":"重装Ubuntu16.04","date":"2017-06-12T09:55:56.000Z","_content":"\n之前的Ubuntu14.04用了快两年了，中途经过升级之类各种事，感觉系统里的一些依赖什么都被我折腾坏了，右上角总是有个软件更新冲突提示，所以决定重装Ubuntu16.04。值得一提的是，之前装完Ubuntu14.04写了一篇博客发布在简书上，博客名叫[《开始使用Ubuntu》](http://www.jianshu.com/p/4b9271bba240)(这篇博客也迁移到本站点中了)，至今已被阅读908次，喜欢30次，加入了一些Ubuntu专题，感觉还挺有成就感的。\n\n<!-- more -->\n\n# 分区\n有了之前使用Ubuntu14.04的经验，这次我的分区就简单了许多，主分区1,2,3给windows系统，第四个主分区变成拓展分区，拓展为`/boot:500M`(由于经常更新内核，还是需要多一点空间); `/:400G`;`/home:250G`(个人文件夹要放很多文件，所以最好单独分出来);`/swap:8G(大小和内存相似)`。\n\n# VPN\n我发现之前从校内网下载的deb包在Ubuntu16.04里无法使用，原因是因为该deb包依赖iproute，然而在我还未联网更新的Ubuntu16.04中没有iproute,iproute2取代了iproute，所以我解压了该deb包，修改了依赖项，并重新打包，然后安装完就ok了。\n```\nsudo dpkg -X xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压文件\nsudo dpkg -e xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压控制文件\n修改control文件\nsudo dpkg-deb -b test/ new.deb //重新打包\nsudo dpkg -i new.deb //安装\n```\n\n# 换源\n在software&Updates里面可以进行测速，系统会自动选择一个速度最好的源，系统给我选了`http://ubuntu.cn99.com/ubuntu`这个源，保险起见我又添加了一个自己学校的源。\n```\n# ZJU\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\n```\n换好之后更新源：`sudo apt-get update`\n\n# 搜狗输入法\n官网下载deb文件安装即可，`sudo apt-get install -f`解决依赖问题，并且在系统语言设置出选择fcitx,添加sogo pinyin.\n\n# Chrome浏览器\n添加第三方源并安装。\n```\nsudo wget https://repo.fdzh.org/chrome/google-chrome.list -P /etc/apt/sources.list.d/ \nwget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -\nsudo apt-get update\nsudo apt-get install google-chrome-stable\n```\n\n# Shadowsocks\n不用多说，翻墙是必备的。为了方便起见，我选择安装图形界面的shadowsocks,即shadowsocks-qt5,详细的ss说明可参照[这里](https://github.com/shadowsocks/shadowsocks/wiki),虽然代码已删，但是wiki还在。\n```\nsudo add-apt-repository ppa:hzwhuang/ss-qt5 //ppa即personal package archives\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n下载完成后再配置ip地址等等，我买的服务器是包年100元，感觉还凑合。此外，配置好SS后，只是打开了sock5代理端口，如何让chrome用ss代理还是另一码事。\n\n接下来，我们需要在chrome里安装一个插件:SwitchyOmega，插件安装后需要进行配置。首先，新建一个情景模式，然后修改为sock5协议以及配置端口。\n![新建SS情景模式](http://upload-images.jianshu.io/upload_images/825093-708ebfa92c818de0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n然后，我们再在自动切换这个情景模式下进行修改，首先添加一个给GFW墙掉的地址链接，该链接为` https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt`,由[github的一个项目](https://github.com/gfwlist/gfwlist)维护。然后，我们设置该地址里的url,我们用ss代理，其他url全部直接连接，这就相当于一个pac了。\n![自动切换情景模式](http://upload-images.jianshu.io/upload_images/825093-90aab2477f7c436f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n最后保存之后，就可以翻墙了。\n\n# Git\n安装很简单，`sudo apt-get install git`,下载好之后，配置一下该电脑下的公私钥。\n\n# Latex\n不用多说，写论文必备，当做平时写文章也还行，markdown转pdf我一直都觉得挺麻烦的。。装latex无非就是编译环境和编辑器两方面，编译环境在linux下一般都用texlive，为了方便，我直接安装了全套texlive...整整3G多..`sudo apt-get install texlive-full`。\n\n对于编辑器选择，我直接用的是texmaker,虽然整体来说用得不错，但我还是有点嫌弃它界面有点丑。。我查阅了其他一些流行的编辑器，如sublime,lyX等，最终还是选择了texmaker的fork版texstudio，界面之类的改进了很多，加上之前texmaker习惯大部分都适用，我觉得还是不错的。至于为什么不用vim来编辑latex，我觉得这就像我不用vim编辑markdown一样，我觉得latex及markdown都是需要实时预览，编辑起来才爽的语言，虽然vim也可以搞些插件来预览，但是一方面太麻烦，一方面vim提倡的是解放双手，远离鼠标，一旦有实时预览，双手必然会回归鼠标，我觉得这样就没有必要了，因此对于markdown和latex我都选择了其他编辑器。下图是texstudio界面：\n![image.png](http://upload-images.jianshu.io/upload_images/825093-185e4118d7e48ae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n## 中文支持\n其实latex支持中文很简单，只需在头文件处加入`\\usepackage{ctex}`或者`\\usepackage{xeCJK}`,然后用xelatex编译即可，中文字体也可以通过`\\setCJKmainfont{中文字体}`自己设置。\n\n## 字体包问题\n我在编译一个文件时用到了`\\usapage{uarial}`,但是编译失败，message显示`File 'uarial.sty' not found`，该包没有默认安装，经过google之后，我起初以为是ubuntu没有该uarial字体，于是将windows下的字体都安装到了Ubuntu中，并且还装了文泉译微米黑字体(为了好看)..\n```\nsudo apt-get install ttf-wqy-microhei \nsudo apt-get install ttf-mscorefonts-installer \nsudo fc-cache -f -v //更新\n```\n这么做之后并无乱用，因为问题其实是latex缺少包，而非系统缺少字体。。\n\n正确做法是从CTAN下载non free fonts,也就是这些字体包不是免费的(怪不得不默认安装在latex)。。\n```\nwget -q http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts\nsudo texlua ./install-getnonfreefonts\nsudo getnonfreefonts --sys -a\n```\n\n---\n\n# Matlab R2016a\n我分享的iso下载地址及crack破解文件:[百度网盘](http://pan.baidu.com/s/1nuHAUCh)\n\n## 1. 挂载安装\n```linux\nsudo mkdir /media/matlab\nsudo mount -o loop ~/Downloads/R2016a_glnxa64.iso /media/matlab/ //挂载iso到/matlab文件夹\ncd /media/matlab\nsudo ./install\n```\n\n## 2.破解激活\n- 安装过程中选择不联网安装,输入产品密钥(crack文件中的FIK).\n- 等待安装完成, 默认安装位置为/usr/local/MATLAB/R2016a.\n- 安装结束后,打开matlab应用程序.\n```linux\ncd /usr/local/MATLAB/R2016a/bin/glnxa64/\nsudo MATLAB\n```\n选择离线激活,并添加crack中的Matlab_R2016a_glnxa64.lic.\n\n- 将crack中的另外两个文件复制到matlab安装目录下.\n```linux\nsudo cp ~/Downloads/crack/libcufft.so.7.5.18 /usr/local/MATLAB/R2016a/bin/glnxa64/\n sudo cp ~/Downloads/crack/libmwservices.so /usr/local/MATLAB/R2016a/bin/glnxa64/\n```\n\n## 3. 创建快捷方式\n- 由于默认PATH里不包含/usr/local/MATLAB,所以终端直接输入matlab是不行的,可以创建一个软链接\n`sudo ln -s /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB /usr/local/bin/matlab\n`\n- 为了更加方便,我们可以创建一个桌面快捷方式,在/usr/share/applications/下面创建一个Matlab.desktop,并添加内容如下\n\n        [Desktop Entry]\n        Type = Application\n        Name = Matlab\n        GenericName = Matlab R2016a\n        Comment = Matlab R2016a: The Language of the Technical Computing\n        Exec = /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB -desktop //路径需自己修改\n        Icon = /usr/local/MATLAB/matlab.png // 网上下载一个快捷方式图标\n        StartupNotify = true\n        Terminal = false\n        Categories = Development;Matlab;\n接着加上权限`sudo chmod a+x Matlab.desktop`.\n[我的快捷方式图标](http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120)可供下载.\n![Matlab](http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120)\n\n- 为了避免每次打开matlab后存在权限问题无法读取~/.matab文件的问题，通过`sudo chown [your ubuntu username] -R ~/.matlab`改变权限。\n\n## 4. 字体和快捷键\n- 字体美化:进入Matlab，从菜单打开Preferences，打开Fonts页，把右边最下面的复选框Use antialising to smooth desktop fonts选中.\n- 中文字体显示问题:可以不用很麻烦,同样打开Preferences->Fonts,挑选一个支持中文的字体就ok了,我选择的是AR PL Ukai CN(楷体)．\n- 默认的快捷键是Emacs的，有点不习惯，可以Preferences->Keyboard->Shortcuts->Active settings选Windows Default set.\n\n---\n# Hexo\n之前在Ubuntu14.04里我用octopress搭建了个人博客，重装之后我原本也是想装回octopress的，但是偶然间发现了hexo，一个更加快速、简洁且高效的博客框架！而且支持octopress的完美迁移，看了用hexo搭建的几个demo之后，我立马就决定这回使用hexo搭建个人博客了。\n\n## 安装与使用说明\nhexo的安装和使用可以说相当得简单了，看完[官网的介绍文档](https://hexo.io/zh-cn/docs/index.html)我相信就立马入门了。\n\n## 主题更换\n当然了，安装hexo后最重要当然是选一个自己最心仪的主题（其实官网提供的landscape主题其实也还可以。。），经过一番搜索，我选择了github上hexo主题star数排名第一的next主题，附上github[传送门](https://github.com/iissnan/hexo-theme-next)，以及next作者的[demo](http://notes.iissnan.com/)。\n\nNext的主题安装和使用也有着详细的说明文档，附上[传送门](http://theme-next.iissnan.com/getting-started.html),官网的介绍已经很详细了，我也就不在这里赘述了。\n\n最后，我总结一下自己用到的hexo模块：\n\n- 选择Pisces主题（hexo又分为Muse, Mist, Pisces三个主题）。\n- 阅读次数统计（LeanCloud）。\n- 添加「标签」页面。\n- 设置night bright代码高亮主题。\n- 侧边栏社交链接添加微博，知乎。\n- 开启打赏功能。\n- 添加disqus评论系统。\n- 添加local search。\n- 开启MathJax，这里要注意的是，我在使用分段函数时，分段用的latex代码`\\\\`只被识别前一个`\\`,所以要分段必须使用三个`\\`。。\n\n---\n# Tensorflow\n机器学习将是我的以后工作及学习重心，tensorflow这个平台我必须快速熟悉起来。Tensorflow的安装分为无GPU(只支持CPU)和有GPU的安装，前者安装相当简单，后者的话会很麻烦，还需要对显卡驱动的各种配置。。。由于实验室的工作电脑只是集成显卡而已，所以我就选择了无GPU的安装，当然之后要是有独显了，再研究一下如何支持GPU。\n\n建议使用pip直接进行安装(当然也可以通过docker，Anaconda等第三方环境安装),确保安装了python3及pip3，`sudo apt-get install python3-pip python3-dev`,然后再利用pip3就可以直接安装tensorflow无GPU支持版了，`pip3 install tensorflow`。\n\n## Python安装numpy,scipy,matplotlib库\n作为python中重要的科学计算库，numpy，scipy，matplotlib库一定要正确安装。\n- NumPy是一个定义了数值数组和矩阵类型和它们的基本运算的语言扩展。 \n- SciPy是一种使用NumPy来做高等数学、信号处理、优化、统计和许多其它科学任务的语言扩展。 \n- Matplotlib则可能是Python 2D绘图领域使用最广泛的套件。\n\n之前在windows下用pip安装scipy时，总会遇到依赖问题，我只能通过[这篇知乎上的方法](https://www.zhihu.com/question/30188492)，从非官方维护的第三方库安装scipy。然而在ubuntu下，不需要用pip, 直接利用`apt-get`安装，它会将依赖项自动安装，非常简单有效。\n```\nsudo apt-get install python-numpy\nsudo apt-get install python-scipy\nsudo apt-get install python-matplotlib\n```\n## pip换源\n\n由于连接国外官方pypi很慢，我的电脑大概是70kb/s左右的速度，所以最好将pip源更换为国内的镜像源，我使用的是清华大学的pip源。\n\n新建`~/.pip/pip.conf`,创建内容如下:\n> \n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n\n","source":"_posts/reinstall-ubuntu16-04.md","raw":"---\ntitle: 重装Ubuntu16.04\ndate: 2017-06-12 17:55:56\ntags: Ubuntu\n---\n\n之前的Ubuntu14.04用了快两年了，中途经过升级之类各种事，感觉系统里的一些依赖什么都被我折腾坏了，右上角总是有个软件更新冲突提示，所以决定重装Ubuntu16.04。值得一提的是，之前装完Ubuntu14.04写了一篇博客发布在简书上，博客名叫[《开始使用Ubuntu》](http://www.jianshu.com/p/4b9271bba240)(这篇博客也迁移到本站点中了)，至今已被阅读908次，喜欢30次，加入了一些Ubuntu专题，感觉还挺有成就感的。\n\n<!-- more -->\n\n# 分区\n有了之前使用Ubuntu14.04的经验，这次我的分区就简单了许多，主分区1,2,3给windows系统，第四个主分区变成拓展分区，拓展为`/boot:500M`(由于经常更新内核，还是需要多一点空间); `/:400G`;`/home:250G`(个人文件夹要放很多文件，所以最好单独分出来);`/swap:8G(大小和内存相似)`。\n\n# VPN\n我发现之前从校内网下载的deb包在Ubuntu16.04里无法使用，原因是因为该deb包依赖iproute，然而在我还未联网更新的Ubuntu16.04中没有iproute,iproute2取代了iproute，所以我解压了该deb包，修改了依赖项，并重新打包，然后安装完就ok了。\n```\nsudo dpkg -X xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压文件\nsudo dpkg -e xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压控制文件\n修改control文件\nsudo dpkg-deb -b test/ new.deb //重新打包\nsudo dpkg -i new.deb //安装\n```\n\n# 换源\n在software&Updates里面可以进行测速，系统会自动选择一个速度最好的源，系统给我选了`http://ubuntu.cn99.com/ubuntu`这个源，保险起见我又添加了一个自己学校的源。\n```\n# ZJU\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse\n```\n换好之后更新源：`sudo apt-get update`\n\n# 搜狗输入法\n官网下载deb文件安装即可，`sudo apt-get install -f`解决依赖问题，并且在系统语言设置出选择fcitx,添加sogo pinyin.\n\n# Chrome浏览器\n添加第三方源并安装。\n```\nsudo wget https://repo.fdzh.org/chrome/google-chrome.list -P /etc/apt/sources.list.d/ \nwget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -\nsudo apt-get update\nsudo apt-get install google-chrome-stable\n```\n\n# Shadowsocks\n不用多说，翻墙是必备的。为了方便起见，我选择安装图形界面的shadowsocks,即shadowsocks-qt5,详细的ss说明可参照[这里](https://github.com/shadowsocks/shadowsocks/wiki),虽然代码已删，但是wiki还在。\n```\nsudo add-apt-repository ppa:hzwhuang/ss-qt5 //ppa即personal package archives\nsudo apt-get update\nsudo apt-get install shadowsocks-qt5\n```\n下载完成后再配置ip地址等等，我买的服务器是包年100元，感觉还凑合。此外，配置好SS后，只是打开了sock5代理端口，如何让chrome用ss代理还是另一码事。\n\n接下来，我们需要在chrome里安装一个插件:SwitchyOmega，插件安装后需要进行配置。首先，新建一个情景模式，然后修改为sock5协议以及配置端口。\n![新建SS情景模式](http://upload-images.jianshu.io/upload_images/825093-708ebfa92c818de0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n然后，我们再在自动切换这个情景模式下进行修改，首先添加一个给GFW墙掉的地址链接，该链接为` https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt`,由[github的一个项目](https://github.com/gfwlist/gfwlist)维护。然后，我们设置该地址里的url,我们用ss代理，其他url全部直接连接，这就相当于一个pac了。\n![自动切换情景模式](http://upload-images.jianshu.io/upload_images/825093-90aab2477f7c436f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n最后保存之后，就可以翻墙了。\n\n# Git\n安装很简单，`sudo apt-get install git`,下载好之后，配置一下该电脑下的公私钥。\n\n# Latex\n不用多说，写论文必备，当做平时写文章也还行，markdown转pdf我一直都觉得挺麻烦的。。装latex无非就是编译环境和编辑器两方面，编译环境在linux下一般都用texlive，为了方便，我直接安装了全套texlive...整整3G多..`sudo apt-get install texlive-full`。\n\n对于编辑器选择，我直接用的是texmaker,虽然整体来说用得不错，但我还是有点嫌弃它界面有点丑。。我查阅了其他一些流行的编辑器，如sublime,lyX等，最终还是选择了texmaker的fork版texstudio，界面之类的改进了很多，加上之前texmaker习惯大部分都适用，我觉得还是不错的。至于为什么不用vim来编辑latex，我觉得这就像我不用vim编辑markdown一样，我觉得latex及markdown都是需要实时预览，编辑起来才爽的语言，虽然vim也可以搞些插件来预览，但是一方面太麻烦，一方面vim提倡的是解放双手，远离鼠标，一旦有实时预览，双手必然会回归鼠标，我觉得这样就没有必要了，因此对于markdown和latex我都选择了其他编辑器。下图是texstudio界面：\n![image.png](http://upload-images.jianshu.io/upload_images/825093-185e4118d7e48ae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800)\n\n## 中文支持\n其实latex支持中文很简单，只需在头文件处加入`\\usepackage{ctex}`或者`\\usepackage{xeCJK}`,然后用xelatex编译即可，中文字体也可以通过`\\setCJKmainfont{中文字体}`自己设置。\n\n## 字体包问题\n我在编译一个文件时用到了`\\usapage{uarial}`,但是编译失败，message显示`File 'uarial.sty' not found`，该包没有默认安装，经过google之后，我起初以为是ubuntu没有该uarial字体，于是将windows下的字体都安装到了Ubuntu中，并且还装了文泉译微米黑字体(为了好看)..\n```\nsudo apt-get install ttf-wqy-microhei \nsudo apt-get install ttf-mscorefonts-installer \nsudo fc-cache -f -v //更新\n```\n这么做之后并无乱用，因为问题其实是latex缺少包，而非系统缺少字体。。\n\n正确做法是从CTAN下载non free fonts,也就是这些字体包不是免费的(怪不得不默认安装在latex)。。\n```\nwget -q http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts\nsudo texlua ./install-getnonfreefonts\nsudo getnonfreefonts --sys -a\n```\n\n---\n\n# Matlab R2016a\n我分享的iso下载地址及crack破解文件:[百度网盘](http://pan.baidu.com/s/1nuHAUCh)\n\n## 1. 挂载安装\n```linux\nsudo mkdir /media/matlab\nsudo mount -o loop ~/Downloads/R2016a_glnxa64.iso /media/matlab/ //挂载iso到/matlab文件夹\ncd /media/matlab\nsudo ./install\n```\n\n## 2.破解激活\n- 安装过程中选择不联网安装,输入产品密钥(crack文件中的FIK).\n- 等待安装完成, 默认安装位置为/usr/local/MATLAB/R2016a.\n- 安装结束后,打开matlab应用程序.\n```linux\ncd /usr/local/MATLAB/R2016a/bin/glnxa64/\nsudo MATLAB\n```\n选择离线激活,并添加crack中的Matlab_R2016a_glnxa64.lic.\n\n- 将crack中的另外两个文件复制到matlab安装目录下.\n```linux\nsudo cp ~/Downloads/crack/libcufft.so.7.5.18 /usr/local/MATLAB/R2016a/bin/glnxa64/\n sudo cp ~/Downloads/crack/libmwservices.so /usr/local/MATLAB/R2016a/bin/glnxa64/\n```\n\n## 3. 创建快捷方式\n- 由于默认PATH里不包含/usr/local/MATLAB,所以终端直接输入matlab是不行的,可以创建一个软链接\n`sudo ln -s /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB /usr/local/bin/matlab\n`\n- 为了更加方便,我们可以创建一个桌面快捷方式,在/usr/share/applications/下面创建一个Matlab.desktop,并添加内容如下\n\n        [Desktop Entry]\n        Type = Application\n        Name = Matlab\n        GenericName = Matlab R2016a\n        Comment = Matlab R2016a: The Language of the Technical Computing\n        Exec = /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB -desktop //路径需自己修改\n        Icon = /usr/local/MATLAB/matlab.png // 网上下载一个快捷方式图标\n        StartupNotify = true\n        Terminal = false\n        Categories = Development;Matlab;\n接着加上权限`sudo chmod a+x Matlab.desktop`.\n[我的快捷方式图标](http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120)可供下载.\n![Matlab](http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120)\n\n- 为了避免每次打开matlab后存在权限问题无法读取~/.matab文件的问题，通过`sudo chown [your ubuntu username] -R ~/.matlab`改变权限。\n\n## 4. 字体和快捷键\n- 字体美化:进入Matlab，从菜单打开Preferences，打开Fonts页，把右边最下面的复选框Use antialising to smooth desktop fonts选中.\n- 中文字体显示问题:可以不用很麻烦,同样打开Preferences->Fonts,挑选一个支持中文的字体就ok了,我选择的是AR PL Ukai CN(楷体)．\n- 默认的快捷键是Emacs的，有点不习惯，可以Preferences->Keyboard->Shortcuts->Active settings选Windows Default set.\n\n---\n# Hexo\n之前在Ubuntu14.04里我用octopress搭建了个人博客，重装之后我原本也是想装回octopress的，但是偶然间发现了hexo，一个更加快速、简洁且高效的博客框架！而且支持octopress的完美迁移，看了用hexo搭建的几个demo之后，我立马就决定这回使用hexo搭建个人博客了。\n\n## 安装与使用说明\nhexo的安装和使用可以说相当得简单了，看完[官网的介绍文档](https://hexo.io/zh-cn/docs/index.html)我相信就立马入门了。\n\n## 主题更换\n当然了，安装hexo后最重要当然是选一个自己最心仪的主题（其实官网提供的landscape主题其实也还可以。。），经过一番搜索，我选择了github上hexo主题star数排名第一的next主题，附上github[传送门](https://github.com/iissnan/hexo-theme-next)，以及next作者的[demo](http://notes.iissnan.com/)。\n\nNext的主题安装和使用也有着详细的说明文档，附上[传送门](http://theme-next.iissnan.com/getting-started.html),官网的介绍已经很详细了，我也就不在这里赘述了。\n\n最后，我总结一下自己用到的hexo模块：\n\n- 选择Pisces主题（hexo又分为Muse, Mist, Pisces三个主题）。\n- 阅读次数统计（LeanCloud）。\n- 添加「标签」页面。\n- 设置night bright代码高亮主题。\n- 侧边栏社交链接添加微博，知乎。\n- 开启打赏功能。\n- 添加disqus评论系统。\n- 添加local search。\n- 开启MathJax，这里要注意的是，我在使用分段函数时，分段用的latex代码`\\\\`只被识别前一个`\\`,所以要分段必须使用三个`\\`。。\n\n---\n# Tensorflow\n机器学习将是我的以后工作及学习重心，tensorflow这个平台我必须快速熟悉起来。Tensorflow的安装分为无GPU(只支持CPU)和有GPU的安装，前者安装相当简单，后者的话会很麻烦，还需要对显卡驱动的各种配置。。。由于实验室的工作电脑只是集成显卡而已，所以我就选择了无GPU的安装，当然之后要是有独显了，再研究一下如何支持GPU。\n\n建议使用pip直接进行安装(当然也可以通过docker，Anaconda等第三方环境安装),确保安装了python3及pip3，`sudo apt-get install python3-pip python3-dev`,然后再利用pip3就可以直接安装tensorflow无GPU支持版了，`pip3 install tensorflow`。\n\n## Python安装numpy,scipy,matplotlib库\n作为python中重要的科学计算库，numpy，scipy，matplotlib库一定要正确安装。\n- NumPy是一个定义了数值数组和矩阵类型和它们的基本运算的语言扩展。 \n- SciPy是一种使用NumPy来做高等数学、信号处理、优化、统计和许多其它科学任务的语言扩展。 \n- Matplotlib则可能是Python 2D绘图领域使用最广泛的套件。\n\n之前在windows下用pip安装scipy时，总会遇到依赖问题，我只能通过[这篇知乎上的方法](https://www.zhihu.com/question/30188492)，从非官方维护的第三方库安装scipy。然而在ubuntu下，不需要用pip, 直接利用`apt-get`安装，它会将依赖项自动安装，非常简单有效。\n```\nsudo apt-get install python-numpy\nsudo apt-get install python-scipy\nsudo apt-get install python-matplotlib\n```\n## pip换源\n\n由于连接国外官方pypi很慢，我的电脑大概是70kb/s左右的速度，所以最好将pip源更换为国内的镜像源，我使用的是清华大学的pip源。\n\n新建`~/.pip/pip.conf`,创建内容如下:\n> \n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n\n","slug":"reinstall-ubuntu16-04","published":1,"updated":"2020-06-04T07:43:27.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8yw00058edkcwdiqokq","content":"<p>之前的Ubuntu14.04用了快两年了，中途经过升级之类各种事，感觉系统里的一些依赖什么都被我折腾坏了，右上角总是有个软件更新冲突提示，所以决定重装Ubuntu16.04。值得一提的是，之前装完Ubuntu14.04写了一篇博客发布在简书上，博客名叫<a href=\"http://www.jianshu.com/p/4b9271bba240\" target=\"_blank\" rel=\"noopener\">《开始使用Ubuntu》</a>(这篇博客也迁移到本站点中了)，至今已被阅读908次，喜欢30次，加入了一些Ubuntu专题，感觉还挺有成就感的。</p>\n<a id=\"more\"></a>\n<h1 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h1><p>有了之前使用Ubuntu14.04的经验，这次我的分区就简单了许多，主分区1,2,3给windows系统，第四个主分区变成拓展分区，拓展为<code>/boot:500M</code>(由于经常更新内核，还是需要多一点空间); <code>/:400G</code>;<code>/home:250G</code>(个人文件夹要放很多文件，所以最好单独分出来);<code>/swap:8G(大小和内存相似)</code>。</p>\n<h1 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h1><p>我发现之前从校内网下载的deb包在Ubuntu16.04里无法使用，原因是因为该deb包依赖iproute，然而在我还未联网更新的Ubuntu16.04中没有iproute,iproute2取代了iproute，所以我解压了该deb包，修改了依赖项，并重新打包，然后安装完就ok了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -X xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压文件</span><br><span class=\"line\">sudo dpkg -e xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压控制文件</span><br><span class=\"line\">修改control文件</span><br><span class=\"line\">sudo dpkg-deb -b test/ new.deb //重新打包</span><br><span class=\"line\">sudo dpkg -i new.deb //安装</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h1><p>在software&amp;Updates里面可以进行测速，系统会自动选择一个速度最好的源，系统给我选了<code>http://ubuntu.cn99.com/ubuntu</code>这个源，保险起见我又添加了一个自己学校的源。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ZJU</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></p>\n<p>换好之后更新源：<code>sudo apt-get update</code></p>\n<h1 id=\"搜狗输入法\"><a href=\"#搜狗输入法\" class=\"headerlink\" title=\"搜狗输入法\"></a>搜狗输入法</h1><p>官网下载deb文件安装即可，<code>sudo apt-get install -f</code>解决依赖问题，并且在系统语言设置出选择fcitx,添加sogo pinyin.</p>\n<h1 id=\"Chrome浏览器\"><a href=\"#Chrome浏览器\" class=\"headerlink\" title=\"Chrome浏览器\"></a>Chrome浏览器</h1><p>添加第三方源并安装。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget https://repo.fdzh.org/chrome/google-chrome.list -P /etc/apt/sources.list.d/ </span><br><span class=\"line\">wget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install google-chrome-stable</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Shadowsocks\"><a href=\"#Shadowsocks\" class=\"headerlink\" title=\"Shadowsocks\"></a>Shadowsocks</h1><p>不用多说，翻墙是必备的。为了方便起见，我选择安装图形界面的shadowsocks,即shadowsocks-qt5,详细的ss说明可参照<a href=\"https://github.com/shadowsocks/shadowsocks/wiki\" target=\"_blank\" rel=\"noopener\">这里</a>,虽然代码已删，但是wiki还在。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5 //ppa即personal package archives</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure></p>\n<p>下载完成后再配置ip地址等等，我买的服务器是包年100元，感觉还凑合。此外，配置好SS后，只是打开了sock5代理端口，如何让chrome用ss代理还是另一码事。</p>\n<p>接下来，我们需要在chrome里安装一个插件:SwitchyOmega，插件安装后需要进行配置。首先，新建一个情景模式，然后修改为sock5协议以及配置端口。<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-708ebfa92c818de0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"新建SS情景模式\"></p>\n<p>然后，我们再在自动切换这个情景模式下进行修改，首先添加一个给GFW墙掉的地址链接，该链接为<code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code>,由<a href=\"https://github.com/gfwlist/gfwlist\" target=\"_blank\" rel=\"noopener\">github的一个项目</a>维护。然后，我们设置该地址里的url,我们用ss代理，其他url全部直接连接，这就相当于一个pac了。<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-90aab2477f7c436f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"自动切换情景模式\"></p>\n<p>最后保存之后，就可以翻墙了。</p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><p>安装很简单，<code>sudo apt-get install git</code>,下载好之后，配置一下该电脑下的公私钥。</p>\n<h1 id=\"Latex\"><a href=\"#Latex\" class=\"headerlink\" title=\"Latex\"></a>Latex</h1><p>不用多说，写论文必备，当做平时写文章也还行，markdown转pdf我一直都觉得挺麻烦的。。装latex无非就是编译环境和编辑器两方面，编译环境在linux下一般都用texlive，为了方便，我直接安装了全套texlive…整整3G多..<code>sudo apt-get install texlive-full</code>。</p>\n<p>对于编辑器选择，我直接用的是texmaker,虽然整体来说用得不错，但我还是有点嫌弃它界面有点丑。。我查阅了其他一些流行的编辑器，如sublime,lyX等，最终还是选择了texmaker的fork版texstudio，界面之类的改进了很多，加上之前texmaker习惯大部分都适用，我觉得还是不错的。至于为什么不用vim来编辑latex，我觉得这就像我不用vim编辑markdown一样，我觉得latex及markdown都是需要实时预览，编辑起来才爽的语言，虽然vim也可以搞些插件来预览，但是一方面太麻烦，一方面vim提倡的是解放双手，远离鼠标，一旦有实时预览，双手必然会回归鼠标，我觉得这样就没有必要了，因此对于markdown和latex我都选择了其他编辑器。下图是texstudio界面：<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-185e4118d7e48ae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"image.png\"></p>\n<h2 id=\"中文支持\"><a href=\"#中文支持\" class=\"headerlink\" title=\"中文支持\"></a>中文支持</h2><p>其实latex支持中文很简单，只需在头文件处加入<code>\\usepackage{ctex}</code>或者<code>\\usepackage{xeCJK}</code>,然后用xelatex编译即可，中文字体也可以通过<code>\\setCJKmainfont{中文字体}</code>自己设置。</p>\n<h2 id=\"字体包问题\"><a href=\"#字体包问题\" class=\"headerlink\" title=\"字体包问题\"></a>字体包问题</h2><p>我在编译一个文件时用到了<code>\\usapage{uarial}</code>,但是编译失败，message显示<code>File &#39;uarial.sty&#39; not found</code>，该包没有默认安装，经过google之后，我起初以为是ubuntu没有该uarial字体，于是将windows下的字体都安装到了Ubuntu中，并且还装了文泉译微米黑字体(为了好看)..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ttf-wqy-microhei </span><br><span class=\"line\">sudo apt-get install ttf-mscorefonts-installer </span><br><span class=\"line\">sudo fc-cache -f -v //更新</span><br></pre></td></tr></table></figure></p>\n<p>这么做之后并无乱用，因为问题其实是latex缺少包，而非系统缺少字体。。</p>\n<p>正确做法是从CTAN下载non free fonts,也就是这些字体包不是免费的(怪不得不默认安装在latex)。。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -q http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts</span><br><span class=\"line\">sudo texlua ./install-getnonfreefonts</span><br><span class=\"line\">sudo getnonfreefonts --sys -a</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"Matlab-R2016a\"><a href=\"#Matlab-R2016a\" class=\"headerlink\" title=\"Matlab R2016a\"></a>Matlab R2016a</h1><p>我分享的iso下载地址及crack破解文件:<a href=\"http://pan.baidu.com/s/1nuHAUCh\" target=\"_blank\" rel=\"noopener\">百度网盘</a></p>\n<h2 id=\"1-挂载安装\"><a href=\"#1-挂载安装\" class=\"headerlink\" title=\"1. 挂载安装\"></a>1. 挂载安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir /media/matlab</span><br><span class=\"line\">sudo mount -o loop ~/Downloads/R2016a_glnxa64.iso /media/matlab/ //挂载iso到/matlab文件夹</span><br><span class=\"line\">cd /media/matlab</span><br><span class=\"line\">sudo ./install</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-破解激活\"><a href=\"#2-破解激活\" class=\"headerlink\" title=\"2.破解激活\"></a>2.破解激活</h2><ul>\n<li>安装过程中选择不联网安装,输入产品密钥(crack文件中的FIK).</li>\n<li>等待安装完成, 默认安装位置为/usr/local/MATLAB/R2016a.</li>\n<li>安装结束后,打开matlab应用程序.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/MATLAB/R2016a/bin/glnxa64/</span><br><span class=\"line\">sudo MATLAB</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>选择离线激活,并添加crack中的Matlab_R2016a_glnxa64.lic.</p>\n<ul>\n<li>将crack中的另外两个文件复制到matlab安装目录下.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp ~/Downloads/crack/libcufft.so.7.5.18 /usr/local/MATLAB/R2016a/bin/glnxa64/</span><br><span class=\"line\"> sudo cp ~/Downloads/crack/libmwservices.so /usr/local/MATLAB/R2016a/bin/glnxa64/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-创建快捷方式\"><a href=\"#3-创建快捷方式\" class=\"headerlink\" title=\"3. 创建快捷方式\"></a>3. 创建快捷方式</h2><ul>\n<li>由于默认PATH里不包含/usr/local/MATLAB,所以终端直接输入matlab是不行的,可以创建一个软链接<br><code>sudo ln -s /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB /usr/local/bin/matlab</code></li>\n<li><p>为了更加方便,我们可以创建一个桌面快捷方式,在/usr/share/applications/下面创建一个Matlab.desktop,并添加内容如下</p>\n<pre><code>  [Desktop Entry]\n  Type = Application\n  Name = Matlab\n  GenericName = Matlab R2016a\n  Comment = Matlab R2016a: The Language of the Technical Computing\n  Exec = /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB -desktop //路径需自己修改\n  Icon = /usr/local/MATLAB/matlab.png // 网上下载一个快捷方式图标\n  StartupNotify = true\n  Terminal = false\n  Categories = Development;Matlab;\n</code></pre><p>接着加上权限<code>sudo chmod a+x Matlab.desktop</code>.<br><a href=\"http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120\" target=\"_blank\" rel=\"noopener\">我的快捷方式图标</a>可供下载.<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120\" alt=\"Matlab\"></p>\n</li>\n<li><p>为了避免每次打开matlab后存在权限问题无法读取~/.matab文件的问题，通过<code>sudo chown [your ubuntu username] -R ~/.matlab</code>改变权限。</p>\n</li>\n</ul>\n<h2 id=\"4-字体和快捷键\"><a href=\"#4-字体和快捷键\" class=\"headerlink\" title=\"4. 字体和快捷键\"></a>4. 字体和快捷键</h2><ul>\n<li>字体美化:进入Matlab，从菜单打开Preferences，打开Fonts页，把右边最下面的复选框Use antialising to smooth desktop fonts选中.</li>\n<li>中文字体显示问题:可以不用很麻烦,同样打开Preferences-&gt;Fonts,挑选一个支持中文的字体就ok了,我选择的是AR PL Ukai CN(楷体)．</li>\n<li>默认的快捷键是Emacs的，有点不习惯，可以Preferences-&gt;Keyboard-&gt;Shortcuts-&gt;Active settings选Windows Default set.</li>\n</ul>\n<hr>\n<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><p>之前在Ubuntu14.04里我用octopress搭建了个人博客，重装之后我原本也是想装回octopress的，但是偶然间发现了hexo，一个更加快速、简洁且高效的博客框架！而且支持octopress的完美迁移，看了用hexo搭建的几个demo之后，我立马就决定这回使用hexo搭建个人博客了。</p>\n<h2 id=\"安装与使用说明\"><a href=\"#安装与使用说明\" class=\"headerlink\" title=\"安装与使用说明\"></a>安装与使用说明</h2><p>hexo的安装和使用可以说相当得简单了，看完<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">官网的介绍文档</a>我相信就立马入门了。</p>\n<h2 id=\"主题更换\"><a href=\"#主题更换\" class=\"headerlink\" title=\"主题更换\"></a>主题更换</h2><p>当然了，安装hexo后最重要当然是选一个自己最心仪的主题（其实官网提供的landscape主题其实也还可以。。），经过一番搜索，我选择了github上hexo主题star数排名第一的next主题，附上github<a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">传送门</a>，以及next作者的<a href=\"http://notes.iissnan.com/\" target=\"_blank\" rel=\"noopener\">demo</a>。</p>\n<p>Next的主题安装和使用也有着详细的说明文档，附上<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">传送门</a>,官网的介绍已经很详细了，我也就不在这里赘述了。</p>\n<p>最后，我总结一下自己用到的hexo模块：</p>\n<ul>\n<li>选择Pisces主题（hexo又分为Muse, Mist, Pisces三个主题）。</li>\n<li>阅读次数统计（LeanCloud）。</li>\n<li>添加「标签」页面。</li>\n<li>设置night bright代码高亮主题。</li>\n<li>侧边栏社交链接添加微博，知乎。</li>\n<li>开启打赏功能。</li>\n<li>添加disqus评论系统。</li>\n<li>添加local search。</li>\n<li>开启MathJax，这里要注意的是，我在使用分段函数时，分段用的latex代码<code>\\\\</code>只被识别前一个<code>\\</code>,所以要分段必须使用三个<code>\\</code>。。</li>\n</ul>\n<hr>\n<h1 id=\"Tensorflow\"><a href=\"#Tensorflow\" class=\"headerlink\" title=\"Tensorflow\"></a>Tensorflow</h1><p>机器学习将是我的以后工作及学习重心，tensorflow这个平台我必须快速熟悉起来。Tensorflow的安装分为无GPU(只支持CPU)和有GPU的安装，前者安装相当简单，后者的话会很麻烦，还需要对显卡驱动的各种配置。。。由于实验室的工作电脑只是集成显卡而已，所以我就选择了无GPU的安装，当然之后要是有独显了，再研究一下如何支持GPU。</p>\n<p>建议使用pip直接进行安装(当然也可以通过docker，Anaconda等第三方环境安装),确保安装了python3及pip3，<code>sudo apt-get install python3-pip python3-dev</code>,然后再利用pip3就可以直接安装tensorflow无GPU支持版了，<code>pip3 install tensorflow</code>。</p>\n<h2 id=\"Python安装numpy-scipy-matplotlib库\"><a href=\"#Python安装numpy-scipy-matplotlib库\" class=\"headerlink\" title=\"Python安装numpy,scipy,matplotlib库\"></a>Python安装numpy,scipy,matplotlib库</h2><p>作为python中重要的科学计算库，numpy，scipy，matplotlib库一定要正确安装。</p>\n<ul>\n<li>NumPy是一个定义了数值数组和矩阵类型和它们的基本运算的语言扩展。 </li>\n<li>SciPy是一种使用NumPy来做高等数学、信号处理、优化、统计和许多其它科学任务的语言扩展。 </li>\n<li>Matplotlib则可能是Python 2D绘图领域使用最广泛的套件。</li>\n</ul>\n<p>之前在windows下用pip安装scipy时，总会遇到依赖问题，我只能通过<a href=\"https://www.zhihu.com/question/30188492\" target=\"_blank\" rel=\"noopener\">这篇知乎上的方法</a>，从非官方维护的第三方库安装scipy。然而在ubuntu下，不需要用pip, 直接利用<code>apt-get</code>安装，它会将依赖项自动安装，非常简单有效。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-numpy</span><br><span class=\"line\">sudo apt-get install python-scipy</span><br><span class=\"line\">sudo apt-get install python-matplotlib</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"pip换源\"><a href=\"#pip换源\" class=\"headerlink\" title=\"pip换源\"></a>pip换源</h2><p>由于连接国外官方pypi很慢，我的电脑大概是70kb/s左右的速度，所以最好将pip源更换为国内的镜像源，我使用的是清华大学的pip源。</p>\n<p>新建<code>~/.pip/pip.conf</code>,创建内容如下:</p>\n<blockquote>\n<p>[global]<br>index-url = <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" target=\"_blank\" rel=\"noopener\">https://pypi.tuna.tsinghua.edu.cn/simple</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>之前的Ubuntu14.04用了快两年了，中途经过升级之类各种事，感觉系统里的一些依赖什么都被我折腾坏了，右上角总是有个软件更新冲突提示，所以决定重装Ubuntu16.04。值得一提的是，之前装完Ubuntu14.04写了一篇博客发布在简书上，博客名叫<a href=\"http://www.jianshu.com/p/4b9271bba240\" target=\"_blank\" rel=\"noopener\">《开始使用Ubuntu》</a>(这篇博客也迁移到本站点中了)，至今已被阅读908次，喜欢30次，加入了一些Ubuntu专题，感觉还挺有成就感的。</p>","more":"<h1 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h1><p>有了之前使用Ubuntu14.04的经验，这次我的分区就简单了许多，主分区1,2,3给windows系统，第四个主分区变成拓展分区，拓展为<code>/boot:500M</code>(由于经常更新内核，还是需要多一点空间); <code>/:400G</code>;<code>/home:250G</code>(个人文件夹要放很多文件，所以最好单独分出来);<code>/swap:8G(大小和内存相似)</code>。</p>\n<h1 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h1><p>我发现之前从校内网下载的deb包在Ubuntu16.04里无法使用，原因是因为该deb包依赖iproute，然而在我还未联网更新的Ubuntu16.04中没有iproute,iproute2取代了iproute，所以我解压了该deb包，修改了依赖项，并重新打包，然后安装完就ok了。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -X xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压文件</span><br><span class=\"line\">sudo dpkg -e xl2tpd_1.1.12-zju2_am64_new.deb test/ //解压控制文件</span><br><span class=\"line\">修改control文件</span><br><span class=\"line\">sudo dpkg-deb -b test/ new.deb //重新打包</span><br><span class=\"line\">sudo dpkg -i new.deb //安装</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h1><p>在software&amp;Updates里面可以进行测速，系统会自动选择一个速度最好的源，系统给我选了<code>http://ubuntu.cn99.com/ubuntu</code>这个源，保险起见我又添加了一个自己学校的源。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># ZJU</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure></p>\n<p>换好之后更新源：<code>sudo apt-get update</code></p>\n<h1 id=\"搜狗输入法\"><a href=\"#搜狗输入法\" class=\"headerlink\" title=\"搜狗输入法\"></a>搜狗输入法</h1><p>官网下载deb文件安装即可，<code>sudo apt-get install -f</code>解决依赖问题，并且在系统语言设置出选择fcitx,添加sogo pinyin.</p>\n<h1 id=\"Chrome浏览器\"><a href=\"#Chrome浏览器\" class=\"headerlink\" title=\"Chrome浏览器\"></a>Chrome浏览器</h1><p>添加第三方源并安装。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wget https://repo.fdzh.org/chrome/google-chrome.list -P /etc/apt/sources.list.d/ </span><br><span class=\"line\">wget -q -O - https://dl.google.com/linux/linux_signing_key.pub  | sudo apt-key add -</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install google-chrome-stable</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Shadowsocks\"><a href=\"#Shadowsocks\" class=\"headerlink\" title=\"Shadowsocks\"></a>Shadowsocks</h1><p>不用多说，翻墙是必备的。为了方便起见，我选择安装图形界面的shadowsocks,即shadowsocks-qt5,详细的ss说明可参照<a href=\"https://github.com/shadowsocks/shadowsocks/wiki\" target=\"_blank\" rel=\"noopener\">这里</a>,虽然代码已删，但是wiki还在。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo add-apt-repository ppa:hzwhuang/ss-qt5 //ppa即personal package archives</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get install shadowsocks-qt5</span><br></pre></td></tr></table></figure></p>\n<p>下载完成后再配置ip地址等等，我买的服务器是包年100元，感觉还凑合。此外，配置好SS后，只是打开了sock5代理端口，如何让chrome用ss代理还是另一码事。</p>\n<p>接下来，我们需要在chrome里安装一个插件:SwitchyOmega，插件安装后需要进行配置。首先，新建一个情景模式，然后修改为sock5协议以及配置端口。<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-708ebfa92c818de0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"新建SS情景模式\"></p>\n<p>然后，我们再在自动切换这个情景模式下进行修改，首先添加一个给GFW墙掉的地址链接，该链接为<code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code>,由<a href=\"https://github.com/gfwlist/gfwlist\" target=\"_blank\" rel=\"noopener\">github的一个项目</a>维护。然后，我们设置该地址里的url,我们用ss代理，其他url全部直接连接，这就相当于一个pac了。<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-90aab2477f7c436f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"自动切换情景模式\"></p>\n<p>最后保存之后，就可以翻墙了。</p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><p>安装很简单，<code>sudo apt-get install git</code>,下载好之后，配置一下该电脑下的公私钥。</p>\n<h1 id=\"Latex\"><a href=\"#Latex\" class=\"headerlink\" title=\"Latex\"></a>Latex</h1><p>不用多说，写论文必备，当做平时写文章也还行，markdown转pdf我一直都觉得挺麻烦的。。装latex无非就是编译环境和编辑器两方面，编译环境在linux下一般都用texlive，为了方便，我直接安装了全套texlive…整整3G多..<code>sudo apt-get install texlive-full</code>。</p>\n<p>对于编辑器选择，我直接用的是texmaker,虽然整体来说用得不错，但我还是有点嫌弃它界面有点丑。。我查阅了其他一些流行的编辑器，如sublime,lyX等，最终还是选择了texmaker的fork版texstudio，界面之类的改进了很多，加上之前texmaker习惯大部分都适用，我觉得还是不错的。至于为什么不用vim来编辑latex，我觉得这就像我不用vim编辑markdown一样，我觉得latex及markdown都是需要实时预览，编辑起来才爽的语言，虽然vim也可以搞些插件来预览，但是一方面太麻烦，一方面vim提倡的是解放双手，远离鼠标，一旦有实时预览，双手必然会回归鼠标，我觉得这样就没有必要了，因此对于markdown和latex我都选择了其他编辑器。下图是texstudio界面：<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-185e4118d7e48ae9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/800\" alt=\"image.png\"></p>\n<h2 id=\"中文支持\"><a href=\"#中文支持\" class=\"headerlink\" title=\"中文支持\"></a>中文支持</h2><p>其实latex支持中文很简单，只需在头文件处加入<code>\\usepackage{ctex}</code>或者<code>\\usepackage{xeCJK}</code>,然后用xelatex编译即可，中文字体也可以通过<code>\\setCJKmainfont{中文字体}</code>自己设置。</p>\n<h2 id=\"字体包问题\"><a href=\"#字体包问题\" class=\"headerlink\" title=\"字体包问题\"></a>字体包问题</h2><p>我在编译一个文件时用到了<code>\\usapage{uarial}</code>,但是编译失败，message显示<code>File &#39;uarial.sty&#39; not found</code>，该包没有默认安装，经过google之后，我起初以为是ubuntu没有该uarial字体，于是将windows下的字体都安装到了Ubuntu中，并且还装了文泉译微米黑字体(为了好看)..<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install ttf-wqy-microhei </span><br><span class=\"line\">sudo apt-get install ttf-mscorefonts-installer </span><br><span class=\"line\">sudo fc-cache -f -v //更新</span><br></pre></td></tr></table></figure></p>\n<p>这么做之后并无乱用，因为问题其实是latex缺少包，而非系统缺少字体。。</p>\n<p>正确做法是从CTAN下载non free fonts,也就是这些字体包不是免费的(怪不得不默认安装在latex)。。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -q http://tug.org/fonts/getnonfreefonts/install-getnonfreefonts</span><br><span class=\"line\">sudo texlua ./install-getnonfreefonts</span><br><span class=\"line\">sudo getnonfreefonts --sys -a</span><br></pre></td></tr></table></figure></p>\n<hr>\n<h1 id=\"Matlab-R2016a\"><a href=\"#Matlab-R2016a\" class=\"headerlink\" title=\"Matlab R2016a\"></a>Matlab R2016a</h1><p>我分享的iso下载地址及crack破解文件:<a href=\"http://pan.baidu.com/s/1nuHAUCh\" target=\"_blank\" rel=\"noopener\">百度网盘</a></p>\n<h2 id=\"1-挂载安装\"><a href=\"#1-挂载安装\" class=\"headerlink\" title=\"1. 挂载安装\"></a>1. 挂载安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir /media/matlab</span><br><span class=\"line\">sudo mount -o loop ~/Downloads/R2016a_glnxa64.iso /media/matlab/ //挂载iso到/matlab文件夹</span><br><span class=\"line\">cd /media/matlab</span><br><span class=\"line\">sudo ./install</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-破解激活\"><a href=\"#2-破解激活\" class=\"headerlink\" title=\"2.破解激活\"></a>2.破解激活</h2><ul>\n<li>安装过程中选择不联网安装,输入产品密钥(crack文件中的FIK).</li>\n<li>等待安装完成, 默认安装位置为/usr/local/MATLAB/R2016a.</li>\n<li>安装结束后,打开matlab应用程序.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/MATLAB/R2016a/bin/glnxa64/</span><br><span class=\"line\">sudo MATLAB</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>选择离线激活,并添加crack中的Matlab_R2016a_glnxa64.lic.</p>\n<ul>\n<li>将crack中的另外两个文件复制到matlab安装目录下.<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo cp ~/Downloads/crack/libcufft.so.7.5.18 /usr/local/MATLAB/R2016a/bin/glnxa64/</span><br><span class=\"line\"> sudo cp ~/Downloads/crack/libmwservices.so /usr/local/MATLAB/R2016a/bin/glnxa64/</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"3-创建快捷方式\"><a href=\"#3-创建快捷方式\" class=\"headerlink\" title=\"3. 创建快捷方式\"></a>3. 创建快捷方式</h2><ul>\n<li>由于默认PATH里不包含/usr/local/MATLAB,所以终端直接输入matlab是不行的,可以创建一个软链接<br><code>sudo ln -s /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB /usr/local/bin/matlab</code></li>\n<li><p>为了更加方便,我们可以创建一个桌面快捷方式,在/usr/share/applications/下面创建一个Matlab.desktop,并添加内容如下</p>\n<pre><code>  [Desktop Entry]\n  Type = Application\n  Name = Matlab\n  GenericName = Matlab R2016a\n  Comment = Matlab R2016a: The Language of the Technical Computing\n  Exec = /usr/local/MATLAB/R2016a/bin/glnxa64/MATLAB -desktop //路径需自己修改\n  Icon = /usr/local/MATLAB/matlab.png // 网上下载一个快捷方式图标\n  StartupNotify = true\n  Terminal = false\n  Categories = Development;Matlab;\n</code></pre><p>接着加上权限<code>sudo chmod a+x Matlab.desktop</code>.<br><a href=\"http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120\" target=\"_blank\" rel=\"noopener\">我的快捷方式图标</a>可供下载.<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-3a8333c910981276.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/120\" alt=\"Matlab\"></p>\n</li>\n<li><p>为了避免每次打开matlab后存在权限问题无法读取~/.matab文件的问题，通过<code>sudo chown [your ubuntu username] -R ~/.matlab</code>改变权限。</p>\n</li>\n</ul>\n<h2 id=\"4-字体和快捷键\"><a href=\"#4-字体和快捷键\" class=\"headerlink\" title=\"4. 字体和快捷键\"></a>4. 字体和快捷键</h2><ul>\n<li>字体美化:进入Matlab，从菜单打开Preferences，打开Fonts页，把右边最下面的复选框Use antialising to smooth desktop fonts选中.</li>\n<li>中文字体显示问题:可以不用很麻烦,同样打开Preferences-&gt;Fonts,挑选一个支持中文的字体就ok了,我选择的是AR PL Ukai CN(楷体)．</li>\n<li>默认的快捷键是Emacs的，有点不习惯，可以Preferences-&gt;Keyboard-&gt;Shortcuts-&gt;Active settings选Windows Default set.</li>\n</ul>\n<hr>\n<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><p>之前在Ubuntu14.04里我用octopress搭建了个人博客，重装之后我原本也是想装回octopress的，但是偶然间发现了hexo，一个更加快速、简洁且高效的博客框架！而且支持octopress的完美迁移，看了用hexo搭建的几个demo之后，我立马就决定这回使用hexo搭建个人博客了。</p>\n<h2 id=\"安装与使用说明\"><a href=\"#安装与使用说明\" class=\"headerlink\" title=\"安装与使用说明\"></a>安装与使用说明</h2><p>hexo的安装和使用可以说相当得简单了，看完<a href=\"https://hexo.io/zh-cn/docs/index.html\" target=\"_blank\" rel=\"noopener\">官网的介绍文档</a>我相信就立马入门了。</p>\n<h2 id=\"主题更换\"><a href=\"#主题更换\" class=\"headerlink\" title=\"主题更换\"></a>主题更换</h2><p>当然了，安装hexo后最重要当然是选一个自己最心仪的主题（其实官网提供的landscape主题其实也还可以。。），经过一番搜索，我选择了github上hexo主题star数排名第一的next主题，附上github<a href=\"https://github.com/iissnan/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">传送门</a>，以及next作者的<a href=\"http://notes.iissnan.com/\" target=\"_blank\" rel=\"noopener\">demo</a>。</p>\n<p>Next的主题安装和使用也有着详细的说明文档，附上<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">传送门</a>,官网的介绍已经很详细了，我也就不在这里赘述了。</p>\n<p>最后，我总结一下自己用到的hexo模块：</p>\n<ul>\n<li>选择Pisces主题（hexo又分为Muse, Mist, Pisces三个主题）。</li>\n<li>阅读次数统计（LeanCloud）。</li>\n<li>添加「标签」页面。</li>\n<li>设置night bright代码高亮主题。</li>\n<li>侧边栏社交链接添加微博，知乎。</li>\n<li>开启打赏功能。</li>\n<li>添加disqus评论系统。</li>\n<li>添加local search。</li>\n<li>开启MathJax，这里要注意的是，我在使用分段函数时，分段用的latex代码<code>\\\\</code>只被识别前一个<code>\\</code>,所以要分段必须使用三个<code>\\</code>。。</li>\n</ul>\n<hr>\n<h1 id=\"Tensorflow\"><a href=\"#Tensorflow\" class=\"headerlink\" title=\"Tensorflow\"></a>Tensorflow</h1><p>机器学习将是我的以后工作及学习重心，tensorflow这个平台我必须快速熟悉起来。Tensorflow的安装分为无GPU(只支持CPU)和有GPU的安装，前者安装相当简单，后者的话会很麻烦，还需要对显卡驱动的各种配置。。。由于实验室的工作电脑只是集成显卡而已，所以我就选择了无GPU的安装，当然之后要是有独显了，再研究一下如何支持GPU。</p>\n<p>建议使用pip直接进行安装(当然也可以通过docker，Anaconda等第三方环境安装),确保安装了python3及pip3，<code>sudo apt-get install python3-pip python3-dev</code>,然后再利用pip3就可以直接安装tensorflow无GPU支持版了，<code>pip3 install tensorflow</code>。</p>\n<h2 id=\"Python安装numpy-scipy-matplotlib库\"><a href=\"#Python安装numpy-scipy-matplotlib库\" class=\"headerlink\" title=\"Python安装numpy,scipy,matplotlib库\"></a>Python安装numpy,scipy,matplotlib库</h2><p>作为python中重要的科学计算库，numpy，scipy，matplotlib库一定要正确安装。</p>\n<ul>\n<li>NumPy是一个定义了数值数组和矩阵类型和它们的基本运算的语言扩展。 </li>\n<li>SciPy是一种使用NumPy来做高等数学、信号处理、优化、统计和许多其它科学任务的语言扩展。 </li>\n<li>Matplotlib则可能是Python 2D绘图领域使用最广泛的套件。</li>\n</ul>\n<p>之前在windows下用pip安装scipy时，总会遇到依赖问题，我只能通过<a href=\"https://www.zhihu.com/question/30188492\" target=\"_blank\" rel=\"noopener\">这篇知乎上的方法</a>，从非官方维护的第三方库安装scipy。然而在ubuntu下，不需要用pip, 直接利用<code>apt-get</code>安装，它会将依赖项自动安装，非常简单有效。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-numpy</span><br><span class=\"line\">sudo apt-get install python-scipy</span><br><span class=\"line\">sudo apt-get install python-matplotlib</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"pip换源\"><a href=\"#pip换源\" class=\"headerlink\" title=\"pip换源\"></a>pip换源</h2><p>由于连接国外官方pypi很慢，我的电脑大概是70kb/s左右的速度，所以最好将pip源更换为国内的镜像源，我使用的是清华大学的pip源。</p>\n<p>新建<code>~/.pip/pip.conf</code>,创建内容如下:</p>\n<blockquote>\n<p>[global]<br>index-url = <a href=\"https://pypi.tuna.tsinghua.edu.cn/simple\" target=\"_blank\" rel=\"noopener\">https://pypi.tuna.tsinghua.edu.cn/simple</a></p>\n</blockquote>"},{"title":"RSA加密算法","date":"2016-04-21T09:40:06.000Z","_content":"\n今天在了解公钥加密算法的时候看到了RSA加密算法，在理解其原理后觉得算法思想很是巧妙，感触颇深。\n\n- 不对称加密比对称加密算法好在能够在防止中间人攻击的情况下，减少系统的算法数。\n- 不对称加密要想完全防止中间人攻击，需要防止中间人伪造公钥，因此有一个国际数字证书认证机构，叫做 CA，会对每个提供 SSL 加密访问（https）的网站的公钥作一个签名认证。用户的浏览器事先内置了 CA 的公钥，每次收到目标网站传来的公钥，就用 CA 的公钥检验一下目标网站的公钥是否可靠。如果验证不通过，浏览器会发出警告。尤其是银行这样的网站，要注意其数字证书是否可靠。\n\n<!-- more -->\n\n详细算法原理，看[维基百科](https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95)。\n其算法核心思想还是利用大数质因数分解的困难性和复杂性，若是有人能发明一种快速质因数分解算法，那RSA加密就要无容身之地喽，但这个难度估计就是证明数学上那些有关质数的猜想了。。。\n\n","source":"_posts/rsa.markdown","raw":"---\ntitle: RSA加密算法\ndate: 2016-04-21 17:40:06\ntags: Algorithm\n---\n\n今天在了解公钥加密算法的时候看到了RSA加密算法，在理解其原理后觉得算法思想很是巧妙，感触颇深。\n\n- 不对称加密比对称加密算法好在能够在防止中间人攻击的情况下，减少系统的算法数。\n- 不对称加密要想完全防止中间人攻击，需要防止中间人伪造公钥，因此有一个国际数字证书认证机构，叫做 CA，会对每个提供 SSL 加密访问（https）的网站的公钥作一个签名认证。用户的浏览器事先内置了 CA 的公钥，每次收到目标网站传来的公钥，就用 CA 的公钥检验一下目标网站的公钥是否可靠。如果验证不通过，浏览器会发出警告。尤其是银行这样的网站，要注意其数字证书是否可靠。\n\n<!-- more -->\n\n详细算法原理，看[维基百科](https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95)。\n其算法核心思想还是利用大数质因数分解的困难性和复杂性，若是有人能发明一种快速质因数分解算法，那RSA加密就要无容身之地喽，但这个难度估计就是证明数学上那些有关质数的猜想了。。。\n\n","slug":"rsa","published":1,"updated":"2020-06-04T07:43:27.406Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8yy00068edkoswupvl4","content":"<p>今天在了解公钥加密算法的时候看到了RSA加密算法，在理解其原理后觉得算法思想很是巧妙，感触颇深。</p>\n<ul>\n<li>不对称加密比对称加密算法好在能够在防止中间人攻击的情况下，减少系统的算法数。</li>\n<li>不对称加密要想完全防止中间人攻击，需要防止中间人伪造公钥，因此有一个国际数字证书认证机构，叫做 CA，会对每个提供 SSL 加密访问（https）的网站的公钥作一个签名认证。用户的浏览器事先内置了 CA 的公钥，每次收到目标网站传来的公钥，就用 CA 的公钥检验一下目标网站的公钥是否可靠。如果验证不通过，浏览器会发出警告。尤其是银行这样的网站，要注意其数字证书是否可靠。</li>\n</ul>\n<a id=\"more\"></a>\n<p>详细算法原理，看<a href=\"https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95\" target=\"_blank\" rel=\"noopener\">维基百科</a>。<br>其算法核心思想还是利用大数质因数分解的困难性和复杂性，若是有人能发明一种快速质因数分解算法，那RSA加密就要无容身之地喽，但这个难度估计就是证明数学上那些有关质数的猜想了。。。</p>\n","site":{"data":{}},"excerpt":"<p>今天在了解公钥加密算法的时候看到了RSA加密算法，在理解其原理后觉得算法思想很是巧妙，感触颇深。</p>\n<ul>\n<li>不对称加密比对称加密算法好在能够在防止中间人攻击的情况下，减少系统的算法数。</li>\n<li>不对称加密要想完全防止中间人攻击，需要防止中间人伪造公钥，因此有一个国际数字证书认证机构，叫做 CA，会对每个提供 SSL 加密访问（https）的网站的公钥作一个签名认证。用户的浏览器事先内置了 CA 的公钥，每次收到目标网站传来的公钥，就用 CA 的公钥检验一下目标网站的公钥是否可靠。如果验证不通过，浏览器会发出警告。尤其是银行这样的网站，要注意其数字证书是否可靠。</li>\n</ul>","more":"<p>详细算法原理，看<a href=\"https://zh.wikipedia.org/wiki/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95\" target=\"_blank\" rel=\"noopener\">维基百科</a>。<br>其算法核心思想还是利用大数质因数分解的困难性和复杂性，若是有人能发明一种快速质因数分解算法，那RSA加密就要无容身之地喽，但这个难度估计就是证明数学上那些有关质数的猜想了。。。</p>"},{"title":"Texlive和Ctex的中文兼容问题","date":"2017-07-07T08:43:27.000Z","_content":"\n因为用的Ubuntu，所以用的是texlive编译环境来写latex,当然我也用过ctex套装。总体来讲，感觉编译速度texlive要更胜一筹，用起来更加舒服。\n\n今早师妹找我要beamer的模板，因为师妹用的是windows系统下的ctex，所以就发现了一个以前没弄清楚的问题，关于ctex和texlive的兼容问题。\n\n\n# 概念区别\n说兼容问题之前，关于ctex和texlive有一些基本概念要搞清楚（我之前也弄混了。。）\n<!-- more -->\n- Texlive是一个latex语言的编译环境， Ctex只是一个中文版套装！\n- Latex的编译环境主要有以下几个：\n    - Texlive(主要用于Linux)\n    - MikTex(主要用于Windows)\n    - MaxTex(主要用于Mac)\n- Ctex是专门针对中文的国人整理的一个套装，用的是MikTex的编译环境，还包含了WinEdt编辑器，GsView等软件。\n- Ctex package又是另一个概念！在我们需要写中文latex文档时，就需要用到ctex这个宏包，所以此ctex又非彼ctex。。\n\n# 英文兼容\nTexlive和ctex在英文上面，没有任何的兼容问题。我以前在这两种环境下切换时，都是写的英文文档，这就是为什么我之前一直觉得没有兼容问题，天真地以为两者虽然环境不同，但latex,pdflatex,xelatex等等命令功能都是一样的。。但事实上，之所以英文没有兼容问题，是因为无论那种编码方式，英文都是以一个字节的ASCII码形式编码，因此在任何编码中，英文都是兼容的。\n\n# 中文兼容\n中文兼容就是一个很大的问题了，因为在ctex的winedt编辑器中，默认的编码方式是GBK，而在linux环境下，默认的编码方式是utf-8，这就是为什么很多时候，linux下的文件放到windows下中文就会乱码。\n\n对于编辑器而言，我们可以设置不同的编码打开方式，让文件正常显示，但是尽管如此，文件本身的编码方式依然是不会改变的！所以最好的方法，就是在哪种环境下，就转换为哪种环境下的编码方式，以防止后面莫名奇妙地出错。注意，这里就要提到一个叫做inputenc的包了, 这个包可以让我们选择打开文件的编码方式，但是我对于gbk编码的文件选择utf-8打开，最终还是会出现问题。。所以我觉得这个包应该也是没有编码转换的功能，还是之前那个方法，最好先将文件编码转换好！\n\n既然文件编码已经转换好，接下来说一说，ctex和texlive对中文支持的区别\n\n## Texlive中文支持\nTexlive下要支持中文，最简单的方法就是满足下面三个条件\n- UTF-8编码的tex文件\n- `\\usepackage{ctex}`\n- Xelatex编译文件\n\n简单明了，这也是一个通用的方法，在任何编译环境下，都可以使用此方法支持中文。注意，有的时候在用这个方法编译从ctex那边移植过来的文件时，可能会遇到中文字体问题，大概率是因为模板里用了windows下的字体，而linux下没有这些字体，需要安装。\n\n## Ctex中文支持\n除了上面所述的方法，ctex有自己独特的中文支持方法（毕竟国人开发）：\n- GBK编码的tex文件\n- `\\usepackage{ctex}`\n- latex-dvi-ps-pdf或者pdflatex编译文件\n\n这个方法也挺简单的，但是只能针对于ctex,我觉得其中的原理应该是ctex对于pdflatex和latex命令做了一些调整，使其能够支持中文，我觉得他们本身应该是不能支持中文的。\n\n**切记，这两种方式最好不要随意搭配，搭配后可能会成功，但大概率是要出问题的。。我觉得最好的办法就是采用xelatex编辑utf-8文件！**\n\n\n\n# 总结\n以上这些是我经过查阅资料以及在windows和ubuntu下试验总体得到的，具体一些理解可能会有偏差，但以上几个方法是肯定正确的。\n\n最后加一个小tips：\n如果要改变beamer模板中的itemsize符号，需要加`\\setbeamertemplate{items}[符号]`;若是article环境，需加`\\renewcommand{\\labelitemi}{符号}`。\n","source":"_posts/some-questions-about-ctex-and-texlive.md","raw":"---\ntitle: Texlive和Ctex的中文兼容问题\ndate: 2017-07-07 16:43:27\ntags: Latex\n---\n\n因为用的Ubuntu，所以用的是texlive编译环境来写latex,当然我也用过ctex套装。总体来讲，感觉编译速度texlive要更胜一筹，用起来更加舒服。\n\n今早师妹找我要beamer的模板，因为师妹用的是windows系统下的ctex，所以就发现了一个以前没弄清楚的问题，关于ctex和texlive的兼容问题。\n\n\n# 概念区别\n说兼容问题之前，关于ctex和texlive有一些基本概念要搞清楚（我之前也弄混了。。）\n<!-- more -->\n- Texlive是一个latex语言的编译环境， Ctex只是一个中文版套装！\n- Latex的编译环境主要有以下几个：\n    - Texlive(主要用于Linux)\n    - MikTex(主要用于Windows)\n    - MaxTex(主要用于Mac)\n- Ctex是专门针对中文的国人整理的一个套装，用的是MikTex的编译环境，还包含了WinEdt编辑器，GsView等软件。\n- Ctex package又是另一个概念！在我们需要写中文latex文档时，就需要用到ctex这个宏包，所以此ctex又非彼ctex。。\n\n# 英文兼容\nTexlive和ctex在英文上面，没有任何的兼容问题。我以前在这两种环境下切换时，都是写的英文文档，这就是为什么我之前一直觉得没有兼容问题，天真地以为两者虽然环境不同，但latex,pdflatex,xelatex等等命令功能都是一样的。。但事实上，之所以英文没有兼容问题，是因为无论那种编码方式，英文都是以一个字节的ASCII码形式编码，因此在任何编码中，英文都是兼容的。\n\n# 中文兼容\n中文兼容就是一个很大的问题了，因为在ctex的winedt编辑器中，默认的编码方式是GBK，而在linux环境下，默认的编码方式是utf-8，这就是为什么很多时候，linux下的文件放到windows下中文就会乱码。\n\n对于编辑器而言，我们可以设置不同的编码打开方式，让文件正常显示，但是尽管如此，文件本身的编码方式依然是不会改变的！所以最好的方法，就是在哪种环境下，就转换为哪种环境下的编码方式，以防止后面莫名奇妙地出错。注意，这里就要提到一个叫做inputenc的包了, 这个包可以让我们选择打开文件的编码方式，但是我对于gbk编码的文件选择utf-8打开，最终还是会出现问题。。所以我觉得这个包应该也是没有编码转换的功能，还是之前那个方法，最好先将文件编码转换好！\n\n既然文件编码已经转换好，接下来说一说，ctex和texlive对中文支持的区别\n\n## Texlive中文支持\nTexlive下要支持中文，最简单的方法就是满足下面三个条件\n- UTF-8编码的tex文件\n- `\\usepackage{ctex}`\n- Xelatex编译文件\n\n简单明了，这也是一个通用的方法，在任何编译环境下，都可以使用此方法支持中文。注意，有的时候在用这个方法编译从ctex那边移植过来的文件时，可能会遇到中文字体问题，大概率是因为模板里用了windows下的字体，而linux下没有这些字体，需要安装。\n\n## Ctex中文支持\n除了上面所述的方法，ctex有自己独特的中文支持方法（毕竟国人开发）：\n- GBK编码的tex文件\n- `\\usepackage{ctex}`\n- latex-dvi-ps-pdf或者pdflatex编译文件\n\n这个方法也挺简单的，但是只能针对于ctex,我觉得其中的原理应该是ctex对于pdflatex和latex命令做了一些调整，使其能够支持中文，我觉得他们本身应该是不能支持中文的。\n\n**切记，这两种方式最好不要随意搭配，搭配后可能会成功，但大概率是要出问题的。。我觉得最好的办法就是采用xelatex编辑utf-8文件！**\n\n\n\n# 总结\n以上这些是我经过查阅资料以及在windows和ubuntu下试验总体得到的，具体一些理解可能会有偏差，但以上几个方法是肯定正确的。\n\n最后加一个小tips：\n如果要改变beamer模板中的itemsize符号，需要加`\\setbeamertemplate{items}[符号]`;若是article环境，需加`\\renewcommand{\\labelitemi}{符号}`。\n","slug":"some-questions-about-ctex-and-texlive","published":1,"updated":"2020-06-04T07:43:27.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8z000098edkphcswvk5","content":"<p>因为用的Ubuntu，所以用的是texlive编译环境来写latex,当然我也用过ctex套装。总体来讲，感觉编译速度texlive要更胜一筹，用起来更加舒服。</p>\n<p>今早师妹找我要beamer的模板，因为师妹用的是windows系统下的ctex，所以就发现了一个以前没弄清楚的问题，关于ctex和texlive的兼容问题。</p>\n<h1 id=\"概念区别\"><a href=\"#概念区别\" class=\"headerlink\" title=\"概念区别\"></a>概念区别</h1><p>说兼容问题之前，关于ctex和texlive有一些基本概念要搞清楚（我之前也弄混了。。）<br><a id=\"more\"></a></p>\n<ul>\n<li>Texlive是一个latex语言的编译环境， Ctex只是一个中文版套装！</li>\n<li>Latex的编译环境主要有以下几个：<ul>\n<li>Texlive(主要用于Linux)</li>\n<li>MikTex(主要用于Windows)</li>\n<li>MaxTex(主要用于Mac)</li>\n</ul>\n</li>\n<li>Ctex是专门针对中文的国人整理的一个套装，用的是MikTex的编译环境，还包含了WinEdt编辑器，GsView等软件。</li>\n<li>Ctex package又是另一个概念！在我们需要写中文latex文档时，就需要用到ctex这个宏包，所以此ctex又非彼ctex。。</li>\n</ul>\n<h1 id=\"英文兼容\"><a href=\"#英文兼容\" class=\"headerlink\" title=\"英文兼容\"></a>英文兼容</h1><p>Texlive和ctex在英文上面，没有任何的兼容问题。我以前在这两种环境下切换时，都是写的英文文档，这就是为什么我之前一直觉得没有兼容问题，天真地以为两者虽然环境不同，但latex,pdflatex,xelatex等等命令功能都是一样的。。但事实上，之所以英文没有兼容问题，是因为无论那种编码方式，英文都是以一个字节的ASCII码形式编码，因此在任何编码中，英文都是兼容的。</p>\n<h1 id=\"中文兼容\"><a href=\"#中文兼容\" class=\"headerlink\" title=\"中文兼容\"></a>中文兼容</h1><p>中文兼容就是一个很大的问题了，因为在ctex的winedt编辑器中，默认的编码方式是GBK，而在linux环境下，默认的编码方式是utf-8，这就是为什么很多时候，linux下的文件放到windows下中文就会乱码。</p>\n<p>对于编辑器而言，我们可以设置不同的编码打开方式，让文件正常显示，但是尽管如此，文件本身的编码方式依然是不会改变的！所以最好的方法，就是在哪种环境下，就转换为哪种环境下的编码方式，以防止后面莫名奇妙地出错。注意，这里就要提到一个叫做inputenc的包了, 这个包可以让我们选择打开文件的编码方式，但是我对于gbk编码的文件选择utf-8打开，最终还是会出现问题。。所以我觉得这个包应该也是没有编码转换的功能，还是之前那个方法，最好先将文件编码转换好！</p>\n<p>既然文件编码已经转换好，接下来说一说，ctex和texlive对中文支持的区别</p>\n<h2 id=\"Texlive中文支持\"><a href=\"#Texlive中文支持\" class=\"headerlink\" title=\"Texlive中文支持\"></a>Texlive中文支持</h2><p>Texlive下要支持中文，最简单的方法就是满足下面三个条件</p>\n<ul>\n<li>UTF-8编码的tex文件</li>\n<li><code>\\usepackage{ctex}</code></li>\n<li>Xelatex编译文件</li>\n</ul>\n<p>简单明了，这也是一个通用的方法，在任何编译环境下，都可以使用此方法支持中文。注意，有的时候在用这个方法编译从ctex那边移植过来的文件时，可能会遇到中文字体问题，大概率是因为模板里用了windows下的字体，而linux下没有这些字体，需要安装。</p>\n<h2 id=\"Ctex中文支持\"><a href=\"#Ctex中文支持\" class=\"headerlink\" title=\"Ctex中文支持\"></a>Ctex中文支持</h2><p>除了上面所述的方法，ctex有自己独特的中文支持方法（毕竟国人开发）：</p>\n<ul>\n<li>GBK编码的tex文件</li>\n<li><code>\\usepackage{ctex}</code></li>\n<li>latex-dvi-ps-pdf或者pdflatex编译文件</li>\n</ul>\n<p>这个方法也挺简单的，但是只能针对于ctex,我觉得其中的原理应该是ctex对于pdflatex和latex命令做了一些调整，使其能够支持中文，我觉得他们本身应该是不能支持中文的。</p>\n<p><strong>切记，这两种方式最好不要随意搭配，搭配后可能会成功，但大概率是要出问题的。。我觉得最好的办法就是采用xelatex编辑utf-8文件！</strong></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>以上这些是我经过查阅资料以及在windows和ubuntu下试验总体得到的，具体一些理解可能会有偏差，但以上几个方法是肯定正确的。</p>\n<p>最后加一个小tips：<br>如果要改变beamer模板中的itemsize符号，需要加<code>\\setbeamertemplate{items}[符号]</code>;若是article环境，需加<code>\\renewcommand{\\labelitemi}{符号}</code>。</p>\n","site":{"data":{}},"excerpt":"<p>因为用的Ubuntu，所以用的是texlive编译环境来写latex,当然我也用过ctex套装。总体来讲，感觉编译速度texlive要更胜一筹，用起来更加舒服。</p>\n<p>今早师妹找我要beamer的模板，因为师妹用的是windows系统下的ctex，所以就发现了一个以前没弄清楚的问题，关于ctex和texlive的兼容问题。</p>\n<h1 id=\"概念区别\"><a href=\"#概念区别\" class=\"headerlink\" title=\"概念区别\"></a>概念区别</h1><p>说兼容问题之前，关于ctex和texlive有一些基本概念要搞清楚（我之前也弄混了。。）<br>","more":"</p>\n<ul>\n<li>Texlive是一个latex语言的编译环境， Ctex只是一个中文版套装！</li>\n<li>Latex的编译环境主要有以下几个：<ul>\n<li>Texlive(主要用于Linux)</li>\n<li>MikTex(主要用于Windows)</li>\n<li>MaxTex(主要用于Mac)</li>\n</ul>\n</li>\n<li>Ctex是专门针对中文的国人整理的一个套装，用的是MikTex的编译环境，还包含了WinEdt编辑器，GsView等软件。</li>\n<li>Ctex package又是另一个概念！在我们需要写中文latex文档时，就需要用到ctex这个宏包，所以此ctex又非彼ctex。。</li>\n</ul>\n<h1 id=\"英文兼容\"><a href=\"#英文兼容\" class=\"headerlink\" title=\"英文兼容\"></a>英文兼容</h1><p>Texlive和ctex在英文上面，没有任何的兼容问题。我以前在这两种环境下切换时，都是写的英文文档，这就是为什么我之前一直觉得没有兼容问题，天真地以为两者虽然环境不同，但latex,pdflatex,xelatex等等命令功能都是一样的。。但事实上，之所以英文没有兼容问题，是因为无论那种编码方式，英文都是以一个字节的ASCII码形式编码，因此在任何编码中，英文都是兼容的。</p>\n<h1 id=\"中文兼容\"><a href=\"#中文兼容\" class=\"headerlink\" title=\"中文兼容\"></a>中文兼容</h1><p>中文兼容就是一个很大的问题了，因为在ctex的winedt编辑器中，默认的编码方式是GBK，而在linux环境下，默认的编码方式是utf-8，这就是为什么很多时候，linux下的文件放到windows下中文就会乱码。</p>\n<p>对于编辑器而言，我们可以设置不同的编码打开方式，让文件正常显示，但是尽管如此，文件本身的编码方式依然是不会改变的！所以最好的方法，就是在哪种环境下，就转换为哪种环境下的编码方式，以防止后面莫名奇妙地出错。注意，这里就要提到一个叫做inputenc的包了, 这个包可以让我们选择打开文件的编码方式，但是我对于gbk编码的文件选择utf-8打开，最终还是会出现问题。。所以我觉得这个包应该也是没有编码转换的功能，还是之前那个方法，最好先将文件编码转换好！</p>\n<p>既然文件编码已经转换好，接下来说一说，ctex和texlive对中文支持的区别</p>\n<h2 id=\"Texlive中文支持\"><a href=\"#Texlive中文支持\" class=\"headerlink\" title=\"Texlive中文支持\"></a>Texlive中文支持</h2><p>Texlive下要支持中文，最简单的方法就是满足下面三个条件</p>\n<ul>\n<li>UTF-8编码的tex文件</li>\n<li><code>\\usepackage{ctex}</code></li>\n<li>Xelatex编译文件</li>\n</ul>\n<p>简单明了，这也是一个通用的方法，在任何编译环境下，都可以使用此方法支持中文。注意，有的时候在用这个方法编译从ctex那边移植过来的文件时，可能会遇到中文字体问题，大概率是因为模板里用了windows下的字体，而linux下没有这些字体，需要安装。</p>\n<h2 id=\"Ctex中文支持\"><a href=\"#Ctex中文支持\" class=\"headerlink\" title=\"Ctex中文支持\"></a>Ctex中文支持</h2><p>除了上面所述的方法，ctex有自己独特的中文支持方法（毕竟国人开发）：</p>\n<ul>\n<li>GBK编码的tex文件</li>\n<li><code>\\usepackage{ctex}</code></li>\n<li>latex-dvi-ps-pdf或者pdflatex编译文件</li>\n</ul>\n<p>这个方法也挺简单的，但是只能针对于ctex,我觉得其中的原理应该是ctex对于pdflatex和latex命令做了一些调整，使其能够支持中文，我觉得他们本身应该是不能支持中文的。</p>\n<p><strong>切记，这两种方式最好不要随意搭配，搭配后可能会成功，但大概率是要出问题的。。我觉得最好的办法就是采用xelatex编辑utf-8文件！</strong></p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>以上这些是我经过查阅资料以及在windows和ubuntu下试验总体得到的，具体一些理解可能会有偏差，但以上几个方法是肯定正确的。</p>\n<p>最后加一个小tips：<br>如果要改变beamer模板中的itemsize符号，需要加<code>\\setbeamertemplate{items}[符号]</code>;若是article环境，需加<code>\\renewcommand{\\labelitemi}{符号}</code>。</p>"},{"title":"开始使用Ubuntu","date":"2016-04-19T12:41:51.000Z","_content":"对linux的向往由来已久，加上前阵子在win7下用vim总是感觉很不舒服，用gcc编译还要专门去下载MinGW(minmalist GNU for Windows),这么想还不如直接去用linux，GNU下的那些工具就直接能用了！在linux下打造一个IDE吧！\n> GNU's Not Unix!\n\n哈哈哈，其实以前也装过一阵Ubuntu,但是那会啥都不会，四处碰壁，没用多久就泄气了。可是看了各种大牛的书后，发现windows这种操作系统都是给大牛们摸透了计算机后想办法降低门槛给小白用的，所以要是不会Linux，永远进不了真正的程序员世界。\n\n<!-- more -->\n\n对于linux的众多发行版中，我选择了Ubuntu 14.04 LTS，毕竟Ubuntu有不错的GUI环境（X window的gnome），我既不是忠实的GUI党也不是忠实的CLI党，我觉得选择自己最好用的才是最重要的，该GUI的时候还是得GUI（用命令行去找分区里的文件太痛苦了。。），哈哈当然CLI是超强大的！\n\n大概花了两周左右的时间，将[《鸟叔的Linux私房菜之基础学习篇》](http://linux.vbird.org/)看了一半（实在好长。。剩下的慢慢看），然后将Ubuntu下的工作环境都部署了一遍，感觉以后大部分的工作都可以完成了。\n\n这部署的过程相当纠结，当然主要还是因为我的强迫症，比如一个字体好不好看我要纠结半天，各种换啊换，每次强迫症犯的时候都好想打死自己啊！所以部署的效率实在是有点低诶。好了，话不多说，下面贴上我的配置。\n\n\n# 分区\n\n装ubuntu的时候要给系统分区，我参考了鸟叔的书以及网络上的一些博客后，最后我分区如下:\n![Ubuntu 分区](/images/my/1.png)\n\n因为我装了双系统，我把sda1,sda2,sda3三个主分区都分给了windows，sda4扩展分区分成了好多逻辑分区，分别给/boot，/，/home，/var，/usr，总共大概给Ubuntu650G左右^0^\n\n\n# VPN\n\n由于用的是校园网，学校有专门的VPN客户端，我就去学校的论坛那里下了个Ubuntu下的vpn客户端，配置简单，没费什么事就能上网了（当然，前提要设置好IP地址和DNS，连上校内网）。\n\n# 换源\n\n虽然进入系统后，软件更新源里默认的是中国的服务器，但我还是按照[Ubuntu中文](http://wiki.ubuntu.org.cn/%E6%BA%90%E5%88%97%E8%A1%A8)的推荐换了网易，搜狐，阿里云及我们自己学校的源。\n\n```\n#网易\ndeb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\n\n#搜狐\ndeb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse\n\n#学校\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-backports restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse\n\n#阿里云\ndeb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\n```\n\n# 输入法\n\nUbuntu下自带的ibus输入法用起来还是不舒服，不像搜狗输入法那样将模糊语义，关键词之类的做得符合日常生活习惯，所以我还是装了搜狗输入法。\n\n可以直接去[官网](http://pinyin.sogou.com/linux/)下载deb包，然后`sudo dpkg -i *.deb` 像搜狗输入法是需要fcitx做输入法框架的，所以安装完后需要在语言设置里将默认输入法设置为fcitx.\n\n\n# 浏览器\n\nUbuntu自带浏览器为firefox，但我以前用的一直都是Chrome，书签什么的同步也会方便一点的，所以毫不犹豫的换成了Chrome,`sudo apt-get install google-chrome-stable`\n\nflash插件问题:Chrome用的谷歌自己的flash插件，而firefox默认是没装flash插件的，所以我去abode flash player的[官网](https://get.adobe.com/cn/flashplayer/)手动下载了插件，教程可以看[Ubuntu中文里的介绍](http://wiki.ubuntu.org.cn/Flash)，Ubuntu软件中心装flash插件太坑了！安装的时候等半天根本就不动！\n\n\n# 词典\n看论文及查资料的时候少不了查英文单词，由于在windows里一直用有道词典，所以我先去有道官网看了一下，一看，还真有linux版本，马上下载deb包后用了一下，刚开始觉得还不错，因为有道的鼠标取词（不用划词）这个功能我实在喜欢，虽然取词反应貌似有点慢。但后来我突然发现单词无法**发音**！！查了各种资料还是无法解决，无奈我只能忍痛割爱。\n\n然后我还是用了公认好用的星际译王，不得不说，自己可以自由添加词典，离线也能查单词确实比较强大（*然而现在工作基本都是联网的*）。具体安装及下载词典教程[看这里](http://wiki.ubuntu.org.cn/index.php?title=Stardict&variant=zh-cn)。 \n\n发音我没有装，感觉文件比较大，离线发音没必要，因为我还在Chrome下载了一个插件，我个人觉得非常好用，推荐一下，[ChaZD](https://chrome.google.com/webstore/detail/chazd/nkiipedegbhbjmajlhpegcpcaacbfggp?hl=zh-CN)。\n\n# Matlab\n下载matlab估计是最让我蛋疼的事了，在windows直接找个破解版就好了，而找个linux下的破解版真是不容易，虽然好多博客都有贴下载地址，但我试了试总是下载不了，有的就是下到1G左右就不能继续下了，特别折腾，为此我还下了个BT客户端deluge(系统自带的transmission其实也挺好的)。\n\n后来终于找到了一个靠谱的matlab 2010a,用wget后台下载了一天终于下好了，具体教程看[这里](ftp://wcmc.csu.edu.cn/software/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E4%BB%B6/matlab/install%20matlab%20in%20linux.pdf)～\n\nmatlab下载好之后还有[中文乱码的问题](http://forum.ubuntu.org.cn/viewtopic.php?t=373776)还有[常见的一些安装问题](https://forum.ubuntu.org.cn/viewtopic.php?f=122&t=443586)这两篇帖子都解决了。\n\n\n# 办公套件\nLibreOffice以及WPC For Linux 都试过,感觉还是不行,格式会乱,所以决定还是office文件老老实实回到windows下编辑,平时自己写文档还是用markdown生成pdf,或者latex都行。\n\n# 工程绘图\n\n由于论文的需要，我需要一个类似MS下visio的工程绘图软件，这里我选的替代品是Dia，这个绘图软件基本能替代visio~安装很简单，也是直接`sudo apt-get install dia`，这里有个地方要注意的是，默认情况下进入dia是intergrated模式，中文显示会有问题，需要做如下修改\n\n    sudo gedit /usr/bin/dia\n    #dia-normal --integrated \"$@\"\n    dia-normal \"$@\"\n\n# 图片处理\n\nImagemagick！这个图片处理软件真的超棒！可以用import截图，用convert转换图片格式，大小，清晰，可以加滤镜等，非常好用，我直接把它当做默认图片打开方式了。安装同样`sudo apt-get install imagemagick`。\n\n# 视频，音频播放器\n\nMplayer！这是号称目前这个星球上支持多媒体文件格式最多的软件！哈哈哈，反正目前我电脑里的视频音频格式它都支持，而且gnome版的界面都还不错。详细介绍及安装可以看[这里](http://wiki.ubuntu.com.cn/MPlayer)\n\n# Git\nGit的安装很方便，直接`sudo apt-get install git`，因为git本来就是linus在linux下开发的嘛～具体git的使用方法，建议看[廖老师的这篇教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)！\n\n# 终端\n我这里直接就用ubuntu自带的gnome-terminal来使用Bash（Bourne again shell），作为一个强迫症患者，我觉得终端自带的紫底白字配色太伤眼睛了，于是上Github寻找好看的配色方案。\n\n刚开始我选了solarized，想把终端配色和vim的配色都弄成solarized。\n\n* 终端的solarized配色文件显示，[github下载](https://github.com/seebi/dircolors-solarized)\n* 终端的solarized配色，[github下载](https://github.com/Anthony25/gnome-terminal-colors-solarized)\n\n然而solarized配完后，总觉得看得不舒服，一时切换不过来，强迫症发作的我又去寻找其他配色。最后用了这个[Git](https://github.com/chriskempson/base16-gnome-terminal).\n![Ocean Light](/images/my/2.png)\n\n","source":"_posts/start-to-use-ubuntu.markdown","raw":"---\ntitle: \"开始使用Ubuntu\"\ndate: 2016-04-19 20:41:51\ntags: Ubuntu \n---\n对linux的向往由来已久，加上前阵子在win7下用vim总是感觉很不舒服，用gcc编译还要专门去下载MinGW(minmalist GNU for Windows),这么想还不如直接去用linux，GNU下的那些工具就直接能用了！在linux下打造一个IDE吧！\n> GNU's Not Unix!\n\n哈哈哈，其实以前也装过一阵Ubuntu,但是那会啥都不会，四处碰壁，没用多久就泄气了。可是看了各种大牛的书后，发现windows这种操作系统都是给大牛们摸透了计算机后想办法降低门槛给小白用的，所以要是不会Linux，永远进不了真正的程序员世界。\n\n<!-- more -->\n\n对于linux的众多发行版中，我选择了Ubuntu 14.04 LTS，毕竟Ubuntu有不错的GUI环境（X window的gnome），我既不是忠实的GUI党也不是忠实的CLI党，我觉得选择自己最好用的才是最重要的，该GUI的时候还是得GUI（用命令行去找分区里的文件太痛苦了。。），哈哈当然CLI是超强大的！\n\n大概花了两周左右的时间，将[《鸟叔的Linux私房菜之基础学习篇》](http://linux.vbird.org/)看了一半（实在好长。。剩下的慢慢看），然后将Ubuntu下的工作环境都部署了一遍，感觉以后大部分的工作都可以完成了。\n\n这部署的过程相当纠结，当然主要还是因为我的强迫症，比如一个字体好不好看我要纠结半天，各种换啊换，每次强迫症犯的时候都好想打死自己啊！所以部署的效率实在是有点低诶。好了，话不多说，下面贴上我的配置。\n\n\n# 分区\n\n装ubuntu的时候要给系统分区，我参考了鸟叔的书以及网络上的一些博客后，最后我分区如下:\n![Ubuntu 分区](/images/my/1.png)\n\n因为我装了双系统，我把sda1,sda2,sda3三个主分区都分给了windows，sda4扩展分区分成了好多逻辑分区，分别给/boot，/，/home，/var，/usr，总共大概给Ubuntu650G左右^0^\n\n\n# VPN\n\n由于用的是校园网，学校有专门的VPN客户端，我就去学校的论坛那里下了个Ubuntu下的vpn客户端，配置简单，没费什么事就能上网了（当然，前提要设置好IP地址和DNS，连上校内网）。\n\n# 换源\n\n虽然进入系统后，软件更新源里默认的是中国的服务器，但我还是按照[Ubuntu中文](http://wiki.ubuntu.org.cn/%E6%BA%90%E5%88%97%E8%A1%A8)的推荐换了网易，搜狐，阿里云及我们自己学校的源。\n\n```\n#网易\ndeb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse\n\n#搜狐\ndeb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse\n\n#学校\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-backports restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse\n\n#阿里云\ndeb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse\n```\n\n# 输入法\n\nUbuntu下自带的ibus输入法用起来还是不舒服，不像搜狗输入法那样将模糊语义，关键词之类的做得符合日常生活习惯，所以我还是装了搜狗输入法。\n\n可以直接去[官网](http://pinyin.sogou.com/linux/)下载deb包，然后`sudo dpkg -i *.deb` 像搜狗输入法是需要fcitx做输入法框架的，所以安装完后需要在语言设置里将默认输入法设置为fcitx.\n\n\n# 浏览器\n\nUbuntu自带浏览器为firefox，但我以前用的一直都是Chrome，书签什么的同步也会方便一点的，所以毫不犹豫的换成了Chrome,`sudo apt-get install google-chrome-stable`\n\nflash插件问题:Chrome用的谷歌自己的flash插件，而firefox默认是没装flash插件的，所以我去abode flash player的[官网](https://get.adobe.com/cn/flashplayer/)手动下载了插件，教程可以看[Ubuntu中文里的介绍](http://wiki.ubuntu.org.cn/Flash)，Ubuntu软件中心装flash插件太坑了！安装的时候等半天根本就不动！\n\n\n# 词典\n看论文及查资料的时候少不了查英文单词，由于在windows里一直用有道词典，所以我先去有道官网看了一下，一看，还真有linux版本，马上下载deb包后用了一下，刚开始觉得还不错，因为有道的鼠标取词（不用划词）这个功能我实在喜欢，虽然取词反应貌似有点慢。但后来我突然发现单词无法**发音**！！查了各种资料还是无法解决，无奈我只能忍痛割爱。\n\n然后我还是用了公认好用的星际译王，不得不说，自己可以自由添加词典，离线也能查单词确实比较强大（*然而现在工作基本都是联网的*）。具体安装及下载词典教程[看这里](http://wiki.ubuntu.org.cn/index.php?title=Stardict&variant=zh-cn)。 \n\n发音我没有装，感觉文件比较大，离线发音没必要，因为我还在Chrome下载了一个插件，我个人觉得非常好用，推荐一下，[ChaZD](https://chrome.google.com/webstore/detail/chazd/nkiipedegbhbjmajlhpegcpcaacbfggp?hl=zh-CN)。\n\n# Matlab\n下载matlab估计是最让我蛋疼的事了，在windows直接找个破解版就好了，而找个linux下的破解版真是不容易，虽然好多博客都有贴下载地址，但我试了试总是下载不了，有的就是下到1G左右就不能继续下了，特别折腾，为此我还下了个BT客户端deluge(系统自带的transmission其实也挺好的)。\n\n后来终于找到了一个靠谱的matlab 2010a,用wget后台下载了一天终于下好了，具体教程看[这里](ftp://wcmc.csu.edu.cn/software/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E4%BB%B6/matlab/install%20matlab%20in%20linux.pdf)～\n\nmatlab下载好之后还有[中文乱码的问题](http://forum.ubuntu.org.cn/viewtopic.php?t=373776)还有[常见的一些安装问题](https://forum.ubuntu.org.cn/viewtopic.php?f=122&t=443586)这两篇帖子都解决了。\n\n\n# 办公套件\nLibreOffice以及WPC For Linux 都试过,感觉还是不行,格式会乱,所以决定还是office文件老老实实回到windows下编辑,平时自己写文档还是用markdown生成pdf,或者latex都行。\n\n# 工程绘图\n\n由于论文的需要，我需要一个类似MS下visio的工程绘图软件，这里我选的替代品是Dia，这个绘图软件基本能替代visio~安装很简单，也是直接`sudo apt-get install dia`，这里有个地方要注意的是，默认情况下进入dia是intergrated模式，中文显示会有问题，需要做如下修改\n\n    sudo gedit /usr/bin/dia\n    #dia-normal --integrated \"$@\"\n    dia-normal \"$@\"\n\n# 图片处理\n\nImagemagick！这个图片处理软件真的超棒！可以用import截图，用convert转换图片格式，大小，清晰，可以加滤镜等，非常好用，我直接把它当做默认图片打开方式了。安装同样`sudo apt-get install imagemagick`。\n\n# 视频，音频播放器\n\nMplayer！这是号称目前这个星球上支持多媒体文件格式最多的软件！哈哈哈，反正目前我电脑里的视频音频格式它都支持，而且gnome版的界面都还不错。详细介绍及安装可以看[这里](http://wiki.ubuntu.com.cn/MPlayer)\n\n# Git\nGit的安装很方便，直接`sudo apt-get install git`，因为git本来就是linus在linux下开发的嘛～具体git的使用方法，建议看[廖老师的这篇教程](http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000)！\n\n# 终端\n我这里直接就用ubuntu自带的gnome-terminal来使用Bash（Bourne again shell），作为一个强迫症患者，我觉得终端自带的紫底白字配色太伤眼睛了，于是上Github寻找好看的配色方案。\n\n刚开始我选了solarized，想把终端配色和vim的配色都弄成solarized。\n\n* 终端的solarized配色文件显示，[github下载](https://github.com/seebi/dircolors-solarized)\n* 终端的solarized配色，[github下载](https://github.com/Anthony25/gnome-terminal-colors-solarized)\n\n然而solarized配完后，总觉得看得不舒服，一时切换不过来，强迫症发作的我又去寻找其他配色。最后用了这个[Git](https://github.com/chriskempson/base16-gnome-terminal).\n![Ocean Light](/images/my/2.png)\n\n","slug":"start-to-use-ubuntu","published":1,"updated":"2020-06-04T07:43:27.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8z1000a8edkrncxd18y","content":"<p>对linux的向往由来已久，加上前阵子在win7下用vim总是感觉很不舒服，用gcc编译还要专门去下载MinGW(minmalist GNU for Windows),这么想还不如直接去用linux，GNU下的那些工具就直接能用了！在linux下打造一个IDE吧！</p>\n<blockquote>\n<p>GNU’s Not Unix!</p>\n</blockquote>\n<p>哈哈哈，其实以前也装过一阵Ubuntu,但是那会啥都不会，四处碰壁，没用多久就泄气了。可是看了各种大牛的书后，发现windows这种操作系统都是给大牛们摸透了计算机后想办法降低门槛给小白用的，所以要是不会Linux，永远进不了真正的程序员世界。</p>\n<a id=\"more\"></a>\n<p>对于linux的众多发行版中，我选择了Ubuntu 14.04 LTS，毕竟Ubuntu有不错的GUI环境（X window的gnome），我既不是忠实的GUI党也不是忠实的CLI党，我觉得选择自己最好用的才是最重要的，该GUI的时候还是得GUI（用命令行去找分区里的文件太痛苦了。。），哈哈当然CLI是超强大的！</p>\n<p>大概花了两周左右的时间，将<a href=\"http://linux.vbird.org/\" target=\"_blank\" rel=\"noopener\">《鸟叔的Linux私房菜之基础学习篇》</a>看了一半（实在好长。。剩下的慢慢看），然后将Ubuntu下的工作环境都部署了一遍，感觉以后大部分的工作都可以完成了。</p>\n<p>这部署的过程相当纠结，当然主要还是因为我的强迫症，比如一个字体好不好看我要纠结半天，各种换啊换，每次强迫症犯的时候都好想打死自己啊！所以部署的效率实在是有点低诶。好了，话不多说，下面贴上我的配置。</p>\n<h1 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h1><p>装ubuntu的时候要给系统分区，我参考了鸟叔的书以及网络上的一些博客后，最后我分区如下:<br><img src=\"/images/my/1.png\" alt=\"Ubuntu 分区\"></p>\n<p>因为我装了双系统，我把sda1,sda2,sda3三个主分区都分给了windows，sda4扩展分区分成了好多逻辑分区，分别给/boot，/，/home，/var，/usr，总共大概给Ubuntu650G左右^0^</p>\n<h1 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h1><p>由于用的是校园网，学校有专门的VPN客户端，我就去学校的论坛那里下了个Ubuntu下的vpn客户端，配置简单，没费什么事就能上网了（当然，前提要设置好IP地址和DNS，连上校内网）。</p>\n<h1 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h1><p>虽然进入系统后，软件更新源里默认的是中国的服务器，但我还是按照<a href=\"http://wiki.ubuntu.org.cn/%E6%BA%90%E5%88%97%E8%A1%A8\" target=\"_blank\" rel=\"noopener\">Ubuntu中文</a>的推荐换了网易，搜狐，阿里云及我们自己学校的源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#网易</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">#搜狐</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">#学校</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-backports restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">#阿里云</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<h1 id=\"输入法\"><a href=\"#输入法\" class=\"headerlink\" title=\"输入法\"></a>输入法</h1><p>Ubuntu下自带的ibus输入法用起来还是不舒服，不像搜狗输入法那样将模糊语义，关键词之类的做得符合日常生活习惯，所以我还是装了搜狗输入法。</p>\n<p>可以直接去<a href=\"http://pinyin.sogou.com/linux/\" target=\"_blank\" rel=\"noopener\">官网</a>下载deb包，然后<code>sudo dpkg -i *.deb</code> 像搜狗输入法是需要fcitx做输入法框架的，所以安装完后需要在语言设置里将默认输入法设置为fcitx.</p>\n<h1 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h1><p>Ubuntu自带浏览器为firefox，但我以前用的一直都是Chrome，书签什么的同步也会方便一点的，所以毫不犹豫的换成了Chrome,<code>sudo apt-get install google-chrome-stable</code></p>\n<p>flash插件问题:Chrome用的谷歌自己的flash插件，而firefox默认是没装flash插件的，所以我去abode flash player的<a href=\"https://get.adobe.com/cn/flashplayer/\" target=\"_blank\" rel=\"noopener\">官网</a>手动下载了插件，教程可以看<a href=\"http://wiki.ubuntu.org.cn/Flash\" target=\"_blank\" rel=\"noopener\">Ubuntu中文里的介绍</a>，Ubuntu软件中心装flash插件太坑了！安装的时候等半天根本就不动！</p>\n<h1 id=\"词典\"><a href=\"#词典\" class=\"headerlink\" title=\"词典\"></a>词典</h1><p>看论文及查资料的时候少不了查英文单词，由于在windows里一直用有道词典，所以我先去有道官网看了一下，一看，还真有linux版本，马上下载deb包后用了一下，刚开始觉得还不错，因为有道的鼠标取词（不用划词）这个功能我实在喜欢，虽然取词反应貌似有点慢。但后来我突然发现单词无法<strong>发音</strong>！！查了各种资料还是无法解决，无奈我只能忍痛割爱。</p>\n<p>然后我还是用了公认好用的星际译王，不得不说，自己可以自由添加词典，离线也能查单词确实比较强大（<em>然而现在工作基本都是联网的</em>）。具体安装及下载词典教程<a href=\"http://wiki.ubuntu.org.cn/index.php?title=Stardict&amp;variant=zh-cn\" target=\"_blank\" rel=\"noopener\">看这里</a>。 </p>\n<p>发音我没有装，感觉文件比较大，离线发音没必要，因为我还在Chrome下载了一个插件，我个人觉得非常好用，推荐一下，<a href=\"https://chrome.google.com/webstore/detail/chazd/nkiipedegbhbjmajlhpegcpcaacbfggp?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">ChaZD</a>。</p>\n<h1 id=\"Matlab\"><a href=\"#Matlab\" class=\"headerlink\" title=\"Matlab\"></a>Matlab</h1><p>下载matlab估计是最让我蛋疼的事了，在windows直接找个破解版就好了，而找个linux下的破解版真是不容易，虽然好多博客都有贴下载地址，但我试了试总是下载不了，有的就是下到1G左右就不能继续下了，特别折腾，为此我还下了个BT客户端deluge(系统自带的transmission其实也挺好的)。</p>\n<p>后来终于找到了一个靠谱的matlab 2010a,用wget后台下载了一天终于下好了，具体教程看<a href=\"ftp://wcmc.csu.edu.cn/software/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E4%BB%B6/matlab/install%20matlab%20in%20linux.pdf\" target=\"_blank\" rel=\"noopener\">这里</a>～</p>\n<p>matlab下载好之后还有<a href=\"http://forum.ubuntu.org.cn/viewtopic.php?t=373776\" target=\"_blank\" rel=\"noopener\">中文乱码的问题</a>还有<a href=\"https://forum.ubuntu.org.cn/viewtopic.php?f=122&amp;t=443586\" target=\"_blank\" rel=\"noopener\">常见的一些安装问题</a>这两篇帖子都解决了。</p>\n<h1 id=\"办公套件\"><a href=\"#办公套件\" class=\"headerlink\" title=\"办公套件\"></a>办公套件</h1><p>LibreOffice以及WPC For Linux 都试过,感觉还是不行,格式会乱,所以决定还是office文件老老实实回到windows下编辑,平时自己写文档还是用markdown生成pdf,或者latex都行。</p>\n<h1 id=\"工程绘图\"><a href=\"#工程绘图\" class=\"headerlink\" title=\"工程绘图\"></a>工程绘图</h1><p>由于论文的需要，我需要一个类似MS下visio的工程绘图软件，这里我选的替代品是Dia，这个绘图软件基本能替代visio~安装很简单，也是直接<code>sudo apt-get install dia</code>，这里有个地方要注意的是，默认情况下进入dia是intergrated模式，中文显示会有问题，需要做如下修改</p>\n<pre><code>sudo gedit /usr/bin/dia\n#dia-normal --integrated &quot;$@&quot;\ndia-normal &quot;$@&quot;\n</code></pre><h1 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h1><p>Imagemagick！这个图片处理软件真的超棒！可以用import截图，用convert转换图片格式，大小，清晰，可以加滤镜等，非常好用，我直接把它当做默认图片打开方式了。安装同样<code>sudo apt-get install imagemagick</code>。</p>\n<h1 id=\"视频，音频播放器\"><a href=\"#视频，音频播放器\" class=\"headerlink\" title=\"视频，音频播放器\"></a>视频，音频播放器</h1><p>Mplayer！这是号称目前这个星球上支持多媒体文件格式最多的软件！哈哈哈，反正目前我电脑里的视频音频格式它都支持，而且gnome版的界面都还不错。详细介绍及安装可以看<a href=\"http://wiki.ubuntu.com.cn/MPlayer\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><p>Git的安装很方便，直接<code>sudo apt-get install git</code>，因为git本来就是linus在linux下开发的嘛～具体git的使用方法，建议看<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖老师的这篇教程</a>！</p>\n<h1 id=\"终端\"><a href=\"#终端\" class=\"headerlink\" title=\"终端\"></a>终端</h1><p>我这里直接就用ubuntu自带的gnome-terminal来使用Bash（Bourne again shell），作为一个强迫症患者，我觉得终端自带的紫底白字配色太伤眼睛了，于是上Github寻找好看的配色方案。</p>\n<p>刚开始我选了solarized，想把终端配色和vim的配色都弄成solarized。</p>\n<ul>\n<li>终端的solarized配色文件显示，<a href=\"https://github.com/seebi/dircolors-solarized\" target=\"_blank\" rel=\"noopener\">github下载</a></li>\n<li>终端的solarized配色，<a href=\"https://github.com/Anthony25/gnome-terminal-colors-solarized\" target=\"_blank\" rel=\"noopener\">github下载</a></li>\n</ul>\n<p>然而solarized配完后，总觉得看得不舒服，一时切换不过来，强迫症发作的我又去寻找其他配色。最后用了这个<a href=\"https://github.com/chriskempson/base16-gnome-terminal\" target=\"_blank\" rel=\"noopener\">Git</a>.<br><img src=\"/images/my/2.png\" alt=\"Ocean Light\"></p>\n","site":{"data":{}},"excerpt":"<p>对linux的向往由来已久，加上前阵子在win7下用vim总是感觉很不舒服，用gcc编译还要专门去下载MinGW(minmalist GNU for Windows),这么想还不如直接去用linux，GNU下的那些工具就直接能用了！在linux下打造一个IDE吧！</p>\n<blockquote>\n<p>GNU’s Not Unix!</p>\n</blockquote>\n<p>哈哈哈，其实以前也装过一阵Ubuntu,但是那会啥都不会，四处碰壁，没用多久就泄气了。可是看了各种大牛的书后，发现windows这种操作系统都是给大牛们摸透了计算机后想办法降低门槛给小白用的，所以要是不会Linux，永远进不了真正的程序员世界。</p>","more":"<p>对于linux的众多发行版中，我选择了Ubuntu 14.04 LTS，毕竟Ubuntu有不错的GUI环境（X window的gnome），我既不是忠实的GUI党也不是忠实的CLI党，我觉得选择自己最好用的才是最重要的，该GUI的时候还是得GUI（用命令行去找分区里的文件太痛苦了。。），哈哈当然CLI是超强大的！</p>\n<p>大概花了两周左右的时间，将<a href=\"http://linux.vbird.org/\" target=\"_blank\" rel=\"noopener\">《鸟叔的Linux私房菜之基础学习篇》</a>看了一半（实在好长。。剩下的慢慢看），然后将Ubuntu下的工作环境都部署了一遍，感觉以后大部分的工作都可以完成了。</p>\n<p>这部署的过程相当纠结，当然主要还是因为我的强迫症，比如一个字体好不好看我要纠结半天，各种换啊换，每次强迫症犯的时候都好想打死自己啊！所以部署的效率实在是有点低诶。好了，话不多说，下面贴上我的配置。</p>\n<h1 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h1><p>装ubuntu的时候要给系统分区，我参考了鸟叔的书以及网络上的一些博客后，最后我分区如下:<br><img src=\"/images/my/1.png\" alt=\"Ubuntu 分区\"></p>\n<p>因为我装了双系统，我把sda1,sda2,sda3三个主分区都分给了windows，sda4扩展分区分成了好多逻辑分区，分别给/boot，/，/home，/var，/usr，总共大概给Ubuntu650G左右^0^</p>\n<h1 id=\"VPN\"><a href=\"#VPN\" class=\"headerlink\" title=\"VPN\"></a>VPN</h1><p>由于用的是校园网，学校有专门的VPN客户端，我就去学校的论坛那里下了个Ubuntu下的vpn客户端，配置简单，没费什么事就能上网了（当然，前提要设置好IP地址和DNS，连上校内网）。</p>\n<h1 id=\"换源\"><a href=\"#换源\" class=\"headerlink\" title=\"换源\"></a>换源</h1><p>虽然进入系统后，软件更新源里默认的是中国的服务器，但我还是按照<a href=\"http://wiki.ubuntu.org.cn/%E6%BA%90%E5%88%97%E8%A1%A8\" target=\"_blank\" rel=\"noopener\">Ubuntu中文</a>的推荐换了网易，搜狐，阿里云及我们自己学校的源。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#网易</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">#搜狐</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.sohu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">#学校</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-backports restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.zju.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\"></span><br><span class=\"line\">#阿里云</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class=\"line\">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>\n<h1 id=\"输入法\"><a href=\"#输入法\" class=\"headerlink\" title=\"输入法\"></a>输入法</h1><p>Ubuntu下自带的ibus输入法用起来还是不舒服，不像搜狗输入法那样将模糊语义，关键词之类的做得符合日常生活习惯，所以我还是装了搜狗输入法。</p>\n<p>可以直接去<a href=\"http://pinyin.sogou.com/linux/\" target=\"_blank\" rel=\"noopener\">官网</a>下载deb包，然后<code>sudo dpkg -i *.deb</code> 像搜狗输入法是需要fcitx做输入法框架的，所以安装完后需要在语言设置里将默认输入法设置为fcitx.</p>\n<h1 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h1><p>Ubuntu自带浏览器为firefox，但我以前用的一直都是Chrome，书签什么的同步也会方便一点的，所以毫不犹豫的换成了Chrome,<code>sudo apt-get install google-chrome-stable</code></p>\n<p>flash插件问题:Chrome用的谷歌自己的flash插件，而firefox默认是没装flash插件的，所以我去abode flash player的<a href=\"https://get.adobe.com/cn/flashplayer/\" target=\"_blank\" rel=\"noopener\">官网</a>手动下载了插件，教程可以看<a href=\"http://wiki.ubuntu.org.cn/Flash\" target=\"_blank\" rel=\"noopener\">Ubuntu中文里的介绍</a>，Ubuntu软件中心装flash插件太坑了！安装的时候等半天根本就不动！</p>\n<h1 id=\"词典\"><a href=\"#词典\" class=\"headerlink\" title=\"词典\"></a>词典</h1><p>看论文及查资料的时候少不了查英文单词，由于在windows里一直用有道词典，所以我先去有道官网看了一下，一看，还真有linux版本，马上下载deb包后用了一下，刚开始觉得还不错，因为有道的鼠标取词（不用划词）这个功能我实在喜欢，虽然取词反应貌似有点慢。但后来我突然发现单词无法<strong>发音</strong>！！查了各种资料还是无法解决，无奈我只能忍痛割爱。</p>\n<p>然后我还是用了公认好用的星际译王，不得不说，自己可以自由添加词典，离线也能查单词确实比较强大（<em>然而现在工作基本都是联网的</em>）。具体安装及下载词典教程<a href=\"http://wiki.ubuntu.org.cn/index.php?title=Stardict&amp;variant=zh-cn\" target=\"_blank\" rel=\"noopener\">看这里</a>。 </p>\n<p>发音我没有装，感觉文件比较大，离线发音没必要，因为我还在Chrome下载了一个插件，我个人觉得非常好用，推荐一下，<a href=\"https://chrome.google.com/webstore/detail/chazd/nkiipedegbhbjmajlhpegcpcaacbfggp?hl=zh-CN\" target=\"_blank\" rel=\"noopener\">ChaZD</a>。</p>\n<h1 id=\"Matlab\"><a href=\"#Matlab\" class=\"headerlink\" title=\"Matlab\"></a>Matlab</h1><p>下载matlab估计是最让我蛋疼的事了，在windows直接找个破解版就好了，而找个linux下的破解版真是不容易，虽然好多博客都有贴下载地址，但我试了试总是下载不了，有的就是下到1G左右就不能继续下了，特别折腾，为此我还下了个BT客户端deluge(系统自带的transmission其实也挺好的)。</p>\n<p>后来终于找到了一个靠谱的matlab 2010a,用wget后台下载了一天终于下好了，具体教程看<a href=\"ftp://wcmc.csu.edu.cn/software/%E7%A8%8B%E5%BA%8F%E8%BD%AF%E4%BB%B6/matlab/install%20matlab%20in%20linux.pdf\" target=\"_blank\" rel=\"noopener\">这里</a>～</p>\n<p>matlab下载好之后还有<a href=\"http://forum.ubuntu.org.cn/viewtopic.php?t=373776\" target=\"_blank\" rel=\"noopener\">中文乱码的问题</a>还有<a href=\"https://forum.ubuntu.org.cn/viewtopic.php?f=122&amp;t=443586\" target=\"_blank\" rel=\"noopener\">常见的一些安装问题</a>这两篇帖子都解决了。</p>\n<h1 id=\"办公套件\"><a href=\"#办公套件\" class=\"headerlink\" title=\"办公套件\"></a>办公套件</h1><p>LibreOffice以及WPC For Linux 都试过,感觉还是不行,格式会乱,所以决定还是office文件老老实实回到windows下编辑,平时自己写文档还是用markdown生成pdf,或者latex都行。</p>\n<h1 id=\"工程绘图\"><a href=\"#工程绘图\" class=\"headerlink\" title=\"工程绘图\"></a>工程绘图</h1><p>由于论文的需要，我需要一个类似MS下visio的工程绘图软件，这里我选的替代品是Dia，这个绘图软件基本能替代visio~安装很简单，也是直接<code>sudo apt-get install dia</code>，这里有个地方要注意的是，默认情况下进入dia是intergrated模式，中文显示会有问题，需要做如下修改</p>\n<pre><code>sudo gedit /usr/bin/dia\n#dia-normal --integrated &quot;$@&quot;\ndia-normal &quot;$@&quot;\n</code></pre><h1 id=\"图片处理\"><a href=\"#图片处理\" class=\"headerlink\" title=\"图片处理\"></a>图片处理</h1><p>Imagemagick！这个图片处理软件真的超棒！可以用import截图，用convert转换图片格式，大小，清晰，可以加滤镜等，非常好用，我直接把它当做默认图片打开方式了。安装同样<code>sudo apt-get install imagemagick</code>。</p>\n<h1 id=\"视频，音频播放器\"><a href=\"#视频，音频播放器\" class=\"headerlink\" title=\"视频，音频播放器\"></a>视频，音频播放器</h1><p>Mplayer！这是号称目前这个星球上支持多媒体文件格式最多的软件！哈哈哈，反正目前我电脑里的视频音频格式它都支持，而且gnome版的界面都还不错。详细介绍及安装可以看<a href=\"http://wiki.ubuntu.com.cn/MPlayer\" target=\"_blank\" rel=\"noopener\">这里</a></p>\n<h1 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h1><p>Git的安装很方便，直接<code>sudo apt-get install git</code>，因为git本来就是linus在linux下开发的嘛～具体git的使用方法，建议看<a href=\"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000\" target=\"_blank\" rel=\"noopener\">廖老师的这篇教程</a>！</p>\n<h1 id=\"终端\"><a href=\"#终端\" class=\"headerlink\" title=\"终端\"></a>终端</h1><p>我这里直接就用ubuntu自带的gnome-terminal来使用Bash（Bourne again shell），作为一个强迫症患者，我觉得终端自带的紫底白字配色太伤眼睛了，于是上Github寻找好看的配色方案。</p>\n<p>刚开始我选了solarized，想把终端配色和vim的配色都弄成solarized。</p>\n<ul>\n<li>终端的solarized配色文件显示，<a href=\"https://github.com/seebi/dircolors-solarized\" target=\"_blank\" rel=\"noopener\">github下载</a></li>\n<li>终端的solarized配色，<a href=\"https://github.com/Anthony25/gnome-terminal-colors-solarized\" target=\"_blank\" rel=\"noopener\">github下载</a></li>\n</ul>\n<p>然而solarized配完后，总觉得看得不舒服，一时切换不过来，强迫症发作的我又去寻找其他配色。最后用了这个<a href=\"https://github.com/chriskempson/base16-gnome-terminal\" target=\"_blank\" rel=\"noopener\">Git</a>.<br><img src=\"/images/my/2.png\" alt=\"Ocean Light\"></p>"},{"title":"Tensorflow中的变量作用域和名称作用域","date":"2017-07-18T14:06:02.000Z","_content":"\n在定义复杂网络时，为了让变量和操作更加清晰，我们需要用作用域scope来为变量或者操作加前缀。在Tensorflow中，总共有以下几个定义域操作：\n\n```python\ntf.name_scope()\ntf.op_scope()\ntf.variable_scope()\ntf.variable_op_scope()\n```\n主要可以分为两类：变量作用域和名称作用域。其中`tf.name_scope`和`tf.op_scope`都属于名称作用域，这两者的唯一区别就是values的参数位置不同：\n\n\n```python\ntf.name_scope(name, default_name=None, values=None)\ntf.op_scope(values, name, default_name=None)\n```\n\n`tf.variable_scope`和`tf.variable_op_scope`都属于变量作用域，两者区别跟上面是类似的。\n\n那么，变量作用域和名称作用域又有什么区别呢？\n\n对于名称作用域，顾名思义，就是一旦定义了该作用域，该代码块中的**变量和操作**，全部会加上该作用域前缀，若作用域名称相同，则名称后缀自动加一。但是，也有一个例外就是`tf.get_variable()`这个操作。\n\n`tf.get_variable()`有以下的性质：\n- `tf.get_variable('name', ...)` 中的name是无视名称作用域的，也就是说，即使该操作在某名称作用域中，name也不会加上相应前缀。\n- 不同于`tf.Variable()`通过直接获取值来初始化，`tf.get_variable()`则是通过变量名以及定义初始化分布来进行初始化，若变量名已经存在，那么程序就会报错，相反，如果对于`tf.Variable()`，我们定义了相同的变量名，则程序会在变量名后缀上自动加一。\n\n\n从某种意义上说，变量作用域`tf.variable_scope`就是为了`tf.get_variable`而设计的。\n\n- `tf.get_variable('name', ...)`中的name会自动加上变量作用域的后缀。\n- 变量作用域可以设定`reuse = True`，从而定义相同名字的变量为共享变量，若名字不同，则会报错。个人认为，定义变量作用域以及该操作都是为了实现共享变量的功能。\n- 变量作用域还可以为`tf.get_variable('name', ...)`设置默认的初始化分布！\n- 最重要的一点是，**变量作用域`tf.variable_scope('name')`一旦开启，也就相当于间接开启了一个名称作用域`tf.name_scope('name')`！**\n\n总结来说，这些设计的目的大概这样的：\n\n- 为了区分变量和操作，定义了名称作用域。\n- 名称作用域和普通的变量创建操作有重复名称自动后缀加一的特性，因此无法实现变量共享，于是定义了`tf.get_variable`操作。\n- `tf.get_variable`操作也需要加前缀，于是定义了变量作用域。变量作用域相当于加强版的名称作用域！\n\n最后，给个测试代码：\n\n```python\nwith tf.variable_scope(\"foo\"):\n    v = tf.get_variable(\"v\", [1])\n    x = 1.0 + v\nassert v.name == \"foo/v:0\"\nassert x.op.name == \"foo/add\"\nassert x.name == \"foo/add:0\"\n\nwith tf.variable_scope(\"foo\", reuse = True):\n    with tf.name_scope(\"bar\"):\n        v = tf.get_variable(\"v\", [1])\n        x = 1.0 + v\n        y = 1.0 + x\nassert v.name == \"foo/v:0\"  # 共享变量\nassert x.op.name == \"foo_1/bar/add\"  # foo此时为名称作用域，重复定义，需要加一\nassert x.name == \"foo_1/bar/add:0\"\nassert y.op.name == \"foo_1/bar/add_1\" # add操作重复定义，自动加一\n\n\n# 还有一个关于名称作用域和变量作用域嵌套的问题，若使用对象而非字符串开启作用域，则该作用域不嵌套\n\nwith tf.name_scope('t1') as scope:\n    with tf.name_scope('t2'):\n        with tf.name_scope(scope):\n            x = tf.Variable(1)\nassert x.op.name == 't1/Variable'\n\nwith tf.name_scope('t1') as scope:\n    with tf.name_scope('t2'):\n        with tf.name_scope('t3'):\n            x = tf.Variable(1, name = scope) # 这样也不嵌套\nassert x.op.name == 't1_1'\n```\n\n关于`tf.variable_scope()`和`tf.get_variable()`的更多操作，可以看[共享变量-极客学院Wiki](http://wiki.jikexueyuan.com/project/tensorflow-zh/how_tos/variable_scope.html)\n\n\n","source":"_posts/variable-scope-and-name-scopeof-Tensorflow.md","raw":"---\ntitle: 'Tensorflow中的变量作用域和名称作用域'\ndate: 2017-07-18 22:06:02\ntags: Tensorflow\n---\n\n在定义复杂网络时，为了让变量和操作更加清晰，我们需要用作用域scope来为变量或者操作加前缀。在Tensorflow中，总共有以下几个定义域操作：\n\n```python\ntf.name_scope()\ntf.op_scope()\ntf.variable_scope()\ntf.variable_op_scope()\n```\n主要可以分为两类：变量作用域和名称作用域。其中`tf.name_scope`和`tf.op_scope`都属于名称作用域，这两者的唯一区别就是values的参数位置不同：\n\n\n```python\ntf.name_scope(name, default_name=None, values=None)\ntf.op_scope(values, name, default_name=None)\n```\n\n`tf.variable_scope`和`tf.variable_op_scope`都属于变量作用域，两者区别跟上面是类似的。\n\n那么，变量作用域和名称作用域又有什么区别呢？\n\n对于名称作用域，顾名思义，就是一旦定义了该作用域，该代码块中的**变量和操作**，全部会加上该作用域前缀，若作用域名称相同，则名称后缀自动加一。但是，也有一个例外就是`tf.get_variable()`这个操作。\n\n`tf.get_variable()`有以下的性质：\n- `tf.get_variable('name', ...)` 中的name是无视名称作用域的，也就是说，即使该操作在某名称作用域中，name也不会加上相应前缀。\n- 不同于`tf.Variable()`通过直接获取值来初始化，`tf.get_variable()`则是通过变量名以及定义初始化分布来进行初始化，若变量名已经存在，那么程序就会报错，相反，如果对于`tf.Variable()`，我们定义了相同的变量名，则程序会在变量名后缀上自动加一。\n\n\n从某种意义上说，变量作用域`tf.variable_scope`就是为了`tf.get_variable`而设计的。\n\n- `tf.get_variable('name', ...)`中的name会自动加上变量作用域的后缀。\n- 变量作用域可以设定`reuse = True`，从而定义相同名字的变量为共享变量，若名字不同，则会报错。个人认为，定义变量作用域以及该操作都是为了实现共享变量的功能。\n- 变量作用域还可以为`tf.get_variable('name', ...)`设置默认的初始化分布！\n- 最重要的一点是，**变量作用域`tf.variable_scope('name')`一旦开启，也就相当于间接开启了一个名称作用域`tf.name_scope('name')`！**\n\n总结来说，这些设计的目的大概这样的：\n\n- 为了区分变量和操作，定义了名称作用域。\n- 名称作用域和普通的变量创建操作有重复名称自动后缀加一的特性，因此无法实现变量共享，于是定义了`tf.get_variable`操作。\n- `tf.get_variable`操作也需要加前缀，于是定义了变量作用域。变量作用域相当于加强版的名称作用域！\n\n最后，给个测试代码：\n\n```python\nwith tf.variable_scope(\"foo\"):\n    v = tf.get_variable(\"v\", [1])\n    x = 1.0 + v\nassert v.name == \"foo/v:0\"\nassert x.op.name == \"foo/add\"\nassert x.name == \"foo/add:0\"\n\nwith tf.variable_scope(\"foo\", reuse = True):\n    with tf.name_scope(\"bar\"):\n        v = tf.get_variable(\"v\", [1])\n        x = 1.0 + v\n        y = 1.0 + x\nassert v.name == \"foo/v:0\"  # 共享变量\nassert x.op.name == \"foo_1/bar/add\"  # foo此时为名称作用域，重复定义，需要加一\nassert x.name == \"foo_1/bar/add:0\"\nassert y.op.name == \"foo_1/bar/add_1\" # add操作重复定义，自动加一\n\n\n# 还有一个关于名称作用域和变量作用域嵌套的问题，若使用对象而非字符串开启作用域，则该作用域不嵌套\n\nwith tf.name_scope('t1') as scope:\n    with tf.name_scope('t2'):\n        with tf.name_scope(scope):\n            x = tf.Variable(1)\nassert x.op.name == 't1/Variable'\n\nwith tf.name_scope('t1') as scope:\n    with tf.name_scope('t2'):\n        with tf.name_scope('t3'):\n            x = tf.Variable(1, name = scope) # 这样也不嵌套\nassert x.op.name == 't1_1'\n```\n\n关于`tf.variable_scope()`和`tf.get_variable()`的更多操作，可以看[共享变量-极客学院Wiki](http://wiki.jikexueyuan.com/project/tensorflow-zh/how_tos/variable_scope.html)\n\n\n","slug":"variable-scope-and-name-scopeof-Tensorflow","published":1,"updated":"2020-06-04T07:43:27.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8z3000c8edko7kdt533","content":"<p>在定义复杂网络时，为了让变量和操作更加清晰，我们需要用作用域scope来为变量或者操作加前缀。在Tensorflow中，总共有以下几个定义域操作：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tf.name_scope()</span><br><span class=\"line\">tf.op_scope()</span><br><span class=\"line\">tf.variable_scope()</span><br><span class=\"line\">tf.variable_op_scope()</span><br></pre></td></tr></table></figure>\n<p>主要可以分为两类：变量作用域和名称作用域。其中<code>tf.name_scope</code>和<code>tf.op_scope</code>都属于名称作用域，这两者的唯一区别就是values的参数位置不同：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tf.name_scope(name, default_name=<span class=\"literal\">None</span>, values=<span class=\"literal\">None</span>)</span><br><span class=\"line\">tf.op_scope(values, name, default_name=<span class=\"literal\">None</span>)</span><br></pre></td></tr></table></figure>\n<p><code>tf.variable_scope</code>和<code>tf.variable_op_scope</code>都属于变量作用域，两者区别跟上面是类似的。</p>\n<p>那么，变量作用域和名称作用域又有什么区别呢？</p>\n<p>对于名称作用域，顾名思义，就是一旦定义了该作用域，该代码块中的<strong>变量和操作</strong>，全部会加上该作用域前缀，若作用域名称相同，则名称后缀自动加一。但是，也有一个例外就是<code>tf.get_variable()</code>这个操作。</p>\n<p><code>tf.get_variable()</code>有以下的性质：</p>\n<ul>\n<li><code>tf.get_variable(&#39;name&#39;, ...)</code> 中的name是无视名称作用域的，也就是说，即使该操作在某名称作用域中，name也不会加上相应前缀。</li>\n<li>不同于<code>tf.Variable()</code>通过直接获取值来初始化，<code>tf.get_variable()</code>则是通过变量名以及定义初始化分布来进行初始化，若变量名已经存在，那么程序就会报错，相反，如果对于<code>tf.Variable()</code>，我们定义了相同的变量名，则程序会在变量名后缀上自动加一。</li>\n</ul>\n<p>从某种意义上说，变量作用域<code>tf.variable_scope</code>就是为了<code>tf.get_variable</code>而设计的。</p>\n<ul>\n<li><code>tf.get_variable(&#39;name&#39;, ...)</code>中的name会自动加上变量作用域的后缀。</li>\n<li>变量作用域可以设定<code>reuse = True</code>，从而定义相同名字的变量为共享变量，若名字不同，则会报错。个人认为，定义变量作用域以及该操作都是为了实现共享变量的功能。</li>\n<li>变量作用域还可以为<code>tf.get_variable(&#39;name&#39;, ...)</code>设置默认的初始化分布！</li>\n<li>最重要的一点是，<strong>变量作用域<code>tf.variable_scope(&#39;name&#39;)</code>一旦开启，也就相当于间接开启了一个名称作用域<code>tf.name_scope(&#39;name&#39;)</code>！</strong></li>\n</ul>\n<p>总结来说，这些设计的目的大概这样的：</p>\n<ul>\n<li>为了区分变量和操作，定义了名称作用域。</li>\n<li>名称作用域和普通的变量创建操作有重复名称自动后缀加一的特性，因此无法实现变量共享，于是定义了<code>tf.get_variable</code>操作。</li>\n<li><code>tf.get_variable</code>操作也需要加前缀，于是定义了变量作用域。变量作用域相当于加强版的名称作用域！</li>\n</ul>\n<p>最后，给个测试代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">\"foo\"</span>):</span><br><span class=\"line\">    v = tf.get_variable(<span class=\"string\">\"v\"</span>, [<span class=\"number\">1</span>])</span><br><span class=\"line\">    x = <span class=\"number\">1.0</span> + v</span><br><span class=\"line\"><span class=\"keyword\">assert</span> v.name == <span class=\"string\">\"foo/v:0\"</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">\"foo/add\"</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.name == <span class=\"string\">\"foo/add:0\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">\"foo\"</span>, reuse = <span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">\"bar\"</span>):</span><br><span class=\"line\">        v = tf.get_variable(<span class=\"string\">\"v\"</span>, [<span class=\"number\">1</span>])</span><br><span class=\"line\">        x = <span class=\"number\">1.0</span> + v</span><br><span class=\"line\">        y = <span class=\"number\">1.0</span> + x</span><br><span class=\"line\"><span class=\"keyword\">assert</span> v.name == <span class=\"string\">\"foo/v:0\"</span>  <span class=\"comment\"># 共享变量</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">\"foo_1/bar/add\"</span>  <span class=\"comment\"># foo此时为名称作用域，重复定义，需要加一</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.name == <span class=\"string\">\"foo_1/bar/add:0\"</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> y.op.name == <span class=\"string\">\"foo_1/bar/add_1\"</span> <span class=\"comment\"># add操作重复定义，自动加一</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 还有一个关于名称作用域和变量作用域嵌套的问题，若使用对象而非字符串开启作用域，则该作用域不嵌套</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t1'</span>) <span class=\"keyword\">as</span> scope:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t2'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> tf.name_scope(scope):</span><br><span class=\"line\">            x = tf.Variable(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">'t1/Variable'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t1'</span>) <span class=\"keyword\">as</span> scope:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t2'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t3'</span>):</span><br><span class=\"line\">            x = tf.Variable(<span class=\"number\">1</span>, name = scope) <span class=\"comment\"># 这样也不嵌套</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">'t1_1'</span></span><br></pre></td></tr></table></figure>\n<p>关于<code>tf.variable_scope()</code>和<code>tf.get_variable()</code>的更多操作，可以看<a href=\"http://wiki.jikexueyuan.com/project/tensorflow-zh/how_tos/variable_scope.html\" target=\"_blank\" rel=\"noopener\">共享变量-极客学院Wiki</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>在定义复杂网络时，为了让变量和操作更加清晰，我们需要用作用域scope来为变量或者操作加前缀。在Tensorflow中，总共有以下几个定义域操作：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tf.name_scope()</span><br><span class=\"line\">tf.op_scope()</span><br><span class=\"line\">tf.variable_scope()</span><br><span class=\"line\">tf.variable_op_scope()</span><br></pre></td></tr></table></figure>\n<p>主要可以分为两类：变量作用域和名称作用域。其中<code>tf.name_scope</code>和<code>tf.op_scope</code>都属于名称作用域，这两者的唯一区别就是values的参数位置不同：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tf.name_scope(name, default_name=<span class=\"literal\">None</span>, values=<span class=\"literal\">None</span>)</span><br><span class=\"line\">tf.op_scope(values, name, default_name=<span class=\"literal\">None</span>)</span><br></pre></td></tr></table></figure>\n<p><code>tf.variable_scope</code>和<code>tf.variable_op_scope</code>都属于变量作用域，两者区别跟上面是类似的。</p>\n<p>那么，变量作用域和名称作用域又有什么区别呢？</p>\n<p>对于名称作用域，顾名思义，就是一旦定义了该作用域，该代码块中的<strong>变量和操作</strong>，全部会加上该作用域前缀，若作用域名称相同，则名称后缀自动加一。但是，也有一个例外就是<code>tf.get_variable()</code>这个操作。</p>\n<p><code>tf.get_variable()</code>有以下的性质：</p>\n<ul>\n<li><code>tf.get_variable(&#39;name&#39;, ...)</code> 中的name是无视名称作用域的，也就是说，即使该操作在某名称作用域中，name也不会加上相应前缀。</li>\n<li>不同于<code>tf.Variable()</code>通过直接获取值来初始化，<code>tf.get_variable()</code>则是通过变量名以及定义初始化分布来进行初始化，若变量名已经存在，那么程序就会报错，相反，如果对于<code>tf.Variable()</code>，我们定义了相同的变量名，则程序会在变量名后缀上自动加一。</li>\n</ul>\n<p>从某种意义上说，变量作用域<code>tf.variable_scope</code>就是为了<code>tf.get_variable</code>而设计的。</p>\n<ul>\n<li><code>tf.get_variable(&#39;name&#39;, ...)</code>中的name会自动加上变量作用域的后缀。</li>\n<li>变量作用域可以设定<code>reuse = True</code>，从而定义相同名字的变量为共享变量，若名字不同，则会报错。个人认为，定义变量作用域以及该操作都是为了实现共享变量的功能。</li>\n<li>变量作用域还可以为<code>tf.get_variable(&#39;name&#39;, ...)</code>设置默认的初始化分布！</li>\n<li>最重要的一点是，<strong>变量作用域<code>tf.variable_scope(&#39;name&#39;)</code>一旦开启，也就相当于间接开启了一个名称作用域<code>tf.name_scope(&#39;name&#39;)</code>！</strong></li>\n</ul>\n<p>总结来说，这些设计的目的大概这样的：</p>\n<ul>\n<li>为了区分变量和操作，定义了名称作用域。</li>\n<li>名称作用域和普通的变量创建操作有重复名称自动后缀加一的特性，因此无法实现变量共享，于是定义了<code>tf.get_variable</code>操作。</li>\n<li><code>tf.get_variable</code>操作也需要加前缀，于是定义了变量作用域。变量作用域相当于加强版的名称作用域！</li>\n</ul>\n<p>最后，给个测试代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">\"foo\"</span>):</span><br><span class=\"line\">    v = tf.get_variable(<span class=\"string\">\"v\"</span>, [<span class=\"number\">1</span>])</span><br><span class=\"line\">    x = <span class=\"number\">1.0</span> + v</span><br><span class=\"line\"><span class=\"keyword\">assert</span> v.name == <span class=\"string\">\"foo/v:0\"</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">\"foo/add\"</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.name == <span class=\"string\">\"foo/add:0\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.variable_scope(<span class=\"string\">\"foo\"</span>, reuse = <span class=\"literal\">True</span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">\"bar\"</span>):</span><br><span class=\"line\">        v = tf.get_variable(<span class=\"string\">\"v\"</span>, [<span class=\"number\">1</span>])</span><br><span class=\"line\">        x = <span class=\"number\">1.0</span> + v</span><br><span class=\"line\">        y = <span class=\"number\">1.0</span> + x</span><br><span class=\"line\"><span class=\"keyword\">assert</span> v.name == <span class=\"string\">\"foo/v:0\"</span>  <span class=\"comment\"># 共享变量</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">\"foo_1/bar/add\"</span>  <span class=\"comment\"># foo此时为名称作用域，重复定义，需要加一</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.name == <span class=\"string\">\"foo_1/bar/add:0\"</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> y.op.name == <span class=\"string\">\"foo_1/bar/add_1\"</span> <span class=\"comment\"># add操作重复定义，自动加一</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 还有一个关于名称作用域和变量作用域嵌套的问题，若使用对象而非字符串开启作用域，则该作用域不嵌套</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t1'</span>) <span class=\"keyword\">as</span> scope:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t2'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> tf.name_scope(scope):</span><br><span class=\"line\">            x = tf.Variable(<span class=\"number\">1</span>)</span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">'t1/Variable'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t1'</span>) <span class=\"keyword\">as</span> scope:</span><br><span class=\"line\">    <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t2'</span>):</span><br><span class=\"line\">        <span class=\"keyword\">with</span> tf.name_scope(<span class=\"string\">'t3'</span>):</span><br><span class=\"line\">            x = tf.Variable(<span class=\"number\">1</span>, name = scope) <span class=\"comment\"># 这样也不嵌套</span></span><br><span class=\"line\"><span class=\"keyword\">assert</span> x.op.name == <span class=\"string\">'t1_1'</span></span><br></pre></td></tr></table></figure>\n<p>关于<code>tf.variable_scope()</code>和<code>tf.get_variable()</code>的更多操作，可以看<a href=\"http://wiki.jikexueyuan.com/project/tensorflow-zh/how_tos/variable_scope.html\" target=\"_blank\" rel=\"noopener\">共享变量-极客学院Wiki</a></p>\n"},{"title":"支持向量机","date":"2016-05-10T11:28:44.000Z","mathjax":true,"_content":"\n之前上了斯坦福大学Andrew Ng的机器学习课程后，以为自己的支持向量机SVM有了一番了解，只是在logistic regression上做一点改进，另外还有核函数加入拓展数据特征，然后今天看了详细的支持向量机推导过程后，才发现之前自己的理解很肤浅。\n\n<!-- more -->\n[这篇文章](http://taop.marchtea.com/07.02.svm.html)详细介绍了支持向量机的概念及求解，对于更深入的SMO算法以及损耗分析，需要去看《支持向量机导论》这本书。\n\n支持向量机被称为最好的监督学习分类器，我认为原因有下：\n\n* 不像logistic regression一样有$h(x)$这个logistic函数，而是\n$$\\begin{equation}\ng(z) = \n\\begin{cases}\n1, &z \\geq 0 \\\\\\\n-1, &z < 0\n\\end{cases}\n\\end{equation}$$\n* 它的分类原理使得不同类别的间隔达到了最大。\n* 对于线性不可分的情况，可以将本来的特征无限拓展到高维， 也就是系数$w$可以无限高维度，但我们却可以在求解过程中不需要知道具体维度，只要用核函数就可以求解！\n","source":"_posts/svm.markdown","raw":"---\ntitle: 支持向量机\ndate: 2016-05-10 19:28:44 \ntags: Machine Learning\nmathjax: true\n---\n\n之前上了斯坦福大学Andrew Ng的机器学习课程后，以为自己的支持向量机SVM有了一番了解，只是在logistic regression上做一点改进，另外还有核函数加入拓展数据特征，然后今天看了详细的支持向量机推导过程后，才发现之前自己的理解很肤浅。\n\n<!-- more -->\n[这篇文章](http://taop.marchtea.com/07.02.svm.html)详细介绍了支持向量机的概念及求解，对于更深入的SMO算法以及损耗分析，需要去看《支持向量机导论》这本书。\n\n支持向量机被称为最好的监督学习分类器，我认为原因有下：\n\n* 不像logistic regression一样有$h(x)$这个logistic函数，而是\n$$\\begin{equation}\ng(z) = \n\\begin{cases}\n1, &z \\geq 0 \\\\\\\n-1, &z < 0\n\\end{cases}\n\\end{equation}$$\n* 它的分类原理使得不同类别的间隔达到了最大。\n* 对于线性不可分的情况，可以将本来的特征无限拓展到高维， 也就是系数$w$可以无限高维度，但我们却可以在求解过程中不需要知道具体维度，只要用核函数就可以求解！\n","slug":"svm","published":1,"updated":"2020-06-04T07:43:27.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8z5000e8edkw6rcesfo","content":"<p>之前上了斯坦福大学Andrew Ng的机器学习课程后，以为自己的支持向量机SVM有了一番了解，只是在logistic regression上做一点改进，另外还有核函数加入拓展数据特征，然后今天看了详细的支持向量机推导过程后，才发现之前自己的理解很肤浅。</p>\n<a id=\"more\"></a>\n<p><a href=\"http://taop.marchtea.com/07.02.svm.html\" target=\"_blank\" rel=\"noopener\">这篇文章</a>详细介绍了支持向量机的概念及求解，对于更深入的SMO算法以及损耗分析，需要去看《支持向量机导论》这本书。</p>\n<p>支持向量机被称为最好的监督学习分类器，我认为原因有下：</p>\n<ul>\n<li>不像logistic regression一样有$h(x)$这个logistic函数，而是<script type=\"math/tex; mode=display\">\\begin{equation}\ng(z) = \n\\begin{cases}\n1, &z \\geq 0 \\\\\\\n-1, &z < 0\n\\end{cases}\n\\end{equation}</script></li>\n<li>它的分类原理使得不同类别的间隔达到了最大。</li>\n<li>对于线性不可分的情况，可以将本来的特征无限拓展到高维， 也就是系数$w$可以无限高维度，但我们却可以在求解过程中不需要知道具体维度，只要用核函数就可以求解！</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>之前上了斯坦福大学Andrew Ng的机器学习课程后，以为自己的支持向量机SVM有了一番了解，只是在logistic regression上做一点改进，另外还有核函数加入拓展数据特征，然后今天看了详细的支持向量机推导过程后，才发现之前自己的理解很肤浅。</p>","more":"<p><a href=\"http://taop.marchtea.com/07.02.svm.html\" target=\"_blank\" rel=\"noopener\">这篇文章</a>详细介绍了支持向量机的概念及求解，对于更深入的SMO算法以及损耗分析，需要去看《支持向量机导论》这本书。</p>\n<p>支持向量机被称为最好的监督学习分类器，我认为原因有下：</p>\n<ul>\n<li>不像logistic regression一样有$h(x)$这个logistic函数，而是<script type=\"math/tex; mode=display\">\\begin{equation}\ng(z) = \n\\begin{cases}\n1, &z \\geq 0 \\\\\\\n-1, &z < 0\n\\end{cases}\n\\end{equation}</script></li>\n<li>它的分类原理使得不同类别的间隔达到了最大。</li>\n<li>对于线性不可分的情况，可以将本来的特征无限拓展到高维， 也就是系数$w$可以无限高维度，但我们却可以在求解过程中不需要知道具体维度，只要用核函数就可以求解！</li>\n</ul>"},{"title":"Vim自动补全神器-YouCompleteMe","date":"2017-06-12T10:13:30.000Z","_content":"\n# Vim\nUbuntu自带的vim是vim.tiny版本，很多功能都不全，所以我们需要装一个完整版的，并且我习惯装一个gvim,`sudo apt-get install vim-gtk`。 有意思的是，我发现`apt-get`下面有一个叫`vim+youcompleteme`的版本，我就好奇得装了一下，结果打开vim发现并没有补全功能，但是却装了`ruby，nodejs,ycmd`等几个软件，`ycmd`应该就是补全软件，然而不知道该怎么在vim里使用...所以最终我还是按照github上的说明手动装了`youcompleteme`,这部分留到后文说。\n\n<!-- more -->\n\n## 插件Vundle\nVundle是一个很实用的vim插件，通过它可以方便得管理其他插件，安装很简单。\n```git\n$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n```\n\n装完之后，需要在`.vimrc`里进行配置，\n```\nset nocompatible              \" be iMproved, required\nfiletype off                  \" required\n\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\n\" The following are examples of different formats supported.\n\" Keep Plugin commands between vundle#begin/end.\n\" plugin on GitHub repo\nPlugin 'tpope/vim-fugitive'\n\" plugin from http://vim-scripts.org/vim/scripts.html\n\" Plugin 'L9'\n\" Git plugin not hosted on GitHub\nPlugin 'git://git.wincent.com/command-t.git'\n\" git repos on your local machine (i.e. when working on your own plugin)\nPlugin 'file:///home/gmarik/path/to/plugin'\n\" The sparkup vim script is in a subdirectory of this repo called vim.\n\" Pass the path to set the runtimepath properly.\nPlugin 'rstacruz/sparkup', {'rtp': 'vim/'}\n\" Install L9 and avoid a Naming conflict if you've already installed a\n\" different version somewhere else.\n\" Plugin 'ascenator/L9', {'name': 'newL9'}\n\n\" All of your Plugins must be added before the following line\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\" To ignore plugin indent changes, instead use:\n\"filetype plugin on\n\"\n\" Brief help\n\" :PluginList       - lists configured plugins\n\" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate\n\" :PluginSearch foo - searches for foo; append `!` to refresh local cache\n\" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal\n\"\n\" see :h vundle for more details or wiki for FAQ\n\" Put your non-Plugin stuff after this line\n```\n\n最终打开vim，输入`：PluginInstall`来安装你在配置文件里写的插件。\n\n我安装了下面几个我常用的插件。\n```\n\" My Plugin here:\n\n\" plugin on GitHub repo\nPlugin 'Valloric/YouCompleteMe'\nPlugin 'luochen1990/rainbow'\nPlugin 'fholgado/minibufexpl.vim'\nPlugin 'scrooloose/nerdtree'\n```\n\n# YouCompleteMe\n在我的插件里可以看到我装了YouCompleteMe这个插件，但是光vundle装好还是不够的，我们需要再编译一个能用的引擎。\n\n## 安装必备的编译环境和python环境\n```\nsudo apt-get install build-essential cmake\nsudo apt-get install python-dev python3-dev\n```\n## 检查vim版本\n我们需要检查vim版本以及vim支持的python版本，保证vim版本高于7.4.1578,支持python2或者Python3。我们可以输入命令：`vim --version`来查看，以下是我的输出截图：\n![image.png](http://upload-images.jianshu.io/upload_images/825093-cc5dac3d1fd71ef2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550)\n可以看到版本是7.4.1689，不支持python2,但支持python3（貌似Ubuntu16.04开始移除python2的支持了）。\n\n## 编译支持C家族语义补全的YCM\n```\ncd ~/.vim/bundle/YouCompleteMe\nPython3 ./install.py --clang-completer //由于我的vim只支持Python3,所以在前面加python3命令\n```\n命令执行之后，系统会去下载libclang,因为YCM语义支持是靠clang编译器的，这里需要经过漫长得等待。。如果一切顺利的话，YCM就安装完毕了。\n\n##YCM配置\n我的YCM配置如下：\n```\n\"YouCompleteMe\n\"let g:ycm_path_to_python_interpreter = '/usr/bin/python'\nset runtimepath+=~/.vim/bundle/YouCompleteMe\nlet g:ycm_collect_identifiers_from_tags_files = 1           \" 开启 YCM 基于标签引擎\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释与字符串中的内容也用于补全\nlet g:syntastic_ignore_files=[\".*\\.py$\"]\nlet g:ycm_seed_identifiers_with_syntax = 1                  \" 语法关键字补全\nlet g:ycm_complete_in_comments = 1\nlet g:ycm_confirm_extra_conf = 0\n\"let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']  \" 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.\n\"let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']\nlet g:ycm_complete_in_comments = 1                          \" 在注释输入中也能补全\nlet g:ycm_complete_in_strings = 1                           \" 在字符串输入中也能补全\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释和字符串中的文字也会被收入补全\nlet g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'\n\"let g:ycm_show_diagnostics_ui = 0                           \" 禁用语法检查\ninoremap <expr> <CR> pumvisible() ? \"\\<C-y>\" : \"\\<CR>\" |            \" 回车即选中当前项\nnnoremap <F5> :YcmCompleter GoToDefinitionElseDeclaration<CR>\n\"let g:ycm_min_num_of_chars_for_completion=2                 \" 从第2个键入字符就开始罗列匹配项\nlet g:ycm_autoclose_preview_window_after_completion = 1  \" 补全后自动关闭preview\n```\n一个能够进行语法检查，自动补全，并且GoToDefinition的YCM就可以使用了，但是还有一点瑕疵：＃include <iostream>, #include <stdio> vector, 什么的都不能补全，这是因为这些头文件的路径没有被找到，下面的工作就是要让YouCompleteMe找到这些头文件，而且，以后有什么库文件，比如OpenCV，OPenGL什么的，都可以按照这个方法添加。\n\n打开并编辑~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py，这就是我们设定vim默认调用的YCM配置文件，然后可以在flags[*]数组的后面添加你想要的路径，例如: stdio.h等Ｃ语言的头文件包含在/usr/include中，那么您需要添加这样一条\n> \n'-isystem',\n‘/usr/include’,\n\n如果需要C++的补全，就需要添加：\n> \n'-isystem',\n‘/usr/include/c++/5’,\n\n需要什么，就添加什么，现在编辑c/c++文件你就发现支持头文件补全了！\n\n# 我的vim配置\n根据个人习惯，我的vimrc配置如下：\n```\n\"Wei Lyu\n\"levy_lv@hotmail.com\n\"levylv.github.io\n\n\"====================\"\n\"        通用        \"\n\"====================\"\nset nocompatible              \" be iMproved, required\nfiletype plugin indent on\nset nobackup \"不备份 \nset autochdir \"自动切换当前目录\nset mouse=a\n\n\"启动，语法高亮，配色\nwinpos 500 200   \"窗口位置\nset lines=30 columns=85  \"窗口大小\nset guioptions-=T  \"不要菜单栏\nset laststatus=2   \"总是显示状态栏\nset hlsearch  \"搜索高亮\nset ignorecase \"搜索忽略大小写\nsyntax enable\nsyntax on\nset t_Co=256\nset cursorline \"高亮光标行\nset ruler   \"显示光标位置状态栏\nset number\nset guifont=Ubuntu\\ Mono\\ 13\ncolorscheme molokai\nset clipboard=unnamed \"可以用系统剪贴板\n\n\"Tab相关\nset expandtab \"制表符扩展为空格\nset tabstop=4 \"制表符占用空格数\nset softtabstop=4 \"将连续数量的空格视为一个制表符\nset shiftwidth=4 \"格式化时制表符占用空格数\nset cindent\nset autoindent\n\n\"编码相关\nset encoding=utf-8\nset langmenu=zh_CN.UTF-8\nlanguage message zh_CN.UTF-8\nset fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1\n\n\"使用CTRL+[hjkl]在窗口间导航\"\nmap <C-c> <C-W>c\nmap <C-j> <C-W>j\nmap <C-k> <C-W>k\nmap <C-h> <C-W>h\nmap <C-l> <C-W>l\n\n\"使用箭头导航buffer\"\nmap <right> :bn<cr>\nmap <left> :bp<cr>\nset autowrite \"在切换buffer时自动保存当前的文件\n\n\"\"使用ALT+[jk]来移动行内容\nnmap <M-j> mz:m+<cr>`z\nnmap <M-k> mz:m-2<cr>`z\nvmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z\nvmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z\n\n\"根据文件类型做不同处理\nfunction HeaderPython()  \"python加头注释\n    call setline(1, \"#!/usr/bin/env python3\")\n    call append(1,  \"# -*- coding: utf-8 -*-\")\n    call append(2,  \"# mail:levy_lv@hotmail.com\")\n    call append(3,  \"# Lyu Wei @ \" . strftime('%Y-%m-%d', localtime()))\n    normal G\n    normal o\n    normal o\nendf\nautocmd bufnewfile *.py call HeaderPython()\n\nfunction HeaderBash()  \"shell脚本加注释\n    call setline(1, \"#!/bin/bash\")\n    call append(1,  \"# -*- coding: utf-8 -*-\")\n    call append(2,  \"# mail:levy_lv@hotmail.com\")\n    call append(3,  \"# Lyu Wei @ \" . strftime('%Y-%m-%d', localtime()))\n    normal G\n    normal o\n    normal o\nendf\nautocmd bufnewfile *.sh call HeaderBash()\n\nfunction HeaderCpp() \"C++文件加头文件\n    call setline(1, \"#include <iostream>\")\n    call append(1, \"using namespace std;\")\n    normal G\n    normal o\n    normal o\nendf\nautocmd bufnewfile *.cpp,*.cc call HeaderCpp()\n\n\"C,C++单个文件调试\nmap <F8> :call Rungdb()<CR>\nfunc! Rungdb()\n    exec \"w\"\n    exec \"!g++ % -g -o %<\"\n    exec \"!gdb ./%<\"\nendfunc\n\n\"====================\"\n\"Vundle Configuration\"\n\"====================\"\nfiletype off                  \" required\n\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\n\" My Plugin here:\n\n\" plugin on GitHub repo\nPlugin 'Valloric/YouCompleteMe'\nPlugin 'luochen1990/rainbow'\n\"Plugin 'majutsushi/tagbar'\nPlugin 'fholgado/minibufexpl.vim'\nPlugin 'scrooloose/nerdtree'\n\n\n\n\" All of your Plugins must be added before the following line\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\n\n\"===========================\"\n\"Vundle Plugin Configuration\"\n\"===========================\"\n\n\"Rainbow\nlet g:rainbow_active = 1 \" 0 if you want to enable it later via: RainbowTogglw\n\n\"Tagbar\n\"nmap <F8> :TagbarToggle<CR>\n\n\"YouCompleteMe\n\"let g:ycm_path_to_python_interpreter = '/usr/bin/python'\nset runtimepath+=~/.vim/bundle/YouCompleteMe\nlet g:ycm_collect_identifiers_from_tags_files = 1           \" 开启 YCM 基于标签引擎\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释与字符串中的内容也用于补全\nlet g:syntastic_ignore_files=[\".*\\.py$\"]\nlet g:ycm_seed_identifiers_with_syntax = 1                  \" 语法关键字补全\nlet g:ycm_complete_in_comments = 1\nlet g:ycm_confirm_extra_conf = 0\n\"let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']  \" 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.\n\"let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']\nlet g:ycm_complete_in_comments = 1                          \" 在注释输入中也能补全\nlet g:ycm_complete_in_strings = 1                           \" 在字符串输入中也能补全\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释和字符串中的文字也会被收入补全\nlet g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'\n\"let g:ycm_show_diagnostics_ui = 0                           \" 禁用语法检查\ninoremap <expr> <CR> pumvisible() ? \"\\<C-y>\" : \"\\<CR>\" |            \" 回车即选中当前项\nnnoremap <F5> :YcmCompleter GoToDefinitionElseDeclaration<CR>\n\"let g:ycm_min_num_of_chars_for_completion=2                 \" 从第2个键入字符就开始罗列匹配项\nlet g:ycm_autoclose_preview_window_after_completion = 1  \" 补全后自动关闭preview\n\n\"minibufexpl\nlet g:miniBufExplMapWindowNavVim = 1 \"可以用<C-h,j,k,l>切换到上下左右的窗口 \nlet g:miniBufExplMapCTabSwitchBufs = 1 \"<C-Tab>,<C-S-Tab>切换\nlet g:miniBufExplModSelTarget = 1 \n\n\"NERDTree\nnnoremap <F4> :NERDTreeToggle<CR>\n\n\n```\n","source":"_posts/vim-youcompleteme.md","raw":"---\ntitle: Vim自动补全神器-YouCompleteMe\ndate: 2017-06-12 18:13:30\ntags: Vim\n---\n\n# Vim\nUbuntu自带的vim是vim.tiny版本，很多功能都不全，所以我们需要装一个完整版的，并且我习惯装一个gvim,`sudo apt-get install vim-gtk`。 有意思的是，我发现`apt-get`下面有一个叫`vim+youcompleteme`的版本，我就好奇得装了一下，结果打开vim发现并没有补全功能，但是却装了`ruby，nodejs,ycmd`等几个软件，`ycmd`应该就是补全软件，然而不知道该怎么在vim里使用...所以最终我还是按照github上的说明手动装了`youcompleteme`,这部分留到后文说。\n\n<!-- more -->\n\n## 插件Vundle\nVundle是一个很实用的vim插件，通过它可以方便得管理其他插件，安装很简单。\n```git\n$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\n```\n\n装完之后，需要在`.vimrc`里进行配置，\n```\nset nocompatible              \" be iMproved, required\nfiletype off                  \" required\n\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\n\" The following are examples of different formats supported.\n\" Keep Plugin commands between vundle#begin/end.\n\" plugin on GitHub repo\nPlugin 'tpope/vim-fugitive'\n\" plugin from http://vim-scripts.org/vim/scripts.html\n\" Plugin 'L9'\n\" Git plugin not hosted on GitHub\nPlugin 'git://git.wincent.com/command-t.git'\n\" git repos on your local machine (i.e. when working on your own plugin)\nPlugin 'file:///home/gmarik/path/to/plugin'\n\" The sparkup vim script is in a subdirectory of this repo called vim.\n\" Pass the path to set the runtimepath properly.\nPlugin 'rstacruz/sparkup', {'rtp': 'vim/'}\n\" Install L9 and avoid a Naming conflict if you've already installed a\n\" different version somewhere else.\n\" Plugin 'ascenator/L9', {'name': 'newL9'}\n\n\" All of your Plugins must be added before the following line\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\" To ignore plugin indent changes, instead use:\n\"filetype plugin on\n\"\n\" Brief help\n\" :PluginList       - lists configured plugins\n\" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate\n\" :PluginSearch foo - searches for foo; append `!` to refresh local cache\n\" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal\n\"\n\" see :h vundle for more details or wiki for FAQ\n\" Put your non-Plugin stuff after this line\n```\n\n最终打开vim，输入`：PluginInstall`来安装你在配置文件里写的插件。\n\n我安装了下面几个我常用的插件。\n```\n\" My Plugin here:\n\n\" plugin on GitHub repo\nPlugin 'Valloric/YouCompleteMe'\nPlugin 'luochen1990/rainbow'\nPlugin 'fholgado/minibufexpl.vim'\nPlugin 'scrooloose/nerdtree'\n```\n\n# YouCompleteMe\n在我的插件里可以看到我装了YouCompleteMe这个插件，但是光vundle装好还是不够的，我们需要再编译一个能用的引擎。\n\n## 安装必备的编译环境和python环境\n```\nsudo apt-get install build-essential cmake\nsudo apt-get install python-dev python3-dev\n```\n## 检查vim版本\n我们需要检查vim版本以及vim支持的python版本，保证vim版本高于7.4.1578,支持python2或者Python3。我们可以输入命令：`vim --version`来查看，以下是我的输出截图：\n![image.png](http://upload-images.jianshu.io/upload_images/825093-cc5dac3d1fd71ef2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550)\n可以看到版本是7.4.1689，不支持python2,但支持python3（貌似Ubuntu16.04开始移除python2的支持了）。\n\n## 编译支持C家族语义补全的YCM\n```\ncd ~/.vim/bundle/YouCompleteMe\nPython3 ./install.py --clang-completer //由于我的vim只支持Python3,所以在前面加python3命令\n```\n命令执行之后，系统会去下载libclang,因为YCM语义支持是靠clang编译器的，这里需要经过漫长得等待。。如果一切顺利的话，YCM就安装完毕了。\n\n##YCM配置\n我的YCM配置如下：\n```\n\"YouCompleteMe\n\"let g:ycm_path_to_python_interpreter = '/usr/bin/python'\nset runtimepath+=~/.vim/bundle/YouCompleteMe\nlet g:ycm_collect_identifiers_from_tags_files = 1           \" 开启 YCM 基于标签引擎\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释与字符串中的内容也用于补全\nlet g:syntastic_ignore_files=[\".*\\.py$\"]\nlet g:ycm_seed_identifiers_with_syntax = 1                  \" 语法关键字补全\nlet g:ycm_complete_in_comments = 1\nlet g:ycm_confirm_extra_conf = 0\n\"let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']  \" 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.\n\"let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']\nlet g:ycm_complete_in_comments = 1                          \" 在注释输入中也能补全\nlet g:ycm_complete_in_strings = 1                           \" 在字符串输入中也能补全\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释和字符串中的文字也会被收入补全\nlet g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'\n\"let g:ycm_show_diagnostics_ui = 0                           \" 禁用语法检查\ninoremap <expr> <CR> pumvisible() ? \"\\<C-y>\" : \"\\<CR>\" |            \" 回车即选中当前项\nnnoremap <F5> :YcmCompleter GoToDefinitionElseDeclaration<CR>\n\"let g:ycm_min_num_of_chars_for_completion=2                 \" 从第2个键入字符就开始罗列匹配项\nlet g:ycm_autoclose_preview_window_after_completion = 1  \" 补全后自动关闭preview\n```\n一个能够进行语法检查，自动补全，并且GoToDefinition的YCM就可以使用了，但是还有一点瑕疵：＃include <iostream>, #include <stdio> vector, 什么的都不能补全，这是因为这些头文件的路径没有被找到，下面的工作就是要让YouCompleteMe找到这些头文件，而且，以后有什么库文件，比如OpenCV，OPenGL什么的，都可以按照这个方法添加。\n\n打开并编辑~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py，这就是我们设定vim默认调用的YCM配置文件，然后可以在flags[*]数组的后面添加你想要的路径，例如: stdio.h等Ｃ语言的头文件包含在/usr/include中，那么您需要添加这样一条\n> \n'-isystem',\n‘/usr/include’,\n\n如果需要C++的补全，就需要添加：\n> \n'-isystem',\n‘/usr/include/c++/5’,\n\n需要什么，就添加什么，现在编辑c/c++文件你就发现支持头文件补全了！\n\n# 我的vim配置\n根据个人习惯，我的vimrc配置如下：\n```\n\"Wei Lyu\n\"levy_lv@hotmail.com\n\"levylv.github.io\n\n\"====================\"\n\"        通用        \"\n\"====================\"\nset nocompatible              \" be iMproved, required\nfiletype plugin indent on\nset nobackup \"不备份 \nset autochdir \"自动切换当前目录\nset mouse=a\n\n\"启动，语法高亮，配色\nwinpos 500 200   \"窗口位置\nset lines=30 columns=85  \"窗口大小\nset guioptions-=T  \"不要菜单栏\nset laststatus=2   \"总是显示状态栏\nset hlsearch  \"搜索高亮\nset ignorecase \"搜索忽略大小写\nsyntax enable\nsyntax on\nset t_Co=256\nset cursorline \"高亮光标行\nset ruler   \"显示光标位置状态栏\nset number\nset guifont=Ubuntu\\ Mono\\ 13\ncolorscheme molokai\nset clipboard=unnamed \"可以用系统剪贴板\n\n\"Tab相关\nset expandtab \"制表符扩展为空格\nset tabstop=4 \"制表符占用空格数\nset softtabstop=4 \"将连续数量的空格视为一个制表符\nset shiftwidth=4 \"格式化时制表符占用空格数\nset cindent\nset autoindent\n\n\"编码相关\nset encoding=utf-8\nset langmenu=zh_CN.UTF-8\nlanguage message zh_CN.UTF-8\nset fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1\n\n\"使用CTRL+[hjkl]在窗口间导航\"\nmap <C-c> <C-W>c\nmap <C-j> <C-W>j\nmap <C-k> <C-W>k\nmap <C-h> <C-W>h\nmap <C-l> <C-W>l\n\n\"使用箭头导航buffer\"\nmap <right> :bn<cr>\nmap <left> :bp<cr>\nset autowrite \"在切换buffer时自动保存当前的文件\n\n\"\"使用ALT+[jk]来移动行内容\nnmap <M-j> mz:m+<cr>`z\nnmap <M-k> mz:m-2<cr>`z\nvmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z\nvmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z\n\n\"根据文件类型做不同处理\nfunction HeaderPython()  \"python加头注释\n    call setline(1, \"#!/usr/bin/env python3\")\n    call append(1,  \"# -*- coding: utf-8 -*-\")\n    call append(2,  \"# mail:levy_lv@hotmail.com\")\n    call append(3,  \"# Lyu Wei @ \" . strftime('%Y-%m-%d', localtime()))\n    normal G\n    normal o\n    normal o\nendf\nautocmd bufnewfile *.py call HeaderPython()\n\nfunction HeaderBash()  \"shell脚本加注释\n    call setline(1, \"#!/bin/bash\")\n    call append(1,  \"# -*- coding: utf-8 -*-\")\n    call append(2,  \"# mail:levy_lv@hotmail.com\")\n    call append(3,  \"# Lyu Wei @ \" . strftime('%Y-%m-%d', localtime()))\n    normal G\n    normal o\n    normal o\nendf\nautocmd bufnewfile *.sh call HeaderBash()\n\nfunction HeaderCpp() \"C++文件加头文件\n    call setline(1, \"#include <iostream>\")\n    call append(1, \"using namespace std;\")\n    normal G\n    normal o\n    normal o\nendf\nautocmd bufnewfile *.cpp,*.cc call HeaderCpp()\n\n\"C,C++单个文件调试\nmap <F8> :call Rungdb()<CR>\nfunc! Rungdb()\n    exec \"w\"\n    exec \"!g++ % -g -o %<\"\n    exec \"!gdb ./%<\"\nendfunc\n\n\"====================\"\n\"Vundle Configuration\"\n\"====================\"\nfiletype off                  \" required\n\n\" set the runtime path to include Vundle and initialize\nset rtp+=~/.vim/bundle/Vundle.vim\ncall vundle#begin()\n\" alternatively, pass a path where Vundle should install plugins\n\"call vundle#begin('~/some/path/here')\n\n\" let Vundle manage Vundle, required\nPlugin 'VundleVim/Vundle.vim'\n\n\" My Plugin here:\n\n\" plugin on GitHub repo\nPlugin 'Valloric/YouCompleteMe'\nPlugin 'luochen1990/rainbow'\n\"Plugin 'majutsushi/tagbar'\nPlugin 'fholgado/minibufexpl.vim'\nPlugin 'scrooloose/nerdtree'\n\n\n\n\" All of your Plugins must be added before the following line\ncall vundle#end()            \" required\nfiletype plugin indent on    \" required\n\n\n\"===========================\"\n\"Vundle Plugin Configuration\"\n\"===========================\"\n\n\"Rainbow\nlet g:rainbow_active = 1 \" 0 if you want to enable it later via: RainbowTogglw\n\n\"Tagbar\n\"nmap <F8> :TagbarToggle<CR>\n\n\"YouCompleteMe\n\"let g:ycm_path_to_python_interpreter = '/usr/bin/python'\nset runtimepath+=~/.vim/bundle/YouCompleteMe\nlet g:ycm_collect_identifiers_from_tags_files = 1           \" 开启 YCM 基于标签引擎\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释与字符串中的内容也用于补全\nlet g:syntastic_ignore_files=[\".*\\.py$\"]\nlet g:ycm_seed_identifiers_with_syntax = 1                  \" 语法关键字补全\nlet g:ycm_complete_in_comments = 1\nlet g:ycm_confirm_extra_conf = 0\n\"let g:ycm_key_list_select_completion = ['<c-n>', '<Down>']  \" 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.\n\"let g:ycm_key_list_previous_completion = ['<c-p>', '<Up>']\nlet g:ycm_complete_in_comments = 1                          \" 在注释输入中也能补全\nlet g:ycm_complete_in_strings = 1                           \" 在字符串输入中也能补全\nlet g:ycm_collect_identifiers_from_comments_and_strings = 1 \" 注释和字符串中的文字也会被收入补全\nlet g:ycm_global_ycm_extra_conf='~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py'\n\"let g:ycm_show_diagnostics_ui = 0                           \" 禁用语法检查\ninoremap <expr> <CR> pumvisible() ? \"\\<C-y>\" : \"\\<CR>\" |            \" 回车即选中当前项\nnnoremap <F5> :YcmCompleter GoToDefinitionElseDeclaration<CR>\n\"let g:ycm_min_num_of_chars_for_completion=2                 \" 从第2个键入字符就开始罗列匹配项\nlet g:ycm_autoclose_preview_window_after_completion = 1  \" 补全后自动关闭preview\n\n\"minibufexpl\nlet g:miniBufExplMapWindowNavVim = 1 \"可以用<C-h,j,k,l>切换到上下左右的窗口 \nlet g:miniBufExplMapCTabSwitchBufs = 1 \"<C-Tab>,<C-S-Tab>切换\nlet g:miniBufExplModSelTarget = 1 \n\n\"NERDTree\nnnoremap <F4> :NERDTreeToggle<CR>\n\n\n```\n","slug":"vim-youcompleteme","published":1,"updated":"2020-06-04T07:43:27.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckb0jj8za000h8edkmx1d21h9","content":"<h1 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h1><p>Ubuntu自带的vim是vim.tiny版本，很多功能都不全，所以我们需要装一个完整版的，并且我习惯装一个gvim,<code>sudo apt-get install vim-gtk</code>。 有意思的是，我发现<code>apt-get</code>下面有一个叫<code>vim+youcompleteme</code>的版本，我就好奇得装了一下，结果打开vim发现并没有补全功能，但是却装了<code>ruby，nodejs,ycmd</code>等几个软件，<code>ycmd</code>应该就是补全软件，然而不知道该怎么在vim里使用…所以最终我还是按照github上的说明手动装了<code>youcompleteme</code>,这部分留到后文说。</p>\n<a id=\"more\"></a>\n<h2 id=\"插件Vundle\"><a href=\"#插件Vundle\" class=\"headerlink\" title=\"插件Vundle\"></a>插件Vundle</h2><p>Vundle是一个很实用的vim插件，通过它可以方便得管理其他插件，安装很简单。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br></pre></td></tr></table></figure></p>\n<p>装完之后，需要在<code>.vimrc</code>里进行配置，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set nocompatible              &quot; be iMproved, required</span><br><span class=\"line\">filetype off                  &quot; required</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; set the runtime path to include Vundle and initialize</span><br><span class=\"line\">set rtp+=~/.vim/bundle/Vundle.vim</span><br><span class=\"line\">call vundle#begin()</span><br><span class=\"line\">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class=\"line\">&quot;call vundle#begin(&apos;~/some/path/here&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let Vundle manage Vundle, required</span><br><span class=\"line\">Plugin &apos;VundleVim/Vundle.vim&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; The following are examples of different formats supported.</span><br><span class=\"line\">&quot; Keep Plugin commands between vundle#begin/end.</span><br><span class=\"line\">&quot; plugin on GitHub repo</span><br><span class=\"line\">Plugin &apos;tpope/vim-fugitive&apos;</span><br><span class=\"line\">&quot; plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class=\"line\">&quot; Plugin &apos;L9&apos;</span><br><span class=\"line\">&quot; Git plugin not hosted on GitHub</span><br><span class=\"line\">Plugin &apos;git://git.wincent.com/command-t.git&apos;</span><br><span class=\"line\">&quot; git repos on your local machine (i.e. when working on your own plugin)</span><br><span class=\"line\">Plugin &apos;file:///home/gmarik/path/to/plugin&apos;</span><br><span class=\"line\">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span><br><span class=\"line\">&quot; Pass the path to set the runtimepath properly.</span><br><span class=\"line\">Plugin &apos;rstacruz/sparkup&apos;, &#123;&apos;rtp&apos;: &apos;vim/&apos;&#125;</span><br><span class=\"line\">&quot; Install L9 and avoid a Naming conflict if you&apos;ve already installed a</span><br><span class=\"line\">&quot; different version somewhere else.</span><br><span class=\"line\">&quot; Plugin &apos;ascenator/L9&apos;, &#123;&apos;name&apos;: &apos;newL9&apos;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; All of your Plugins must be added before the following line</span><br><span class=\"line\">call vundle#end()            &quot; required</span><br><span class=\"line\">filetype plugin indent on    &quot; required</span><br><span class=\"line\">&quot; To ignore plugin indent changes, instead use:</span><br><span class=\"line\">&quot;filetype plugin on</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; Brief help</span><br><span class=\"line\">&quot; :PluginList       - lists configured plugins</span><br><span class=\"line\">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span><br><span class=\"line\">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span><br><span class=\"line\">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; see :h vundle for more details or wiki for FAQ</span><br><span class=\"line\">&quot; Put your non-Plugin stuff after this line</span><br></pre></td></tr></table></figure></p>\n<p>最终打开vim，输入<code>：PluginInstall</code>来安装你在配置文件里写的插件。</p>\n<p>我安装了下面几个我常用的插件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; My Plugin here:</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; plugin on GitHub repo</span><br><span class=\"line\">Plugin &apos;Valloric/YouCompleteMe&apos;</span><br><span class=\"line\">Plugin &apos;luochen1990/rainbow&apos;</span><br><span class=\"line\">Plugin &apos;fholgado/minibufexpl.vim&apos;</span><br><span class=\"line\">Plugin &apos;scrooloose/nerdtree&apos;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"YouCompleteMe\"><a href=\"#YouCompleteMe\" class=\"headerlink\" title=\"YouCompleteMe\"></a>YouCompleteMe</h1><p>在我的插件里可以看到我装了YouCompleteMe这个插件，但是光vundle装好还是不够的，我们需要再编译一个能用的引擎。</p>\n<h2 id=\"安装必备的编译环境和python环境\"><a href=\"#安装必备的编译环境和python环境\" class=\"headerlink\" title=\"安装必备的编译环境和python环境\"></a>安装必备的编译环境和python环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential cmake</span><br><span class=\"line\">sudo apt-get install python-dev python3-dev</span><br></pre></td></tr></table></figure>\n<h2 id=\"检查vim版本\"><a href=\"#检查vim版本\" class=\"headerlink\" title=\"检查vim版本\"></a>检查vim版本</h2><p>我们需要检查vim版本以及vim支持的python版本，保证vim版本高于7.4.1578,支持python2或者Python3。我们可以输入命令：<code>vim --version</code>来查看，以下是我的输出截图：<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-cc5dac3d1fd71ef2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550\" alt=\"image.png\"><br>可以看到版本是7.4.1689，不支持python2,但支持python3（貌似Ubuntu16.04开始移除python2的支持了）。</p>\n<h2 id=\"编译支持C家族语义补全的YCM\"><a href=\"#编译支持C家族语义补全的YCM\" class=\"headerlink\" title=\"编译支持C家族语义补全的YCM\"></a>编译支持C家族语义补全的YCM</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.vim/bundle/YouCompleteMe</span><br><span class=\"line\">Python3 ./install.py --clang-completer //由于我的vim只支持Python3,所以在前面加python3命令</span><br></pre></td></tr></table></figure>\n<p>命令执行之后，系统会去下载libclang,因为YCM语义支持是靠clang编译器的，这里需要经过漫长得等待。。如果一切顺利的话，YCM就安装完毕了。</p>\n<h2 id=\"YCM配置\"><a href=\"#YCM配置\" class=\"headerlink\" title=\"YCM配置\"></a>YCM配置</h2><p>我的YCM配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;YouCompleteMe</span><br><span class=\"line\">&quot;let g:ycm_path_to_python_interpreter = &apos;/usr/bin/python&apos;</span><br><span class=\"line\">set runtimepath+=~/.vim/bundle/YouCompleteMe</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_tags_files = 1           &quot; 开启 YCM 基于标签引擎</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释与字符串中的内容也用于补全</span><br><span class=\"line\">let g:syntastic_ignore_files=[&quot;.*\\.py$&quot;]</span><br><span class=\"line\">let g:ycm_seed_identifiers_with_syntax = 1                  &quot; 语法关键字补全</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1</span><br><span class=\"line\">let g:ycm_confirm_extra_conf = 0</span><br><span class=\"line\">&quot;let g:ycm_key_list_select_completion = [&apos;&lt;c-n&gt;&apos;, &apos;&lt;Down&gt;&apos;]  &quot; 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.</span><br><span class=\"line\">&quot;let g:ycm_key_list_previous_completion = [&apos;&lt;c-p&gt;&apos;, &apos;&lt;Up&gt;&apos;]</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1                          &quot; 在注释输入中也能补全</span><br><span class=\"line\">let g:ycm_complete_in_strings = 1                           &quot; 在字符串输入中也能补全</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释和字符串中的文字也会被收入补全</span><br><span class=\"line\">let g:ycm_global_ycm_extra_conf=&apos;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&apos;</span><br><span class=\"line\">&quot;let g:ycm_show_diagnostics_ui = 0                           &quot; 禁用语法检查</span><br><span class=\"line\">inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;\\&lt;C-y&gt;&quot; : &quot;\\&lt;CR&gt;&quot; |            &quot; 回车即选中当前项</span><br><span class=\"line\">nnoremap &lt;F5&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</span><br><span class=\"line\">&quot;let g:ycm_min_num_of_chars_for_completion=2                 &quot; 从第2个键入字符就开始罗列匹配项</span><br><span class=\"line\">let g:ycm_autoclose_preview_window_after_completion = 1  &quot; 补全后自动关闭preview</span><br></pre></td></tr></table></figure></p>\n<p>一个能够进行语法检查，自动补全，并且GoToDefinition的YCM就可以使用了，但是还有一点瑕疵：＃include <iostream>, #include <stdio> vector, 什么的都不能补全，这是因为这些头文件的路径没有被找到，下面的工作就是要让YouCompleteMe找到这些头文件，而且，以后有什么库文件，比如OpenCV，OPenGL什么的，都可以按照这个方法添加。</stdio></iostream></p>\n<p>打开并编辑~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py，这就是我们设定vim默认调用的YCM配置文件，然后可以在flags[*]数组的后面添加你想要的路径，例如: stdio.h等Ｃ语言的头文件包含在/usr/include中，那么您需要添加这样一条</p>\n<blockquote>\n<p>‘-isystem’,<br>‘/usr/include’,</p>\n</blockquote>\n<p>如果需要C++的补全，就需要添加：</p>\n<blockquote>\n<p>‘-isystem’,<br>‘/usr/include/c++/5’,</p>\n</blockquote>\n<p>需要什么，就添加什么，现在编辑c/c++文件你就发现支持头文件补全了！</p>\n<h1 id=\"我的vim配置\"><a href=\"#我的vim配置\" class=\"headerlink\" title=\"我的vim配置\"></a>我的vim配置</h1><p>根据个人习惯，我的vimrc配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Wei Lyu</span><br><span class=\"line\">&quot;levy_lv@hotmail.com</span><br><span class=\"line\">&quot;levylv.github.io</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">&quot;        通用        &quot;</span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">set nocompatible              &quot; be iMproved, required</span><br><span class=\"line\">filetype plugin indent on</span><br><span class=\"line\">set nobackup &quot;不备份 </span><br><span class=\"line\">set autochdir &quot;自动切换当前目录</span><br><span class=\"line\">set mouse=a</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;启动，语法高亮，配色</span><br><span class=\"line\">winpos 500 200   &quot;窗口位置</span><br><span class=\"line\">set lines=30 columns=85  &quot;窗口大小</span><br><span class=\"line\">set guioptions-=T  &quot;不要菜单栏</span><br><span class=\"line\">set laststatus=2   &quot;总是显示状态栏</span><br><span class=\"line\">set hlsearch  &quot;搜索高亮</span><br><span class=\"line\">set ignorecase &quot;搜索忽略大小写</span><br><span class=\"line\">syntax enable</span><br><span class=\"line\">syntax on</span><br><span class=\"line\">set t_Co=256</span><br><span class=\"line\">set cursorline &quot;高亮光标行</span><br><span class=\"line\">set ruler   &quot;显示光标位置状态栏</span><br><span class=\"line\">set number</span><br><span class=\"line\">set guifont=Ubuntu\\ Mono\\ 13</span><br><span class=\"line\">colorscheme molokai</span><br><span class=\"line\">set clipboard=unnamed &quot;可以用系统剪贴板</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Tab相关</span><br><span class=\"line\">set expandtab &quot;制表符扩展为空格</span><br><span class=\"line\">set tabstop=4 &quot;制表符占用空格数</span><br><span class=\"line\">set softtabstop=4 &quot;将连续数量的空格视为一个制表符</span><br><span class=\"line\">set shiftwidth=4 &quot;格式化时制表符占用空格数</span><br><span class=\"line\">set cindent</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;编码相关</span><br><span class=\"line\">set encoding=utf-8</span><br><span class=\"line\">set langmenu=zh_CN.UTF-8</span><br><span class=\"line\">language message zh_CN.UTF-8</span><br><span class=\"line\">set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;使用CTRL+[hjkl]在窗口间导航&quot;</span><br><span class=\"line\">map &lt;C-c&gt; &lt;C-W&gt;c</span><br><span class=\"line\">map &lt;C-j&gt; &lt;C-W&gt;j</span><br><span class=\"line\">map &lt;C-k&gt; &lt;C-W&gt;k</span><br><span class=\"line\">map &lt;C-h&gt; &lt;C-W&gt;h</span><br><span class=\"line\">map &lt;C-l&gt; &lt;C-W&gt;l</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;使用箭头导航buffer&quot;</span><br><span class=\"line\">map &lt;right&gt; :bn&lt;cr&gt;</span><br><span class=\"line\">map &lt;left&gt; :bp&lt;cr&gt;</span><br><span class=\"line\">set autowrite &quot;在切换buffer时自动保存当前的文件</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;使用ALT+[jk]来移动行内容</span><br><span class=\"line\">nmap &lt;M-j&gt; mz:m+&lt;cr&gt;`z</span><br><span class=\"line\">nmap &lt;M-k&gt; mz:m-2&lt;cr&gt;`z</span><br><span class=\"line\">vmap &lt;M-j&gt; :m&apos;&gt;+&lt;cr&gt;`&lt;my`&gt;mzgv`yo`z</span><br><span class=\"line\">vmap &lt;M-k&gt; :m&apos;&lt;-2&lt;cr&gt;`&gt;my`&lt;mzgv`yo`z</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;根据文件类型做不同处理</span><br><span class=\"line\">function HeaderPython()  &quot;python加头注释</span><br><span class=\"line\">    call setline(1, &quot;#!/usr/bin/env python3&quot;)</span><br><span class=\"line\">    call append(1,  &quot;# -*- coding: utf-8 -*-&quot;)</span><br><span class=\"line\">    call append(2,  &quot;# mail:levy_lv@hotmail.com&quot;)</span><br><span class=\"line\">    call append(3,  &quot;# Lyu Wei @ &quot; . strftime(&apos;%Y-%m-%d&apos;, localtime()))</span><br><span class=\"line\">    normal G</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">endf</span><br><span class=\"line\">autocmd bufnewfile *.py call HeaderPython()</span><br><span class=\"line\"></span><br><span class=\"line\">function HeaderBash()  &quot;shell脚本加注释</span><br><span class=\"line\">    call setline(1, &quot;#!/bin/bash&quot;)</span><br><span class=\"line\">    call append(1,  &quot;# -*- coding: utf-8 -*-&quot;)</span><br><span class=\"line\">    call append(2,  &quot;# mail:levy_lv@hotmail.com&quot;)</span><br><span class=\"line\">    call append(3,  &quot;# Lyu Wei @ &quot; . strftime(&apos;%Y-%m-%d&apos;, localtime()))</span><br><span class=\"line\">    normal G</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">endf</span><br><span class=\"line\">autocmd bufnewfile *.sh call HeaderBash()</span><br><span class=\"line\"></span><br><span class=\"line\">function HeaderCpp() &quot;C++文件加头文件</span><br><span class=\"line\">    call setline(1, &quot;#include &lt;iostream&gt;&quot;)</span><br><span class=\"line\">    call append(1, &quot;using namespace std;&quot;)</span><br><span class=\"line\">    normal G</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">endf</span><br><span class=\"line\">autocmd bufnewfile *.cpp,*.cc call HeaderCpp()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;C,C++单个文件调试</span><br><span class=\"line\">map &lt;F8&gt; :call Rungdb()&lt;CR&gt;</span><br><span class=\"line\">func! Rungdb()</span><br><span class=\"line\">    exec &quot;w&quot;</span><br><span class=\"line\">    exec &quot;!g++ % -g -o %&lt;&quot;</span><br><span class=\"line\">    exec &quot;!gdb ./%&lt;&quot;</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">&quot;Vundle Configuration&quot;</span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">filetype off                  &quot; required</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; set the runtime path to include Vundle and initialize</span><br><span class=\"line\">set rtp+=~/.vim/bundle/Vundle.vim</span><br><span class=\"line\">call vundle#begin()</span><br><span class=\"line\">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class=\"line\">&quot;call vundle#begin(&apos;~/some/path/here&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let Vundle manage Vundle, required</span><br><span class=\"line\">Plugin &apos;VundleVim/Vundle.vim&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; My Plugin here:</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; plugin on GitHub repo</span><br><span class=\"line\">Plugin &apos;Valloric/YouCompleteMe&apos;</span><br><span class=\"line\">Plugin &apos;luochen1990/rainbow&apos;</span><br><span class=\"line\">&quot;Plugin &apos;majutsushi/tagbar&apos;</span><br><span class=\"line\">Plugin &apos;fholgado/minibufexpl.vim&apos;</span><br><span class=\"line\">Plugin &apos;scrooloose/nerdtree&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; All of your Plugins must be added before the following line</span><br><span class=\"line\">call vundle#end()            &quot; required</span><br><span class=\"line\">filetype plugin indent on    &quot; required</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;===========================&quot;</span><br><span class=\"line\">&quot;Vundle Plugin Configuration&quot;</span><br><span class=\"line\">&quot;===========================&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Rainbow</span><br><span class=\"line\">let g:rainbow_active = 1 &quot; 0 if you want to enable it later via: RainbowTogglw</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Tagbar</span><br><span class=\"line\">&quot;nmap &lt;F8&gt; :TagbarToggle&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;YouCompleteMe</span><br><span class=\"line\">&quot;let g:ycm_path_to_python_interpreter = &apos;/usr/bin/python&apos;</span><br><span class=\"line\">set runtimepath+=~/.vim/bundle/YouCompleteMe</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_tags_files = 1           &quot; 开启 YCM 基于标签引擎</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释与字符串中的内容也用于补全</span><br><span class=\"line\">let g:syntastic_ignore_files=[&quot;.*\\.py$&quot;]</span><br><span class=\"line\">let g:ycm_seed_identifiers_with_syntax = 1                  &quot; 语法关键字补全</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1</span><br><span class=\"line\">let g:ycm_confirm_extra_conf = 0</span><br><span class=\"line\">&quot;let g:ycm_key_list_select_completion = [&apos;&lt;c-n&gt;&apos;, &apos;&lt;Down&gt;&apos;]  &quot; 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.</span><br><span class=\"line\">&quot;let g:ycm_key_list_previous_completion = [&apos;&lt;c-p&gt;&apos;, &apos;&lt;Up&gt;&apos;]</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1                          &quot; 在注释输入中也能补全</span><br><span class=\"line\">let g:ycm_complete_in_strings = 1                           &quot; 在字符串输入中也能补全</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释和字符串中的文字也会被收入补全</span><br><span class=\"line\">let g:ycm_global_ycm_extra_conf=&apos;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&apos;</span><br><span class=\"line\">&quot;let g:ycm_show_diagnostics_ui = 0                           &quot; 禁用语法检查</span><br><span class=\"line\">inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;\\&lt;C-y&gt;&quot; : &quot;\\&lt;CR&gt;&quot; |            &quot; 回车即选中当前项</span><br><span class=\"line\">nnoremap &lt;F5&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</span><br><span class=\"line\">&quot;let g:ycm_min_num_of_chars_for_completion=2                 &quot; 从第2个键入字符就开始罗列匹配项</span><br><span class=\"line\">let g:ycm_autoclose_preview_window_after_completion = 1  &quot; 补全后自动关闭preview</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;minibufexpl</span><br><span class=\"line\">let g:miniBufExplMapWindowNavVim = 1 &quot;可以用&lt;C-h,j,k,l&gt;切换到上下左右的窗口 </span><br><span class=\"line\">let g:miniBufExplMapCTabSwitchBufs = 1 &quot;&lt;C-Tab&gt;,&lt;C-S-Tab&gt;切换</span><br><span class=\"line\">let g:miniBufExplModSelTarget = 1 </span><br><span class=\"line\"></span><br><span class=\"line\">&quot;NERDTree</span><br><span class=\"line\">nnoremap &lt;F4&gt; :NERDTreeToggle&lt;CR&gt;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Vim\"><a href=\"#Vim\" class=\"headerlink\" title=\"Vim\"></a>Vim</h1><p>Ubuntu自带的vim是vim.tiny版本，很多功能都不全，所以我们需要装一个完整版的，并且我习惯装一个gvim,<code>sudo apt-get install vim-gtk</code>。 有意思的是，我发现<code>apt-get</code>下面有一个叫<code>vim+youcompleteme</code>的版本，我就好奇得装了一下，结果打开vim发现并没有补全功能，但是却装了<code>ruby，nodejs,ycmd</code>等几个软件，<code>ycmd</code>应该就是补全软件，然而不知道该怎么在vim里使用…所以最终我还是按照github上的说明手动装了<code>youcompleteme</code>,这部分留到后文说。</p>","more":"<h2 id=\"插件Vundle\"><a href=\"#插件Vundle\" class=\"headerlink\" title=\"插件Vundle\"></a>插件Vundle</h2><p>Vundle是一个很实用的vim插件，通过它可以方便得管理其他插件，安装很简单。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br></pre></td></tr></table></figure></p>\n<p>装完之后，需要在<code>.vimrc</code>里进行配置，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set nocompatible              &quot; be iMproved, required</span><br><span class=\"line\">filetype off                  &quot; required</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; set the runtime path to include Vundle and initialize</span><br><span class=\"line\">set rtp+=~/.vim/bundle/Vundle.vim</span><br><span class=\"line\">call vundle#begin()</span><br><span class=\"line\">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class=\"line\">&quot;call vundle#begin(&apos;~/some/path/here&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let Vundle manage Vundle, required</span><br><span class=\"line\">Plugin &apos;VundleVim/Vundle.vim&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; The following are examples of different formats supported.</span><br><span class=\"line\">&quot; Keep Plugin commands between vundle#begin/end.</span><br><span class=\"line\">&quot; plugin on GitHub repo</span><br><span class=\"line\">Plugin &apos;tpope/vim-fugitive&apos;</span><br><span class=\"line\">&quot; plugin from http://vim-scripts.org/vim/scripts.html</span><br><span class=\"line\">&quot; Plugin &apos;L9&apos;</span><br><span class=\"line\">&quot; Git plugin not hosted on GitHub</span><br><span class=\"line\">Plugin &apos;git://git.wincent.com/command-t.git&apos;</span><br><span class=\"line\">&quot; git repos on your local machine (i.e. when working on your own plugin)</span><br><span class=\"line\">Plugin &apos;file:///home/gmarik/path/to/plugin&apos;</span><br><span class=\"line\">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span><br><span class=\"line\">&quot; Pass the path to set the runtimepath properly.</span><br><span class=\"line\">Plugin &apos;rstacruz/sparkup&apos;, &#123;&apos;rtp&apos;: &apos;vim/&apos;&#125;</span><br><span class=\"line\">&quot; Install L9 and avoid a Naming conflict if you&apos;ve already installed a</span><br><span class=\"line\">&quot; different version somewhere else.</span><br><span class=\"line\">&quot; Plugin &apos;ascenator/L9&apos;, &#123;&apos;name&apos;: &apos;newL9&apos;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; All of your Plugins must be added before the following line</span><br><span class=\"line\">call vundle#end()            &quot; required</span><br><span class=\"line\">filetype plugin indent on    &quot; required</span><br><span class=\"line\">&quot; To ignore plugin indent changes, instead use:</span><br><span class=\"line\">&quot;filetype plugin on</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; Brief help</span><br><span class=\"line\">&quot; :PluginList       - lists configured plugins</span><br><span class=\"line\">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span><br><span class=\"line\">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span><br><span class=\"line\">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span><br><span class=\"line\">&quot;</span><br><span class=\"line\">&quot; see :h vundle for more details or wiki for FAQ</span><br><span class=\"line\">&quot; Put your non-Plugin stuff after this line</span><br></pre></td></tr></table></figure></p>\n<p>最终打开vim，输入<code>：PluginInstall</code>来安装你在配置文件里写的插件。</p>\n<p>我安装了下面几个我常用的插件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot; My Plugin here:</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; plugin on GitHub repo</span><br><span class=\"line\">Plugin &apos;Valloric/YouCompleteMe&apos;</span><br><span class=\"line\">Plugin &apos;luochen1990/rainbow&apos;</span><br><span class=\"line\">Plugin &apos;fholgado/minibufexpl.vim&apos;</span><br><span class=\"line\">Plugin &apos;scrooloose/nerdtree&apos;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"YouCompleteMe\"><a href=\"#YouCompleteMe\" class=\"headerlink\" title=\"YouCompleteMe\"></a>YouCompleteMe</h1><p>在我的插件里可以看到我装了YouCompleteMe这个插件，但是光vundle装好还是不够的，我们需要再编译一个能用的引擎。</p>\n<h2 id=\"安装必备的编译环境和python环境\"><a href=\"#安装必备的编译环境和python环境\" class=\"headerlink\" title=\"安装必备的编译环境和python环境\"></a>安装必备的编译环境和python环境</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install build-essential cmake</span><br><span class=\"line\">sudo apt-get install python-dev python3-dev</span><br></pre></td></tr></table></figure>\n<h2 id=\"检查vim版本\"><a href=\"#检查vim版本\" class=\"headerlink\" title=\"检查vim版本\"></a>检查vim版本</h2><p>我们需要检查vim版本以及vim支持的python版本，保证vim版本高于7.4.1578,支持python2或者Python3。我们可以输入命令：<code>vim --version</code>来查看，以下是我的输出截图：<br><img src=\"http://upload-images.jianshu.io/upload_images/825093-cc5dac3d1fd71ef2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550\" alt=\"image.png\"><br>可以看到版本是7.4.1689，不支持python2,但支持python3（貌似Ubuntu16.04开始移除python2的支持了）。</p>\n<h2 id=\"编译支持C家族语义补全的YCM\"><a href=\"#编译支持C家族语义补全的YCM\" class=\"headerlink\" title=\"编译支持C家族语义补全的YCM\"></a>编译支持C家族语义补全的YCM</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.vim/bundle/YouCompleteMe</span><br><span class=\"line\">Python3 ./install.py --clang-completer //由于我的vim只支持Python3,所以在前面加python3命令</span><br></pre></td></tr></table></figure>\n<p>命令执行之后，系统会去下载libclang,因为YCM语义支持是靠clang编译器的，这里需要经过漫长得等待。。如果一切顺利的话，YCM就安装完毕了。</p>\n<h2 id=\"YCM配置\"><a href=\"#YCM配置\" class=\"headerlink\" title=\"YCM配置\"></a>YCM配置</h2><p>我的YCM配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;YouCompleteMe</span><br><span class=\"line\">&quot;let g:ycm_path_to_python_interpreter = &apos;/usr/bin/python&apos;</span><br><span class=\"line\">set runtimepath+=~/.vim/bundle/YouCompleteMe</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_tags_files = 1           &quot; 开启 YCM 基于标签引擎</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释与字符串中的内容也用于补全</span><br><span class=\"line\">let g:syntastic_ignore_files=[&quot;.*\\.py$&quot;]</span><br><span class=\"line\">let g:ycm_seed_identifiers_with_syntax = 1                  &quot; 语法关键字补全</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1</span><br><span class=\"line\">let g:ycm_confirm_extra_conf = 0</span><br><span class=\"line\">&quot;let g:ycm_key_list_select_completion = [&apos;&lt;c-n&gt;&apos;, &apos;&lt;Down&gt;&apos;]  &quot; 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.</span><br><span class=\"line\">&quot;let g:ycm_key_list_previous_completion = [&apos;&lt;c-p&gt;&apos;, &apos;&lt;Up&gt;&apos;]</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1                          &quot; 在注释输入中也能补全</span><br><span class=\"line\">let g:ycm_complete_in_strings = 1                           &quot; 在字符串输入中也能补全</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释和字符串中的文字也会被收入补全</span><br><span class=\"line\">let g:ycm_global_ycm_extra_conf=&apos;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&apos;</span><br><span class=\"line\">&quot;let g:ycm_show_diagnostics_ui = 0                           &quot; 禁用语法检查</span><br><span class=\"line\">inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;\\&lt;C-y&gt;&quot; : &quot;\\&lt;CR&gt;&quot; |            &quot; 回车即选中当前项</span><br><span class=\"line\">nnoremap &lt;F5&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</span><br><span class=\"line\">&quot;let g:ycm_min_num_of_chars_for_completion=2                 &quot; 从第2个键入字符就开始罗列匹配项</span><br><span class=\"line\">let g:ycm_autoclose_preview_window_after_completion = 1  &quot; 补全后自动关闭preview</span><br></pre></td></tr></table></figure></p>\n<p>一个能够进行语法检查，自动补全，并且GoToDefinition的YCM就可以使用了，但是还有一点瑕疵：＃include <iostream>, #include <stdio> vector, 什么的都不能补全，这是因为这些头文件的路径没有被找到，下面的工作就是要让YouCompleteMe找到这些头文件，而且，以后有什么库文件，比如OpenCV，OPenGL什么的，都可以按照这个方法添加。</stdio></iostream></p>\n<p>打开并编辑~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py，这就是我们设定vim默认调用的YCM配置文件，然后可以在flags[*]数组的后面添加你想要的路径，例如: stdio.h等Ｃ语言的头文件包含在/usr/include中，那么您需要添加这样一条</p>\n<blockquote>\n<p>‘-isystem’,<br>‘/usr/include’,</p>\n</blockquote>\n<p>如果需要C++的补全，就需要添加：</p>\n<blockquote>\n<p>‘-isystem’,<br>‘/usr/include/c++/5’,</p>\n</blockquote>\n<p>需要什么，就添加什么，现在编辑c/c++文件你就发现支持头文件补全了！</p>\n<h1 id=\"我的vim配置\"><a href=\"#我的vim配置\" class=\"headerlink\" title=\"我的vim配置\"></a>我的vim配置</h1><p>根据个人习惯，我的vimrc配置如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;Wei Lyu</span><br><span class=\"line\">&quot;levy_lv@hotmail.com</span><br><span class=\"line\">&quot;levylv.github.io</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">&quot;        通用        &quot;</span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">set nocompatible              &quot; be iMproved, required</span><br><span class=\"line\">filetype plugin indent on</span><br><span class=\"line\">set nobackup &quot;不备份 </span><br><span class=\"line\">set autochdir &quot;自动切换当前目录</span><br><span class=\"line\">set mouse=a</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;启动，语法高亮，配色</span><br><span class=\"line\">winpos 500 200   &quot;窗口位置</span><br><span class=\"line\">set lines=30 columns=85  &quot;窗口大小</span><br><span class=\"line\">set guioptions-=T  &quot;不要菜单栏</span><br><span class=\"line\">set laststatus=2   &quot;总是显示状态栏</span><br><span class=\"line\">set hlsearch  &quot;搜索高亮</span><br><span class=\"line\">set ignorecase &quot;搜索忽略大小写</span><br><span class=\"line\">syntax enable</span><br><span class=\"line\">syntax on</span><br><span class=\"line\">set t_Co=256</span><br><span class=\"line\">set cursorline &quot;高亮光标行</span><br><span class=\"line\">set ruler   &quot;显示光标位置状态栏</span><br><span class=\"line\">set number</span><br><span class=\"line\">set guifont=Ubuntu\\ Mono\\ 13</span><br><span class=\"line\">colorscheme molokai</span><br><span class=\"line\">set clipboard=unnamed &quot;可以用系统剪贴板</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Tab相关</span><br><span class=\"line\">set expandtab &quot;制表符扩展为空格</span><br><span class=\"line\">set tabstop=4 &quot;制表符占用空格数</span><br><span class=\"line\">set softtabstop=4 &quot;将连续数量的空格视为一个制表符</span><br><span class=\"line\">set shiftwidth=4 &quot;格式化时制表符占用空格数</span><br><span class=\"line\">set cindent</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;编码相关</span><br><span class=\"line\">set encoding=utf-8</span><br><span class=\"line\">set langmenu=zh_CN.UTF-8</span><br><span class=\"line\">language message zh_CN.UTF-8</span><br><span class=\"line\">set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;使用CTRL+[hjkl]在窗口间导航&quot;</span><br><span class=\"line\">map &lt;C-c&gt; &lt;C-W&gt;c</span><br><span class=\"line\">map &lt;C-j&gt; &lt;C-W&gt;j</span><br><span class=\"line\">map &lt;C-k&gt; &lt;C-W&gt;k</span><br><span class=\"line\">map &lt;C-h&gt; &lt;C-W&gt;h</span><br><span class=\"line\">map &lt;C-l&gt; &lt;C-W&gt;l</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;使用箭头导航buffer&quot;</span><br><span class=\"line\">map &lt;right&gt; :bn&lt;cr&gt;</span><br><span class=\"line\">map &lt;left&gt; :bp&lt;cr&gt;</span><br><span class=\"line\">set autowrite &quot;在切换buffer时自动保存当前的文件</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;&quot;使用ALT+[jk]来移动行内容</span><br><span class=\"line\">nmap &lt;M-j&gt; mz:m+&lt;cr&gt;`z</span><br><span class=\"line\">nmap &lt;M-k&gt; mz:m-2&lt;cr&gt;`z</span><br><span class=\"line\">vmap &lt;M-j&gt; :m&apos;&gt;+&lt;cr&gt;`&lt;my`&gt;mzgv`yo`z</span><br><span class=\"line\">vmap &lt;M-k&gt; :m&apos;&lt;-2&lt;cr&gt;`&gt;my`&lt;mzgv`yo`z</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;根据文件类型做不同处理</span><br><span class=\"line\">function HeaderPython()  &quot;python加头注释</span><br><span class=\"line\">    call setline(1, &quot;#!/usr/bin/env python3&quot;)</span><br><span class=\"line\">    call append(1,  &quot;# -*- coding: utf-8 -*-&quot;)</span><br><span class=\"line\">    call append(2,  &quot;# mail:levy_lv@hotmail.com&quot;)</span><br><span class=\"line\">    call append(3,  &quot;# Lyu Wei @ &quot; . strftime(&apos;%Y-%m-%d&apos;, localtime()))</span><br><span class=\"line\">    normal G</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">endf</span><br><span class=\"line\">autocmd bufnewfile *.py call HeaderPython()</span><br><span class=\"line\"></span><br><span class=\"line\">function HeaderBash()  &quot;shell脚本加注释</span><br><span class=\"line\">    call setline(1, &quot;#!/bin/bash&quot;)</span><br><span class=\"line\">    call append(1,  &quot;# -*- coding: utf-8 -*-&quot;)</span><br><span class=\"line\">    call append(2,  &quot;# mail:levy_lv@hotmail.com&quot;)</span><br><span class=\"line\">    call append(3,  &quot;# Lyu Wei @ &quot; . strftime(&apos;%Y-%m-%d&apos;, localtime()))</span><br><span class=\"line\">    normal G</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">endf</span><br><span class=\"line\">autocmd bufnewfile *.sh call HeaderBash()</span><br><span class=\"line\"></span><br><span class=\"line\">function HeaderCpp() &quot;C++文件加头文件</span><br><span class=\"line\">    call setline(1, &quot;#include &lt;iostream&gt;&quot;)</span><br><span class=\"line\">    call append(1, &quot;using namespace std;&quot;)</span><br><span class=\"line\">    normal G</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">    normal o</span><br><span class=\"line\">endf</span><br><span class=\"line\">autocmd bufnewfile *.cpp,*.cc call HeaderCpp()</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;C,C++单个文件调试</span><br><span class=\"line\">map &lt;F8&gt; :call Rungdb()&lt;CR&gt;</span><br><span class=\"line\">func! Rungdb()</span><br><span class=\"line\">    exec &quot;w&quot;</span><br><span class=\"line\">    exec &quot;!g++ % -g -o %&lt;&quot;</span><br><span class=\"line\">    exec &quot;!gdb ./%&lt;&quot;</span><br><span class=\"line\">endfunc</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">&quot;Vundle Configuration&quot;</span><br><span class=\"line\">&quot;====================&quot;</span><br><span class=\"line\">filetype off                  &quot; required</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; set the runtime path to include Vundle and initialize</span><br><span class=\"line\">set rtp+=~/.vim/bundle/Vundle.vim</span><br><span class=\"line\">call vundle#begin()</span><br><span class=\"line\">&quot; alternatively, pass a path where Vundle should install plugins</span><br><span class=\"line\">&quot;call vundle#begin(&apos;~/some/path/here&apos;)</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; let Vundle manage Vundle, required</span><br><span class=\"line\">Plugin &apos;VundleVim/Vundle.vim&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; My Plugin here:</span><br><span class=\"line\"></span><br><span class=\"line\">&quot; plugin on GitHub repo</span><br><span class=\"line\">Plugin &apos;Valloric/YouCompleteMe&apos;</span><br><span class=\"line\">Plugin &apos;luochen1990/rainbow&apos;</span><br><span class=\"line\">&quot;Plugin &apos;majutsushi/tagbar&apos;</span><br><span class=\"line\">Plugin &apos;fholgado/minibufexpl.vim&apos;</span><br><span class=\"line\">Plugin &apos;scrooloose/nerdtree&apos;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot; All of your Plugins must be added before the following line</span><br><span class=\"line\">call vundle#end()            &quot; required</span><br><span class=\"line\">filetype plugin indent on    &quot; required</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&quot;===========================&quot;</span><br><span class=\"line\">&quot;Vundle Plugin Configuration&quot;</span><br><span class=\"line\">&quot;===========================&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Rainbow</span><br><span class=\"line\">let g:rainbow_active = 1 &quot; 0 if you want to enable it later via: RainbowTogglw</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;Tagbar</span><br><span class=\"line\">&quot;nmap &lt;F8&gt; :TagbarToggle&lt;CR&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;YouCompleteMe</span><br><span class=\"line\">&quot;let g:ycm_path_to_python_interpreter = &apos;/usr/bin/python&apos;</span><br><span class=\"line\">set runtimepath+=~/.vim/bundle/YouCompleteMe</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_tags_files = 1           &quot; 开启 YCM 基于标签引擎</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释与字符串中的内容也用于补全</span><br><span class=\"line\">let g:syntastic_ignore_files=[&quot;.*\\.py$&quot;]</span><br><span class=\"line\">let g:ycm_seed_identifiers_with_syntax = 1                  &quot; 语法关键字补全</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1</span><br><span class=\"line\">let g:ycm_confirm_extra_conf = 0</span><br><span class=\"line\">&quot;let g:ycm_key_list_select_completion = [&apos;&lt;c-n&gt;&apos;, &apos;&lt;Down&gt;&apos;]  &quot; 映射按键, 没有这个会拦截掉tab, 导致其他插件的tab不能用.</span><br><span class=\"line\">&quot;let g:ycm_key_list_previous_completion = [&apos;&lt;c-p&gt;&apos;, &apos;&lt;Up&gt;&apos;]</span><br><span class=\"line\">let g:ycm_complete_in_comments = 1                          &quot; 在注释输入中也能补全</span><br><span class=\"line\">let g:ycm_complete_in_strings = 1                           &quot; 在字符串输入中也能补全</span><br><span class=\"line\">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot; 注释和字符串中的文字也会被收入补全</span><br><span class=\"line\">let g:ycm_global_ycm_extra_conf=&apos;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&apos;</span><br><span class=\"line\">&quot;let g:ycm_show_diagnostics_ui = 0                           &quot; 禁用语法检查</span><br><span class=\"line\">inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;\\&lt;C-y&gt;&quot; : &quot;\\&lt;CR&gt;&quot; |            &quot; 回车即选中当前项</span><br><span class=\"line\">nnoremap &lt;F5&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;</span><br><span class=\"line\">&quot;let g:ycm_min_num_of_chars_for_completion=2                 &quot; 从第2个键入字符就开始罗列匹配项</span><br><span class=\"line\">let g:ycm_autoclose_preview_window_after_completion = 1  &quot; 补全后自动关闭preview</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;minibufexpl</span><br><span class=\"line\">let g:miniBufExplMapWindowNavVim = 1 &quot;可以用&lt;C-h,j,k,l&gt;切换到上下左右的窗口 </span><br><span class=\"line\">let g:miniBufExplMapCTabSwitchBufs = 1 &quot;&lt;C-Tab&gt;,&lt;C-S-Tab&gt;切换</span><br><span class=\"line\">let g:miniBufExplModSelTarget = 1 </span><br><span class=\"line\"></span><br><span class=\"line\">&quot;NERDTree</span><br><span class=\"line\">nnoremap &lt;F4&gt; :NERDTreeToggle&lt;CR&gt;</span><br></pre></td></tr></table></figure></p>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckb0jj8yg00008edk7iqu6xgw","tag_id":"ckb0jj8yr00038edke7vsy9vb","_id":"ckb0jj8z000088edk2xx8qit4"},{"post_id":"ckb0jj8yn00028edkkh0gl336","tag_id":"ckb0jj8yz00078edk3ixkt04p","_id":"ckb0jj8z4000d8edkfvljnp0p"},{"post_id":"ckb0jj8z3000c8edko7kdt533","tag_id":"ckb0jj8yz00078edk3ixkt04p","_id":"ckb0jj8z9000g8edk13cpblc4"},{"post_id":"ckb0jj8yt00048edksuek8j4l","tag_id":"ckb0jj8z2000b8edki6fmuwn2","_id":"ckb0jj8zc000i8edk5r1y5arr"},{"post_id":"ckb0jj8yw00058edkcwdiqokq","tag_id":"ckb0jj8z2000b8edki6fmuwn2","_id":"ckb0jj8zd000k8edkvj18h80t"},{"post_id":"ckb0jj8yy00068edkoswupvl4","tag_id":"ckb0jj8zc000j8edkz0q6e7si","_id":"ckb0jj8ze000m8edk79249nbb"},{"post_id":"ckb0jj8z000098edkphcswvk5","tag_id":"ckb0jj8zd000l8edk7j7z08y7","_id":"ckb0jj8zf000o8edkmzt2dhzv"},{"post_id":"ckb0jj8z1000a8edkrncxd18y","tag_id":"ckb0jj8z2000b8edki6fmuwn2","_id":"ckb0jj8zh000q8edkc80iksdt"},{"post_id":"ckb0jj8z5000e8edkw6rcesfo","tag_id":"ckb0jj8zg000p8edkspxm1axd","_id":"ckb0jj8zi000s8edkx3wzfpzh"},{"post_id":"ckb0jj8za000h8edkmx1d21h9","tag_id":"ckb0jj8zh000r8edk2u9rxif0","_id":"ckb0jj8zi000t8edkvaftbl2w"}],"Tag":[{"name":"C/C++","_id":"ckb0jj8yr00038edke7vsy9vb"},{"name":"Tensorflow","_id":"ckb0jj8yz00078edk3ixkt04p"},{"name":"Ubuntu","_id":"ckb0jj8z2000b8edki6fmuwn2"},{"name":"Algorithm","_id":"ckb0jj8zc000j8edkz0q6e7si"},{"name":"Latex","_id":"ckb0jj8zd000l8edk7j7z08y7"},{"name":"Machine Learning","_id":"ckb0jj8zg000p8edkspxm1axd"},{"name":"Vim","_id":"ckb0jj8zh000r8edk2u9rxif0"}]}}